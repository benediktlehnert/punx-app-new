{"ast":null,"code":"var _jsxFileName = \"/Users/benediktlehnert/Documents/GitHub/punx-app-new/src/screens/GameScreen.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useGame } from '../context/GameContext';\nimport PunctuationCharacter from '../components/PunctuationCharacter';\nimport { shuffleArray } from '../utils/shuffle';\nimport { Button } from '../components/Button';\nimport '../styles/GameScreen.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst samplePhrases = {\n  period: [{\n    text: \"I love to play in the park\",\n    answer: \"period\",\n    position: 'end'\n  }, {\n    text: \"The sun is shining today\",\n    answer: \"period\",\n    position: 'end'\n  }],\n  exclamation: [{\n    text: \"What a wonderful day\",\n    answer: \"exclamation\",\n    position: 'end'\n  }, {\n    text: \"I canâ€™t believe it\",\n    answer: \"exclamation\",\n    position: 'end'\n  }],\n  question: [{\n    text: \"How are you today\",\n    answer: \"question\",\n    position: 'end'\n  }, {\n    text: \"Where did you go\",\n    answer: \"question\",\n    position: 'end'\n  }],\n  comma: [{\n    text: \"After the movie we went home\",\n    answer: \"comma\",\n    position: 2\n  },\n  // After index 2 (after \"movie\")\n  {\n    text: \"Yes I would love to\",\n    answer: \"comma\",\n    position: 0\n  } // After index 1 (after \"Yes\")\n  ]\n};\nconst punctuationTypes = ['period', 'exclamation', 'question', 'comma'];\nconst GameOverDialog = ({\n  open,\n  onClose,\n  score\n}) => /*#__PURE__*/_jsxDEV(\"dialog\", {\n  open: open,\n  className: \"game-over-dialog\",\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dialog-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Time's Up!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"score-correct\",\n      children: [\"Correct Answers: \", score.correct]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"score-incorrect\",\n      children: [\"Incorrect Answers: \", score.incorrect]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"feedback\",\n      children: score.correct > score.incorrect ? \"Great job! You're getting really good at this!\" : \"Keep practicing, you're getting better!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dialog-actions\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClose,\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 57,\n  columnNumber: 3\n}, this);\n_c = GameOverDialog;\nconst GameScreen = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    punctuationType,\n    settings\n  } = useGame();\n  const [currentPhraseIndex, setCurrentPhraseIndex] = React.useState(0);\n  const [currentPhrase, setCurrentPhrase] = React.useState(null);\n  const [selectedMark, setSelectedMark] = React.useState(null);\n  const [isCorrect, setIsCorrect] = React.useState(null);\n  const [score, setScore] = React.useState({\n    correct: 0,\n    incorrect: 0\n  });\n  const [hasStarted, setHasStarted] = React.useState(false);\n  const [timeLeft, setTimeLeft] = React.useState(null);\n  const [gameOverOpen, setGameOverOpen] = React.useState(false);\n  const [shuffledTypes, setShuffledTypes] = React.useState(['period', 'exclamation', 'question', 'comma']);\n  const [feedback, setFeedback] = React.useState(null);\n  const timerRef = React.useRef(null);\n  const [dragPosition, setDragPosition] = useState(null);\n  const [closestDropZone, setClosestDropZone] = useState(null);\n  const phrases = React.useMemo(() => shuffleArray(Object.values(samplePhrases).flat()), []);\n  React.useEffect(() => {\n    setCurrentPhrase(phrases[currentPhraseIndex]);\n  }, [currentPhraseIndex, phrases]);\n  const startTimer = React.useCallback(() => {\n    if (!hasStarted && settings.timer) {\n      setHasStarted(true);\n      setTimeLeft(settings.timeLimit);\n    }\n  }, [hasStarted, settings.timer, settings.timeLimit]);\n  React.useEffect(() => {\n    if (hasStarted && settings.timer && timeLeft !== null && timeLeft > 0) {\n      timerRef.current = setInterval(() => {\n        setTimeLeft(prev => {\n          if (prev === null || prev <= 1) {\n            if (timerRef.current) {\n              clearInterval(timerRef.current);\n            }\n            setGameOverOpen(true);\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n      return () => {\n        if (timerRef.current) {\n          clearInterval(timerRef.current);\n        }\n      };\n    }\n  }, [hasStarted, settings.timer, timeLeft]);\n  React.useEffect(() => {\n    return () => {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    };\n  }, []);\n  const handleFirstInteraction = () => {\n    startTimer();\n  };\n  const getFeedbackMessage = (type, isCorrect) => {\n    if (isCorrect) {\n      return {\n        text: \"Great job! That's exactly right!\",\n        type: 'success'\n      };\n    }\n    const correctType = currentPhrase === null || currentPhrase === void 0 ? void 0 : currentPhrase.answer;\n    switch (correctType) {\n      case 'period':\n        return {\n          text: \"This sentence needs a period to show it's complete.\",\n          type: 'error'\n        };\n      case 'question':\n        return {\n          text: \"This is a question, so it needs a question mark.\",\n          type: 'error'\n        };\n      case 'exclamation':\n        return {\n          text: \"This sentence shows strong feeling or emotion, so it needs an exclamation mark!\",\n          type: 'error'\n        };\n      case 'comma':\n        return {\n          text: \"A comma is needed here to separate parts of the sentence.\",\n          type: 'error'\n        };\n      default:\n        return {\n          text: \"That's not quite right. Try again!\",\n          type: 'error'\n        };\n    }\n  };\n  const handleCharacterSelect = type => {\n    if (!currentPhrase) return;\n\n    // Start timer on first interaction if not started\n    if (!hasStarted) {\n      startTimer();\n    }\n    setSelectedMark(type);\n    const isCorrectMark = type === currentPhrase.answer;\n    setIsCorrect(isCorrectMark);\n    if (isCorrectMark) {\n      setScore(prev => ({\n        ...prev,\n        correct: prev.correct + 1\n      }));\n    } else {\n      setScore(prev => ({\n        ...prev,\n        incorrect: prev.incorrect + 1\n      }));\n    }\n\n    // Wait for animation then move to next phrase\n    setTimeout(() => {\n      setSelectedMark(null);\n      setIsCorrect(null);\n      goToNextPhrase();\n    }, 1000);\n  };\n  const goToNextPhrase = () => {\n    const nextIndex = (currentPhraseIndex + 1) % phrases.length;\n    setCurrentPhraseIndex(nextIndex);\n  };\n  const handleDrop = e => {\n    e.preventDefault();\n    e.currentTarget.classList.remove('dragover');\n    const droppedType = e.dataTransfer.getData('application/punctuation');\n    console.log('Dropped type:', droppedType); // Add this for debugging\n\n    if (droppedType) {\n      handleCharacterSelect(droppedType);\n    }\n  };\n  const handleDragOver = e => {\n    e.preventDefault(); // This is crucial for enabling drop\n    e.currentTarget.style.backgroundColor = 'rgba(0, 0, 0, 0.1)';\n  };\n  const handleDragLeave = e => {\n    e.preventDefault();\n    e.currentTarget.style.backgroundColor = 'transparent';\n  };\n  const handleDragStart = e => {\n    startTimer();\n    e.dataTransfer.setData('text/plain', e.currentTarget.id);\n  };\n  const findClosestWord = useCallback(dragPos => {\n    if (!dragPos) return null;\n\n    // Get all word elements\n    const wordElements = document.querySelectorAll('[data-dropzone=\"true\"]');\n    let closestDropZone = null;\n    let closestDistance = Infinity;\n    wordElements.forEach((element, index) => {\n      const rect = element.getBoundingClientRect();\n      const dropZoneCenter = {\n        x: rect.left + rect.width / 2,\n        y: rect.top + rect.height / 2\n      };\n      const distance = Math.sqrt(Math.pow(dragPos.x - dropZoneCenter.x, 2) + Math.pow(dragPos.y - dropZoneCenter.y, 2));\n      if (distance < closestDistance) {\n        closestDistance = distance;\n        closestDropZone = index;\n      }\n    });\n\n    // Only return the closest drop zone if it's within a reasonable distance (e.g., 200px)\n    return closestDistance < 200 ? closestDropZone : null;\n  }, []);\n  const renderPhrase = () => {\n    if (!currentPhrase) return null;\n    const words = currentPhrase.text.split(' ');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        textAlign: 'center',\n        willChange: 'transform',\n        transform: 'translateZ(0)',\n        backfaceVisibility: 'hidden'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontFamily: '\"Bookman Old Style Regular\", \"Bookman\", \"URW Bookman L\", serif',\n          fontWeight: 'normal',\n          fontSize: window.innerWidth < 600 ? '80px' : window.innerWidth < 960 ? '100px' : window.innerWidth < 1280 ? '120px' : '140px',\n          lineHeight: '1.1',\n          display: 'inline-block',\n          textAlign: 'left',\n          maxWidth: '90%',\n          margin: '0 auto',\n          WebkitFontSmoothing: 'antialiased',\n          WebkitTextSizeAdjust: '100%',\n          color: '#000000'\n        },\n        children: words.map((word, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              display: 'inline-block',\n              fontFamily: '\"Bookman Old Style Regular\", \"Bookman\", \"URW Bookman L\", serif'\n            },\n            children: word\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            \"data-dropzone\": \"true\",\n            style: {\n              display: 'inline-flex',\n              width: '140px',\n              height: '140px',\n              border: '6px dashed #ccc',\n              borderRadius: '20px',\n              margin: '0 16px',\n              verticalAlign: 'top',\n              justifyContent: 'center',\n              alignItems: 'center',\n              transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\n              opacity: currentPhrase.position === index || index === words.length - 1 && currentPhrase.position === 'end' ? 1 : 0.3\n            },\n            onDragOver: e => {\n              e.preventDefault();\n              e.currentTarget.style.border = '6px dashed #666';\n              e.currentTarget.style.transform = 'scale(1.05)';\n              e.currentTarget.style.opacity = '1';\n            },\n            onDragLeave: e => {\n              e.preventDefault();\n              e.currentTarget.style.border = '6px dashed #ccc';\n              e.currentTarget.style.transform = 'scale(1)';\n              e.currentTarget.style.opacity = currentPhrase.position === index || index === words.length - 1 && currentPhrase.position === 'end' ? '1' : '0.3';\n            },\n            onDrop: e => {\n              e.preventDefault();\n              e.currentTarget.style.border = '6px dashed #ccc';\n              e.currentTarget.style.transform = 'scale(1)';\n              e.currentTarget.style.opacity = currentPhrase.position === index || index === words.length - 1 && currentPhrase.position === 'end' ? '1' : '0.3';\n              handleDrop(e);\n            },\n            children: selectedMark && currentPhrase.position === index && /*#__PURE__*/_jsxDEV(PunctuationCharacter, {\n              type: selectedMark,\n              onClick: () => {},\n              isCorrect: isCorrect,\n              isDraggable: false,\n              onSelect: () => {}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 15\n          }, this), ' ']\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this);\n  };\n  const handleGameOverClose = () => {\n    setGameOverOpen(false);\n    navigate('/select');\n  };\n  const formatTime = seconds => {\n    if (seconds === null) return \"0:00\";\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n  const TimerDisplay = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `timer ${!hasStarted || timeLeft === null ? '' : timeLeft < 10 ? 'timer-warning' : ''}`,\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"timer-text\",\n      children: formatTime(timeLeft)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 380,\n    columnNumber: 5\n  }, this);\n  React.useEffect(() => {\n    if (settings.timer) {\n      setTimeLeft(settings.timeLimit);\n    }\n  }, [settings.timer, settings.timeLimit]);\n  const TopBar = () => /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"top-bar\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => navigate('/select'),\n      children: \"DONE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"score-display\",\n      children: [\"CORRECT: \", score.correct, \" INCORRECT: \", score.incorrect]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 395,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-screen\",\n    children: [/*#__PURE__*/_jsxDEV(TopBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"game-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"phrase-container\",\n        children: renderPhrase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"character-controls\",\n      children: shuffledTypes.map(type => /*#__PURE__*/_jsxDEV(PunctuationCharacter, {\n        type: type,\n        onClick: () => handleCharacterSelect(type),\n        isCorrect: undefined,\n        isDraggable: true,\n        onDragStart: () => setSelectedMark(null),\n        onSelect: handleCharacterSelect\n      }, type, false, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 7\n    }, this), settings.timer && /*#__PURE__*/_jsxDEV(TimerDisplay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(GameOverDialog, {\n      open: gameOverOpen,\n      onClose: handleGameOverClose,\n      score: score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 406,\n    columnNumber: 5\n  }, this);\n};\n_s(GameScreen, \"qTKRTDAfO8gjdmJGo5LGaxeDkfA=\", false, function () {\n  return [useNavigate, useGame];\n});\n_c2 = GameScreen;\nexport default GameScreen;\nvar _c, _c2;\n$RefreshReg$(_c, \"GameOverDialog\");\n$RefreshReg$(_c2, \"GameScreen\");","map":{"version":3,"names":["React","useState","useCallback","useNavigate","useGame","PunctuationCharacter","shuffleArray","Button","jsxDEV","_jsxDEV","samplePhrases","period","text","answer","position","exclamation","question","comma","punctuationTypes","GameOverDialog","open","onClose","score","className","children","fileName","_jsxFileName","lineNumber","columnNumber","correct","incorrect","onClick","_c","GameScreen","_s","navigate","punctuationType","settings","currentPhraseIndex","setCurrentPhraseIndex","currentPhrase","setCurrentPhrase","selectedMark","setSelectedMark","isCorrect","setIsCorrect","setScore","hasStarted","setHasStarted","timeLeft","setTimeLeft","gameOverOpen","setGameOverOpen","shuffledTypes","setShuffledTypes","feedback","setFeedback","timerRef","useRef","dragPosition","setDragPosition","closestDropZone","setClosestDropZone","phrases","useMemo","Object","values","flat","useEffect","startTimer","timer","timeLimit","current","setInterval","prev","clearInterval","handleFirstInteraction","getFeedbackMessage","type","correctType","handleCharacterSelect","isCorrectMark","setTimeout","goToNextPhrase","nextIndex","length","handleDrop","e","preventDefault","currentTarget","classList","remove","droppedType","dataTransfer","getData","console","log","handleDragOver","style","backgroundColor","handleDragLeave","handleDragStart","setData","id","findClosestWord","dragPos","wordElements","document","querySelectorAll","closestDistance","Infinity","forEach","element","index","rect","getBoundingClientRect","dropZoneCenter","x","left","width","y","top","height","distance","Math","sqrt","pow","renderPhrase","words","split","textAlign","willChange","transform","backfaceVisibility","fontFamily","fontWeight","fontSize","window","innerWidth","lineHeight","display","maxWidth","margin","WebkitFontSmoothing","WebkitTextSizeAdjust","color","map","word","Fragment","border","borderRadius","verticalAlign","justifyContent","alignItems","transition","opacity","onDragOver","onDragLeave","onDrop","isDraggable","onSelect","handleGameOverClose","formatTime","seconds","minutes","floor","remainingSeconds","toString","padStart","TimerDisplay","TopBar","undefined","onDragStart","_c2","$RefreshReg$"],"sources":["/Users/benediktlehnert/Documents/GitHub/punx-app-new/src/screens/GameScreen.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useGame } from '../context/GameContext';\nimport PunctuationCharacter from '../components/PunctuationCharacter';\nimport { shuffleArray } from '../utils/shuffle';\nimport { Button } from '../components/Button';\nimport '../styles/GameScreen.css';\n\ntype Phrase = {\n  text: string;\n  answer: string;\n  position: 'end' | number; // 'end' or index where punctuation should go\n};\n\ntype PhraseCollection = {\n  period: Phrase[];\n  exclamation: Phrase[];\n  question: Phrase[];\n  comma: Phrase[];\n};\n\nconst samplePhrases: PhraseCollection = {\n  period: [\n    { text: \"I love to play in the park\", answer: \"period\", position: 'end' },\n    { text: \"The sun is shining today\", answer: \"period\", position: 'end' },\n  ],\n  exclamation: [\n    { text: \"What a wonderful day\", answer: \"exclamation\", position: 'end' },\n    { text: \"I canâ€™t believe it\", answer: \"exclamation\", position: 'end' },\n  ],\n  question: [\n    { text: \"How are you today\", answer: \"question\", position: 'end' },\n    { text: \"Where did you go\", answer: \"question\", position: 'end' },\n  ],\n  comma: [\n    { text: \"After the movie we went home\", answer: \"comma\", position: 2 }, // After index 2 (after \"movie\")\n    { text: \"Yes I would love to\", answer: \"comma\", position: 0 }, // After index 1 (after \"Yes\")\n  ],\n};\n\ntype PunctuationType = 'period' | 'exclamation' | 'question' | 'comma';\n\nconst punctuationTypes: PunctuationType[] = ['period', 'exclamation', 'question', 'comma'];\n\ninterface FeedbackMessage {\n  text: string;\n  type: 'success' | 'error';\n}\n\ninterface GameOverDialogProps {\n  open: boolean;\n  onClose: () => void;\n  score: { correct: number; incorrect: number };\n}\n\nconst GameOverDialog = ({ open, onClose, score }: GameOverDialogProps) => (\n  <dialog open={open} className=\"game-over-dialog\">\n    <div className=\"dialog-content\">\n      <h2>Time's Up!</h2>\n      <p className=\"score-correct\">Correct Answers: {score.correct}</p>\n      <p className=\"score-incorrect\">Incorrect Answers: {score.incorrect}</p>\n      <p className=\"feedback\">\n        {score.correct > score.incorrect \n          ? \"Great job! You're getting really good at this!\" \n          : \"Keep practicing, you're getting better!\"}\n      </p>\n      <div className=\"dialog-actions\">\n        <Button onClick={onClose}>Play Again</Button>\n      </div>\n    </div>\n  </dialog>\n);\n\nconst GameScreen = () => {\n  const navigate = useNavigate();\n  const { punctuationType, settings } = useGame();\n  const [currentPhraseIndex, setCurrentPhraseIndex] = React.useState(0);\n  const [currentPhrase, setCurrentPhrase] = React.useState<Phrase | null>(null);\n  const [selectedMark, setSelectedMark] = React.useState<PunctuationType | null>(null);\n  const [isCorrect, setIsCorrect] = React.useState<boolean | null>(null);\n  const [score, setScore] = React.useState({ correct: 0, incorrect: 0 });\n  const [hasStarted, setHasStarted] = React.useState(false);\n  const [timeLeft, setTimeLeft] = React.useState<number | null>(null);\n  const [gameOverOpen, setGameOverOpen] = React.useState(false);\n  const [shuffledTypes, setShuffledTypes] = React.useState<PunctuationType[]>(['period', 'exclamation', 'question', 'comma']);\n  const [feedback, setFeedback] = React.useState<FeedbackMessage | null>(null);\n  const timerRef = React.useRef<NodeJS.Timeout | null>(null);\n  const [dragPosition, setDragPosition] = useState<{ x: number; y: number } | null>(null);\n  const [closestDropZone, setClosestDropZone] = useState<number | null>(null);\n\n  const phrases = React.useMemo(() => shuffleArray(Object.values(samplePhrases).flat()), []);\n\n  React.useEffect(() => {\n    setCurrentPhrase(phrases[currentPhraseIndex]);\n  }, [currentPhraseIndex, phrases]);\n\n  const startTimer = React.useCallback(() => {\n    if (!hasStarted && settings.timer) {\n      setHasStarted(true);\n      setTimeLeft(settings.timeLimit);\n    }\n  }, [hasStarted, settings.timer, settings.timeLimit]);\n\n  React.useEffect(() => {\n    if (hasStarted && settings.timer && timeLeft !== null && timeLeft > 0) {\n      timerRef.current = setInterval(() => {\n        setTimeLeft((prev) => {\n          if (prev === null || prev <= 1) {\n            if (timerRef.current) {\n              clearInterval(timerRef.current);\n            }\n            setGameOverOpen(true);\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n\n      return () => {\n        if (timerRef.current) {\n          clearInterval(timerRef.current);\n        }\n      };\n    }\n  }, [hasStarted, settings.timer, timeLeft]);\n\n  React.useEffect(() => {\n    return () => {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    };\n  }, []);\n\n  const handleFirstInteraction = () => {\n    startTimer();\n  };\n\n  const getFeedbackMessage = (type: string, isCorrect: boolean): FeedbackMessage => {\n    if (isCorrect) {\n      return {\n        text: \"Great job! That's exactly right!\",\n        type: 'success'\n      };\n    }\n\n    const correctType = currentPhrase?.answer;\n    switch (correctType) {\n      case 'period':\n        return {\n          text: \"This sentence needs a period to show it's complete.\",\n          type: 'error'\n        };\n      case 'question':\n        return {\n          text: \"This is a question, so it needs a question mark.\",\n          type: 'error'\n        };\n      case 'exclamation':\n        return {\n          text: \"This sentence shows strong feeling or emotion, so it needs an exclamation mark!\",\n          type: 'error'\n        };\n      case 'comma':\n        return {\n          text: \"A comma is needed here to separate parts of the sentence.\",\n          type: 'error'\n        };\n      default:\n        return {\n          text: \"That's not quite right. Try again!\",\n          type: 'error'\n        };\n    }\n  };\n\n  const handleCharacterSelect = (type: PunctuationType) => {\n    if (!currentPhrase) return;\n\n    // Start timer on first interaction if not started\n    if (!hasStarted) {\n      startTimer();\n    }\n\n    setSelectedMark(type);\n    const isCorrectMark = type === currentPhrase.answer;\n    setIsCorrect(isCorrectMark);\n\n    if (isCorrectMark) {\n      setScore(prev => ({\n        ...prev,\n        correct: prev.correct + 1\n      }));\n    } else {\n      setScore(prev => ({\n        ...prev,\n        incorrect: prev.incorrect + 1\n      }));\n    }\n\n    // Wait for animation then move to next phrase\n    setTimeout(() => {\n      setSelectedMark(null);\n      setIsCorrect(null);\n      goToNextPhrase();\n    }, 1000);\n  };\n\n  const goToNextPhrase = () => {\n    const nextIndex = (currentPhraseIndex + 1) % phrases.length;\n    setCurrentPhraseIndex(nextIndex);\n  };\n\n  const handleDrop = (e: React.DragEvent<HTMLElement>) => {\n    e.preventDefault();\n    e.currentTarget.classList.remove('dragover');\n    const droppedType = e.dataTransfer.getData('application/punctuation') as PunctuationType;\n    \n    console.log('Dropped type:', droppedType); // Add this for debugging\n    \n    if (droppedType) {\n      handleCharacterSelect(droppedType);\n    }\n  };\n\n  const handleDragOver = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault(); // This is crucial for enabling drop\n    e.currentTarget.style.backgroundColor = 'rgba(0, 0, 0, 0.1)';\n  };\n\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    e.currentTarget.style.backgroundColor = 'transparent';\n  };\n\n  const handleDragStart = (e: React.DragEvent) => {\n    startTimer();\n    e.dataTransfer.setData('text/plain', e.currentTarget.id);\n  };\n\n  const findClosestWord = useCallback((dragPos: { x: number; y: number } | null) => {\n    if (!dragPos) return null;\n\n    // Get all word elements\n    const wordElements = document.querySelectorAll('[data-dropzone=\"true\"]');\n    let closestDropZone = null;\n    let closestDistance = Infinity;\n\n    wordElements.forEach((element, index) => {\n      const rect = element.getBoundingClientRect();\n      const dropZoneCenter = {\n        x: rect.left + rect.width / 2,\n        y: rect.top + rect.height / 2\n      };\n\n      const distance = Math.sqrt(\n        Math.pow(dragPos.x - dropZoneCenter.x, 2) + \n        Math.pow(dragPos.y - dropZoneCenter.y, 2)\n      );\n\n      if (distance < closestDistance) {\n        closestDistance = distance;\n        closestDropZone = index;\n      }\n    });\n\n    // Only return the closest drop zone if it's within a reasonable distance (e.g., 200px)\n    return closestDistance < 200 ? closestDropZone : null;\n  }, []);\n\n  const renderPhrase = () => {\n    if (!currentPhrase) return null;\n\n    const words = currentPhrase.text.split(' ');\n    \n    return (\n      <div \n        style={{ \n          width: '100%',\n          textAlign: 'center',\n          willChange: 'transform',\n          transform: 'translateZ(0)',\n          backfaceVisibility: 'hidden'\n        }}\n      >\n        <div \n          style={{\n            fontFamily: '\"Bookman Old Style Regular\", \"Bookman\", \"URW Bookman L\", serif',\n            fontWeight: 'normal',\n            fontSize: window.innerWidth < 600 ? '80px' : \n                     window.innerWidth < 960 ? '100px' : \n                     window.innerWidth < 1280 ? '120px' : '140px',\n            lineHeight: '1.1',\n            display: 'inline-block',\n            textAlign: 'left',\n            maxWidth: '90%',\n            margin: '0 auto',\n            WebkitFontSmoothing: 'antialiased',\n            WebkitTextSizeAdjust: '100%',\n            color: '#000000'\n          }}\n        >\n          {words.map((word, index) => (\n            <React.Fragment key={index}>\n              <span style={{ \n                display: 'inline-block',\n                fontFamily: '\"Bookman Old Style Regular\", \"Bookman\", \"URW Bookman L\", serif'\n              }}>\n                {word}\n              </span>\n              <span\n                data-dropzone=\"true\"\n                style={{\n                  display: 'inline-flex',\n                  width: '140px',\n                  height: '140px',\n                  border: '6px dashed #ccc',\n                  borderRadius: '20px',\n                  margin: '0 16px',\n                  verticalAlign: 'top',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                  transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\n                  opacity: currentPhrase.position === index || \n                          (index === words.length - 1 && currentPhrase.position === 'end') ? 1 : 0.3\n                }}\n                onDragOver={(e) => {\n                  e.preventDefault();\n                  e.currentTarget.style.border = '6px dashed #666';\n                  e.currentTarget.style.transform = 'scale(1.05)';\n                  e.currentTarget.style.opacity = '1';\n                }}\n                onDragLeave={(e) => {\n                  e.preventDefault();\n                  e.currentTarget.style.border = '6px dashed #ccc';\n                  e.currentTarget.style.transform = 'scale(1)';\n                  e.currentTarget.style.opacity = currentPhrase.position === index || \n                    (index === words.length - 1 && currentPhrase.position === 'end') ? '1' : '0.3';\n                }}\n                onDrop={(e) => {\n                  e.preventDefault();\n                  e.currentTarget.style.border = '6px dashed #ccc';\n                  e.currentTarget.style.transform = 'scale(1)';\n                  e.currentTarget.style.opacity = currentPhrase.position === index || \n                    (index === words.length - 1 && currentPhrase.position === 'end') ? '1' : '0.3';\n                  handleDrop(e);\n                }}\n              >\n                {selectedMark && currentPhrase.position === index && (\n                  <PunctuationCharacter\n                    type={selectedMark}\n                    onClick={() => {}}\n                    isCorrect={isCorrect}\n                    isDraggable={false}\n                    onSelect={() => {}}\n                  />\n                )}\n              </span>\n              {' '}\n            </React.Fragment>\n          ))}\n        </div>\n      </div>\n    );\n  };\n\n  const handleGameOverClose = () => {\n    setGameOverOpen(false);\n    navigate('/select');\n  };\n\n  const formatTime = (seconds: number | null): string => {\n    if (seconds === null) return \"0:00\";\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n\n  const TimerDisplay = () => (\n    <div className={`timer ${(!hasStarted || timeLeft === null) ? '' : \n      timeLeft < 10 ? 'timer-warning' : ''}`}>\n      <span className=\"timer-text\">\n        {formatTime(timeLeft)}\n      </span>\n    </div>\n  );\n\n  React.useEffect(() => {\n    if (settings.timer) {\n      setTimeLeft(settings.timeLimit);\n    }\n  }, [settings.timer, settings.timeLimit]);\n\n  const TopBar = () => (\n    <header className=\"top-bar\">\n      <Button onClick={() => navigate('/select')}>\n        DONE\n      </Button>\n      <p className=\"score-display\">\n        CORRECT: {score.correct} INCORRECT: {score.incorrect}\n      </p>\n    </header>\n  );\n\n  return (\n    <div className=\"game-screen\">\n      <TopBar />\n      \n      <main className=\"game-content\">\n        <div className=\"phrase-container\">\n          {renderPhrase()}\n        </div>\n      </main>\n\n      <footer className=\"character-controls\">\n        {shuffledTypes.map((type) => (\n          <PunctuationCharacter\n            key={type}\n            type={type}\n            onClick={() => handleCharacterSelect(type)}\n            isCorrect={undefined}\n            isDraggable={true}\n            onDragStart={() => setSelectedMark(null)}\n            onSelect={handleCharacterSelect}\n          />\n        ))}\n      </footer>\n\n      {settings.timer && <TimerDisplay />}\n      \n      <GameOverDialog \n        open={gameOverOpen} \n        onClose={handleGameOverClose}\n        score={score}\n      />\n    </div>\n  );\n};\n\nexport default GameScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}