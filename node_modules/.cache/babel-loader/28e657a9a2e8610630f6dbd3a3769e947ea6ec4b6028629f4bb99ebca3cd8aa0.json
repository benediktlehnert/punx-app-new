{"ast":null,"code":"var _jsxFileName = \"/Users/benediktlehnert/Documents/GitHub/punx-app-new/src/screens/GameScreen.tsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { Box, Typography } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport PunctuationCharacter from '../components/PunctuationCharacter';\nimport GameOverDialog from '../components/GameOverDialog';\nimport { Button as CustomButton } from '../components/Button';\n\n// Types\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PUNCTUATION_TYPES = ['period', 'question', 'exclamation'];\nconst PHRASES = [{\n  text: 'The cat sat on the mat',\n  punctuation: 'period',\n  position: 'end'\n}, {\n  text: 'Where did the dog go',\n  punctuation: 'question',\n  position: 'end'\n}, {\n  text: 'I love ice cream',\n  punctuation: 'exclamation',\n  position: 'end'\n}\n// ... rest of your phrases\n];\nconst GameScreen = () => {\n  _s();\n  const navigate = useNavigate();\n  const [currentPhraseIndex, setCurrentPhraseIndex] = React.useState(0);\n  const [currentPhrase, setCurrentPhrase] = React.useState(null);\n  const [selectedMark, setSelectedMark] = React.useState(null);\n  const [isCorrect, setIsCorrect] = React.useState(null);\n  const [score, setScore] = React.useState({\n    correct: 0,\n    incorrect: 0\n  });\n  const [hasStarted, setHasStarted] = React.useState(false);\n  const [timeLeft, setTimeLeft] = React.useState(null);\n  const [gameOverOpen, setGameOverOpen] = React.useState(false);\n  React.useEffect(() => {\n    setCurrentPhrase(PHRASES[currentPhraseIndex]);\n  }, [currentPhraseIndex]);\n  const handleCharacterSelect = type => {\n    if (!currentPhrase) return;\n    if (!hasStarted) {\n      startTimer();\n    }\n    setSelectedMark(type);\n    const isCorrectMark = type === currentPhrase.punctuation;\n    setIsCorrect(isCorrectMark);\n    if (isCorrectMark) {\n      setScore(prev => ({\n        ...prev,\n        correct: prev.correct + 1\n      }));\n    } else {\n      setScore(prev => ({\n        ...prev,\n        incorrect: prev.incorrect + 1\n      }));\n    }\n    setTimeout(() => {\n      setSelectedMark(null);\n      setIsCorrect(null);\n      goToNextPhrase();\n    }, 1000);\n  };\n  const goToNextPhrase = () => {\n    const nextIndex = (currentPhraseIndex + 1) % PHRASES.length;\n    setCurrentPhraseIndex(nextIndex);\n  };\n  const startTimer = () => {\n    setHasStarted(true);\n    setTimeLeft(60);\n  };\n  React.useEffect(() => {\n    let timer;\n    if (hasStarted && timeLeft !== null && timeLeft > 0) {\n      timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\n    } else if (timeLeft === 0) {\n      setGameOverOpen(true);\n    }\n    return () => clearTimeout(timer);\n  }, [timeLeft, hasStarted]);\n  const handleGameOverClose = () => {\n    setGameOverOpen(false);\n    setScore({\n      correct: 0,\n      incorrect: 0\n    });\n    setTimeLeft(null);\n    setHasStarted(false);\n    setCurrentPhraseIndex(0);\n  };\n  const renderPhrase = () => {\n    if (!currentPhrase) return null;\n    const words = currentPhrase.text.split(' ');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: words.map((word, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [word, (currentPhrase.position === index || index === words.length - 1 && currentPhrase.position === 'end') && /*#__PURE__*/_jsxDEV(\"span\", {\n          \"data-dropzone\": \"true\",\n          style: {\n            display: 'inline-flex',\n            width: '140px',\n            height: '140px',\n            border: '6px dashed #ccc',\n            borderRadius: '20px',\n            margin: '0 16px',\n            verticalAlign: 'top',\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          children: selectedMark && /*#__PURE__*/_jsxDEV(PunctuationCharacter, {\n            type: selectedMark,\n            onClick: () => {},\n            isCorrect: isCorrect,\n            isDraggable: false,\n            onSelect: () => {}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this), ' ']\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      height: '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n      overflow: 'hidden',\n      bgcolor: '#F5F5F7'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: 'sticky',\n        top: 0,\n        padding: 2,\n        backgroundColor: 'white',\n        zIndex: 10,\n        borderBottom: '1px solid rgba(0,0,0,0.1)',\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n          onClick: () => navigate('/select'),\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), timeLeft !== null && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: [\"Time: \", timeLeft, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [\"Score: \", score.correct, \"/\", score.correct + score.incorrect]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flex: 1,\n        overflow: 'auto',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        padding: 2\n      },\n      children: renderPhrase()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: 'sticky',\n        bottom: 0,\n        padding: 2,\n        backgroundColor: 'white',\n        zIndex: 10,\n        borderTop: '1px solid rgba(0,0,0,0.1)',\n        display: 'flex',\n        justifyContent: 'center',\n        gap: 2\n      },\n      children: PUNCTUATION_TYPES.map(type => /*#__PURE__*/_jsxDEV(PunctuationCharacter, {\n        type: type,\n        onClick: () => handleCharacterSelect(type),\n        isDraggable: true,\n        onDragStart: () => {},\n        onSelect: handleCharacterSelect,\n        isCorrect: selectedMark === type ? isCorrect : undefined\n      }, type, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameOverDialog, {\n      open: gameOverOpen,\n      onClose: handleGameOverClose,\n      score: score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n_s(GameScreen, \"ujwGNiq1p22gczrB3w6Z0ooazRQ=\", false, function () {\n  return [useNavigate];\n});\n_c = GameScreen;\nexport default GameScreen;\nvar _c;\n$RefreshReg$(_c, \"GameScreen\");","map":{"version":3,"names":["React","Box","Typography","useNavigate","PunctuationCharacter","GameOverDialog","Button","CustomButton","jsxDEV","_jsxDEV","PUNCTUATION_TYPES","PHRASES","text","punctuation","position","GameScreen","_s","navigate","currentPhraseIndex","setCurrentPhraseIndex","useState","currentPhrase","setCurrentPhrase","selectedMark","setSelectedMark","isCorrect","setIsCorrect","score","setScore","correct","incorrect","hasStarted","setHasStarted","timeLeft","setTimeLeft","gameOverOpen","setGameOverOpen","useEffect","handleCharacterSelect","type","startTimer","isCorrectMark","prev","setTimeout","goToNextPhrase","nextIndex","length","timer","clearTimeout","handleGameOverClose","renderPhrase","words","split","style","textAlign","children","map","word","index","Fragment","display","width","height","border","borderRadius","margin","verticalAlign","justifyContent","alignItems","onClick","isDraggable","onSelect","fileName","_jsxFileName","lineNumber","columnNumber","sx","flexDirection","overflow","bgcolor","top","padding","backgroundColor","zIndex","borderBottom","gap","variant","flex","bottom","borderTop","onDragStart","undefined","open","onClose","_c","$RefreshReg$"],"sources":["/Users/benediktlehnert/Documents/GitHub/punx-app-new/src/screens/GameScreen.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Box, Typography } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport PunctuationCharacter from '../components/PunctuationCharacter';\nimport GameOverDialog from '../components/GameOverDialog';\nimport { Button as CustomButton } from '../components/Button';\n\n// Types\ntype PunctuationType = 'period' | 'question' | 'exclamation' | 'comma';\n\ninterface Phrase {\n  text: string;\n  punctuation: PunctuationType;\n  position: number | 'end';\n}\n\nconst PUNCTUATION_TYPES: PunctuationType[] = ['period', 'question', 'exclamation'];\n\nconst PHRASES: Phrase[] = [\n  { text: 'The cat sat on the mat', punctuation: 'period', position: 'end' },\n  { text: 'Where did the dog go', punctuation: 'question', position: 'end' },\n  { text: 'I love ice cream', punctuation: 'exclamation', position: 'end' },\n  // ... rest of your phrases\n];\n\nconst GameScreen = () => {\n  const navigate = useNavigate();\n  const [currentPhraseIndex, setCurrentPhraseIndex] = React.useState(0);\n  const [currentPhrase, setCurrentPhrase] = React.useState<Phrase | null>(null);\n  const [selectedMark, setSelectedMark] = React.useState<PunctuationType | null>(null);\n  const [isCorrect, setIsCorrect] = React.useState<boolean | null>(null);\n  const [score, setScore] = React.useState({ correct: 0, incorrect: 0 });\n  const [hasStarted, setHasStarted] = React.useState(false);\n  const [timeLeft, setTimeLeft] = React.useState<number | null>(null);\n  const [gameOverOpen, setGameOverOpen] = React.useState(false);\n\n  React.useEffect(() => {\n    setCurrentPhrase(PHRASES[currentPhraseIndex]);\n  }, [currentPhraseIndex]);\n\n  const handleCharacterSelect = (type: PunctuationType) => {\n    if (!currentPhrase) return;\n\n    if (!hasStarted) {\n      startTimer();\n    }\n\n    setSelectedMark(type);\n    const isCorrectMark = type === currentPhrase.punctuation;\n    setIsCorrect(isCorrectMark);\n\n    if (isCorrectMark) {\n      setScore(prev => ({\n        ...prev,\n        correct: prev.correct + 1\n      }));\n    } else {\n      setScore(prev => ({\n        ...prev,\n        incorrect: prev.incorrect + 1\n      }));\n    }\n\n    setTimeout(() => {\n      setSelectedMark(null);\n      setIsCorrect(null);\n      goToNextPhrase();\n    }, 1000);\n  };\n\n  const goToNextPhrase = () => {\n    const nextIndex = (currentPhraseIndex + 1) % PHRASES.length;\n    setCurrentPhraseIndex(nextIndex);\n  };\n\n  const startTimer = () => {\n    setHasStarted(true);\n    setTimeLeft(60);\n  };\n\n  React.useEffect(() => {\n    let timer: NodeJS.Timeout;\n    if (hasStarted && timeLeft !== null && timeLeft > 0) {\n      timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\n    } else if (timeLeft === 0) {\n      setGameOverOpen(true);\n    }\n    return () => clearTimeout(timer);\n  }, [timeLeft, hasStarted]);\n\n  const handleGameOverClose = () => {\n    setGameOverOpen(false);\n    setScore({ correct: 0, incorrect: 0 });\n    setTimeLeft(null);\n    setHasStarted(false);\n    setCurrentPhraseIndex(0);\n  };\n\n  const renderPhrase = () => {\n    if (!currentPhrase) return null;\n\n    const words = currentPhrase.text.split(' ');\n    \n    return (\n      <div style={{ textAlign: 'center' }}>\n        {words.map((word, index) => (\n          <React.Fragment key={index}>\n            {word}\n            {(currentPhrase.position === index || \n              (index === words.length - 1 && currentPhrase.position === 'end')) && (\n              <span\n                data-dropzone=\"true\"\n                style={{\n                  display: 'inline-flex',\n                  width: '140px',\n                  height: '140px',\n                  border: '6px dashed #ccc',\n                  borderRadius: '20px',\n                  margin: '0 16px',\n                  verticalAlign: 'top',\n                  justifyContent: 'center',\n                  alignItems: 'center'\n                }}\n              >\n                {selectedMark && (\n                  <PunctuationCharacter\n                    type={selectedMark}\n                    onClick={() => {}}\n                    isCorrect={isCorrect}\n                    isDraggable={false}\n                    onSelect={() => {}}\n                  />\n                )}\n              </span>\n            )}\n            {' '}\n          </React.Fragment>\n        ))}\n      </div>\n    );\n  };\n\n  return (\n    <Box\n      sx={{\n        height: '100vh',\n        display: 'flex',\n        flexDirection: 'column',\n        overflow: 'hidden',\n        bgcolor: '#F5F5F7'\n      }}\n    >\n      {/* Sticky Header */}\n      <Box\n        sx={{\n          position: 'sticky',\n          top: 0,\n          padding: 2,\n          backgroundColor: 'white',\n          zIndex: 10,\n          borderBottom: '1px solid rgba(0,0,0,0.1)',\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        }}\n      >\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n          <CustomButton onClick={() => navigate('/select')}>\n            Back\n          </CustomButton>\n          {timeLeft !== null && (\n            <Typography variant=\"h6\">\n              Time: {timeLeft}s\n            </Typography>\n          )}\n        </Box>\n        <Typography variant=\"h6\">\n          Score: {score.correct}/{score.correct + score.incorrect}\n        </Typography>\n      </Box>\n\n      {/* Main Content Area */}\n      <Box\n        sx={{\n          flex: 1,\n          overflow: 'auto',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          padding: 2\n        }}\n      >\n        {renderPhrase()}\n      </Box>\n\n      {/* Sticky Footer */}\n      <Box\n        sx={{\n          position: 'sticky',\n          bottom: 0,\n          padding: 2,\n          backgroundColor: 'white',\n          zIndex: 10,\n          borderTop: '1px solid rgba(0,0,0,0.1)',\n          display: 'flex',\n          justifyContent: 'center',\n          gap: 2\n        }}\n      >\n        {PUNCTUATION_TYPES.map((type) => (\n          <PunctuationCharacter\n            key={type}\n            type={type}\n            onClick={() => handleCharacterSelect(type)}\n            isDraggable={true}\n            onDragStart={() => {}}\n            onSelect={handleCharacterSelect}\n            isCorrect={selectedMark === type ? isCorrect : undefined}\n          />\n        ))}\n      </Box>\n\n      <GameOverDialog\n        open={gameOverOpen}\n        onClose={handleGameOverClose}\n        score={score}\n      />\n    </Box>\n  );\n};\n\nexport default GameScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}