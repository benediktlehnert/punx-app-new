{"ast":null,"code":"import _objectSpread from\"/Users/benediktlehnert/Documents/GitHub/punx-app-new/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import*as React from'react';import{Box,Typography,Button,Dialog,DialogContent,DialogActions}from'@mui/material';import{useNavigate}from'react-router-dom';import{useGame}from'../context/GameContext';import PunctuationCharacter from'../components/PunctuationCharacter';import{shuffleArray}from'../utils/shuffle';import{Button as CustomButton}from'../components/Button';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const samplePhrases={period:[{text:\"I love to play in the park\",answer:\"period\",position:'end'},{text:\"The sun is shining today\",answer:\"period\",position:'end'}],exclamation:[{text:\"What a wonderful day\",answer:\"exclamation\",position:'end'},{text:\"I canâ€™t believe it\",answer:\"exclamation\",position:'end'}],question:[{text:\"How are you today\",answer:\"question\",position:'end'},{text:\"Where did you go\",answer:\"question\",position:'end'}],comma:[{text:\"After the movie we went home\",answer:\"comma\",position:2},// After index 2 (after \"movie\")\n{text:\"Yes I would love to\",answer:\"comma\",position:0}// After index 1 (after \"Yes\")\n]};const punctuationTypes=['period','exclamation','question','comma'];const GameOverDialog=_ref=>{let{open,onClose,score}=_ref;return/*#__PURE__*/_jsxs(Dialog,{open:open,onClose:onClose,children:[/*#__PURE__*/_jsxs(DialogContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",sx:{mb:2},children:\"Time's Up!\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",sx:{color:'success.main',mb:1},children:[\"Correct Answers: \",score.correct]}),/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",sx:{color:'error.main',mb:2},children:[\"Incorrect Answers: \",score.incorrect]}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:score.correct>score.incorrect?\"Great job! You're getting really good at this!\":\"Keep practicing, you're getting better!\"})]}),/*#__PURE__*/_jsx(DialogActions,{children:/*#__PURE__*/_jsx(Button,{onClick:onClose,children:\"Play Again\"})})]});};const GameScreen=()=>{const navigate=useNavigate();const{punctuationType,settings}=useGame();const[currentPhraseIndex,setCurrentPhraseIndex]=React.useState(0);const[currentPhrase,setCurrentPhrase]=React.useState(null);const[selectedMark,setSelectedMark]=React.useState(null);const[isCorrect,setIsCorrect]=React.useState(null);const[score,setScore]=React.useState({correct:0,incorrect:0});const[hasStarted,setHasStarted]=React.useState(false);const[timeLeft,setTimeLeft]=React.useState(null);const[gameOverOpen,setGameOverOpen]=React.useState(false);const[shuffledTypes,setShuffledTypes]=React.useState(['period','exclamation','question','comma']);const[feedback,setFeedback]=React.useState(null);const timerRef=React.useRef(null);const phrases=React.useMemo(()=>shuffleArray(Object.values(samplePhrases).flat()),[]);React.useEffect(()=>{setCurrentPhrase(phrases[currentPhraseIndex]);},[currentPhraseIndex,phrases]);const startTimer=React.useCallback(()=>{if(!hasStarted&&settings.timer){setHasStarted(true);setTimeLeft(settings.timeLimit);}},[hasStarted,settings.timer,settings.timeLimit]);React.useEffect(()=>{if(hasStarted&&settings.timer&&timeLeft!==null&&timeLeft>0){timerRef.current=setInterval(()=>{setTimeLeft(prev=>{if(prev===null||prev<=1){if(timerRef.current){clearInterval(timerRef.current);}setGameOverOpen(true);return 0;}return prev-1;});},1000);return()=>{if(timerRef.current){clearInterval(timerRef.current);}};}},[hasStarted,settings.timer,timeLeft]);React.useEffect(()=>{return()=>{if(timerRef.current){clearInterval(timerRef.current);}};},[]);const handleFirstInteraction=()=>{startTimer();};const getFeedbackMessage=(type,isCorrect)=>{if(isCorrect){return{text:\"Great job! That's exactly right!\",type:'success'};}const correctType=currentPhrase===null||currentPhrase===void 0?void 0:currentPhrase.answer;switch(correctType){case'period':return{text:\"This sentence needs a period to show it's complete.\",type:'error'};case'question':return{text:\"This is a question, so it needs a question mark.\",type:'error'};case'exclamation':return{text:\"This sentence shows strong feeling or emotion, so it needs an exclamation mark!\",type:'error'};case'comma':return{text:\"A comma is needed here to separate parts of the sentence.\",type:'error'};default:return{text:\"That's not quite right. Try again!\",type:'error'};}};const handleCharacterSelect=type=>{if(!currentPhrase)return;// Start timer on first interaction if not started\nif(!hasStarted){startTimer();}setSelectedMark(type);const isCorrectMark=type===currentPhrase.answer;setIsCorrect(isCorrectMark);if(isCorrectMark){setScore(prev=>_objectSpread(_objectSpread({},prev),{},{correct:prev.correct+1}));}else{setScore(prev=>_objectSpread(_objectSpread({},prev),{},{incorrect:prev.incorrect+1}));}// Wait for animation then move to next phrase\nsetTimeout(()=>{setSelectedMark(null);setIsCorrect(null);goToNextPhrase();},1000);};const goToNextPhrase=()=>{const nextIndex=(currentPhraseIndex+1)%phrases.length;setCurrentPhraseIndex(nextIndex);};const handleDrop=e=>{e.preventDefault();e.currentTarget.classList.remove('dragover');const droppedType=e.dataTransfer.getData('application/punctuation');console.log('Dropped type:',droppedType);// Add this for debugging\nif(droppedType){handleCharacterSelect(droppedType);}};const handleDragOver=e=>{e.preventDefault();// This is crucial for enabling drop\ne.currentTarget.style.backgroundColor='rgba(0, 0, 0, 0.1)';};const handleDragLeave=e=>{e.preventDefault();e.currentTarget.style.backgroundColor='transparent';};const handleDragStart=e=>{startTimer();e.dataTransfer.setData('text/plain',e.currentTarget.id);};const renderPhrase=()=>{if(!currentPhrase)return null;const words=currentPhrase.text.split(' ');return/*#__PURE__*/_jsx(\"div\",{style:{width:'100%',textAlign:'center',willChange:'transform',transform:'translateZ(0)',backfaceVisibility:'hidden'},children:/*#__PURE__*/_jsx(\"div\",{style:{fontFamily:'\"Bookman Old Style Regular\", \"Bookman\", \"URW Bookman L\", serif',fontWeight:'normal',fontSize:window.innerWidth<600?'80px':window.innerWidth<960?'100px':window.innerWidth<1280?'120px':'140px',lineHeight:'1.1',display:'inline-block',textAlign:'left',maxWidth:'90%',margin:'0 auto',WebkitFontSmoothing:'antialiased',WebkitTextSizeAdjust:'100%',color:'#000000'},children:words.map((word,index)=>/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{style:{display:'inline-block',fontFamily:'\"Bookman Old Style Regular\", \"Bookman\", \"URW Bookman L\", serif'},children:word}),(currentPhrase.position===index||index===words.length-1&&currentPhrase.position==='end')&&/*#__PURE__*/_jsx(\"span\",{\"data-dropzone\":\"true\",style:{display:'inline-flex',width:'140px',height:'140px',border:'6px dashed #ccc',borderRadius:'20px',margin:'0 16px',verticalAlign:'top',justifyContent:'center',alignItems:'center',transition:'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)'},onDragOver:e=>{e.preventDefault();e.currentTarget.style.border='6px dashed #666';e.currentTarget.style.transform='scale(1.05)';},onDragLeave:e=>{e.preventDefault();e.currentTarget.style.border='6px dashed #ccc';e.currentTarget.style.transform='scale(1)';},onDrop:e=>{e.preventDefault();e.currentTarget.style.border='6px dashed #ccc';e.currentTarget.style.transform='scale(1)';handleDrop(e);},children:selectedMark&&/*#__PURE__*/_jsx(PunctuationCharacter,{type:selectedMark,onClick:()=>{},isCorrect:isCorrect,isDraggable:false,onSelect:()=>{}})}),' ']},index))})});};const handleGameOverClose=()=>{setGameOverOpen(false);navigate('/select');};const formatTime=seconds=>{if(seconds===null)return\"0:00\";const minutes=Math.floor(seconds/60);const remainingSeconds=seconds%60;return\"\".concat(minutes,\":\").concat(remainingSeconds.toString().padStart(2,'0'));};const TimerDisplay=()=>/*#__PURE__*/_jsx(Box,{sx:{position:'absolute',top:16,right:16,backgroundColor:!hasStarted||timeLeft===null?'primary.main':timeLeft<10?'error.main':'primary.main',color:'white',borderRadius:'50%',width:80,height:80,display:'flex',alignItems:'center',justifyContent:'center',transition:'background-color 0.3s ease',boxShadow:2},children:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",sx:{fontFamily:'monospace',fontWeight:'bold'},children:formatTime(timeLeft)})});React.useEffect(()=>{if(settings.timer){setTimeLeft(settings.timeLimit);}},[settings.timer,settings.timeLimit]);const TopBar=()=>/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',alignItems:'center',padding:'16px',width:'100%'},children:[/*#__PURE__*/_jsx(CustomButton,{onClick:()=>navigate('/select'),children:\"DONE\"}),/*#__PURE__*/_jsxs(Typography,{sx:{fontFamily:'\"Rethink Sans\", Arial, sans-serif',fontWeight:800},children:[\"CORRECT: \",score.correct,\" INCORRECT: \",score.incorrect]})]});return/*#__PURE__*/_jsxs(Box,{sx:{height:'100vh',display:'flex',flexDirection:'column',position:'relative'},children:[/*#__PURE__*/_jsx(TopBar,{}),/*#__PURE__*/_jsx(Box,{sx:{flex:1,display:'flex',flexDirection:'column',justifyContent:'center',padding:'24px',paddingBottom:'120px',paddingTop:'12px'},children:/*#__PURE__*/_jsx(Box,{sx:{flex:1,display:'flex',alignItems:'center',justifyContent:'center'},children:renderPhrase()})}),/*#__PURE__*/_jsx(Box,{sx:{position:'fixed',bottom:0,left:0,right:0,display:'flex',justifyContent:'center',alignItems:'center',gap:'32px',padding:'24px',minHeight:'120px',backgroundColor:'transparent',zIndex:2},children:shuffledTypes.map(type=>/*#__PURE__*/_jsx(PunctuationCharacter,{type:type,onClick:()=>handleCharacterSelect(type),isCorrect:undefined,isDraggable:true,onDragStart:()=>setSelectedMark(null),onSelect:handleCharacterSelect},type))}),settings.timer&&/*#__PURE__*/_jsx(TimerDisplay,{}),/*#__PURE__*/_jsx(GameOverDialog,{open:gameOverOpen,onClose:handleGameOverClose,score:score})]});};export default GameScreen;","map":{"version":3,"names":["React","Box","Typography","Button","Dialog","DialogContent","DialogActions","useNavigate","useGame","PunctuationCharacter","shuffleArray","CustomButton","jsx","_jsx","jsxs","_jsxs","samplePhrases","period","text","answer","position","exclamation","question","comma","punctuationTypes","GameOverDialog","_ref","open","onClose","score","children","variant","sx","mb","color","correct","incorrect","onClick","GameScreen","navigate","punctuationType","settings","currentPhraseIndex","setCurrentPhraseIndex","useState","currentPhrase","setCurrentPhrase","selectedMark","setSelectedMark","isCorrect","setIsCorrect","setScore","hasStarted","setHasStarted","timeLeft","setTimeLeft","gameOverOpen","setGameOverOpen","shuffledTypes","setShuffledTypes","feedback","setFeedback","timerRef","useRef","phrases","useMemo","Object","values","flat","useEffect","startTimer","useCallback","timer","timeLimit","current","setInterval","prev","clearInterval","handleFirstInteraction","getFeedbackMessage","type","correctType","handleCharacterSelect","isCorrectMark","_objectSpread","setTimeout","goToNextPhrase","nextIndex","length","handleDrop","e","preventDefault","currentTarget","classList","remove","droppedType","dataTransfer","getData","console","log","handleDragOver","style","backgroundColor","handleDragLeave","handleDragStart","setData","id","renderPhrase","words","split","width","textAlign","willChange","transform","backfaceVisibility","fontFamily","fontWeight","fontSize","window","innerWidth","lineHeight","display","maxWidth","margin","WebkitFontSmoothing","WebkitTextSizeAdjust","map","word","index","Fragment","height","border","borderRadius","verticalAlign","justifyContent","alignItems","transition","onDragOver","onDragLeave","onDrop","isDraggable","onSelect","handleGameOverClose","formatTime","seconds","minutes","Math","floor","remainingSeconds","concat","toString","padStart","TimerDisplay","top","right","boxShadow","TopBar","padding","flexDirection","flex","paddingBottom","paddingTop","bottom","left","gap","minHeight","zIndex","undefined","onDragStart"],"sources":["/Users/benediktlehnert/Documents/GitHub/punx-app-new/src/screens/GameScreen.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Box, Typography, Button, Grid, Dialog, DialogContent, DialogActions } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { useGame } from '../context/GameContext';\nimport PunctuationCharacter from '../components/PunctuationCharacter';\nimport { shuffleArray } from '../utils/shuffle';\nimport { Button as CustomButton } from '../components/Button';\n\ntype Phrase = {\n  text: string;\n  answer: string;\n  position: 'end' | number; // 'end' or index where punctuation should go\n};\n\ntype PhraseCollection = {\n  period: Phrase[];\n  exclamation: Phrase[];\n  question: Phrase[];\n  comma: Phrase[];\n};\n\nconst samplePhrases: PhraseCollection = {\n  period: [\n    { text: \"I love to play in the park\", answer: \"period\", position: 'end' },\n    { text: \"The sun is shining today\", answer: \"period\", position: 'end' },\n  ],\n  exclamation: [\n    { text: \"What a wonderful day\", answer: \"exclamation\", position: 'end' },\n    { text: \"I canâ€™t believe it\", answer: \"exclamation\", position: 'end' },\n  ],\n  question: [\n    { text: \"How are you today\", answer: \"question\", position: 'end' },\n    { text: \"Where did you go\", answer: \"question\", position: 'end' },\n  ],\n  comma: [\n    { text: \"After the movie we went home\", answer: \"comma\", position: 2 }, // After index 2 (after \"movie\")\n    { text: \"Yes I would love to\", answer: \"comma\", position: 0 }, // After index 1 (after \"Yes\")\n  ],\n};\n\ntype PunctuationType = 'period' | 'exclamation' | 'question' | 'comma';\n\nconst punctuationTypes: PunctuationType[] = ['period', 'exclamation', 'question', 'comma'];\n\ninterface FeedbackMessage {\n  text: string;\n  type: 'success' | 'error';\n}\n\ninterface GameOverDialogProps {\n  open: boolean;\n  onClose: () => void;\n  score: { correct: number; incorrect: number };\n}\n\nconst GameOverDialog = ({ open, onClose, score }: GameOverDialogProps) => (\n  <Dialog open={open} onClose={onClose}>\n    <DialogContent>\n      <Typography variant=\"h4\" sx={{ mb: 2 }}>Time's Up!</Typography>\n      <Typography variant=\"h6\" sx={{ color: 'success.main', mb: 1 }}>\n        Correct Answers: {score.correct}\n      </Typography>\n      <Typography variant=\"h6\" sx={{ color: 'error.main', mb: 2 }}>\n        Incorrect Answers: {score.incorrect}\n      </Typography>\n      <Typography variant=\"body1\">\n        {score.correct > score.incorrect \n          ? \"Great job! You're getting really good at this!\" \n          : \"Keep practicing, you're getting better!\"}\n      </Typography>\n    </DialogContent>\n    <DialogActions>\n      <Button onClick={onClose}>Play Again</Button>\n    </DialogActions>\n  </Dialog>\n);\n\nconst GameScreen = () => {\n  const navigate = useNavigate();\n  const { punctuationType, settings } = useGame();\n  const [currentPhraseIndex, setCurrentPhraseIndex] = React.useState(0);\n  const [currentPhrase, setCurrentPhrase] = React.useState<Phrase | null>(null);\n  const [selectedMark, setSelectedMark] = React.useState<PunctuationType | null>(null);\n  const [isCorrect, setIsCorrect] = React.useState<boolean | null>(null);\n  const [score, setScore] = React.useState({ correct: 0, incorrect: 0 });\n  const [hasStarted, setHasStarted] = React.useState(false);\n  const [timeLeft, setTimeLeft] = React.useState<number | null>(null);\n  const [gameOverOpen, setGameOverOpen] = React.useState(false);\n  const [shuffledTypes, setShuffledTypes] = React.useState<PunctuationType[]>(['period', 'exclamation', 'question', 'comma']);\n  const [feedback, setFeedback] = React.useState<FeedbackMessage | null>(null);\n  const timerRef = React.useRef<NodeJS.Timeout | null>(null);\n\n  const phrases = React.useMemo(() => shuffleArray(Object.values(samplePhrases).flat()), []);\n\n  React.useEffect(() => {\n    setCurrentPhrase(phrases[currentPhraseIndex]);\n  }, [currentPhraseIndex, phrases]);\n\n  const startTimer = React.useCallback(() => {\n    if (!hasStarted && settings.timer) {\n      setHasStarted(true);\n      setTimeLeft(settings.timeLimit);\n    }\n  }, [hasStarted, settings.timer, settings.timeLimit]);\n\n  React.useEffect(() => {\n    if (hasStarted && settings.timer && timeLeft !== null && timeLeft > 0) {\n      timerRef.current = setInterval(() => {\n        setTimeLeft((prev) => {\n          if (prev === null || prev <= 1) {\n            if (timerRef.current) {\n              clearInterval(timerRef.current);\n            }\n            setGameOverOpen(true);\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n\n      return () => {\n        if (timerRef.current) {\n          clearInterval(timerRef.current);\n        }\n      };\n    }\n  }, [hasStarted, settings.timer, timeLeft]);\n\n  React.useEffect(() => {\n    return () => {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    };\n  }, []);\n\n  const handleFirstInteraction = () => {\n    startTimer();\n  };\n\n  const getFeedbackMessage = (type: string, isCorrect: boolean): FeedbackMessage => {\n    if (isCorrect) {\n      return {\n        text: \"Great job! That's exactly right!\",\n        type: 'success'\n      };\n    }\n\n    const correctType = currentPhrase?.answer;\n    switch (correctType) {\n      case 'period':\n        return {\n          text: \"This sentence needs a period to show it's complete.\",\n          type: 'error'\n        };\n      case 'question':\n        return {\n          text: \"This is a question, so it needs a question mark.\",\n          type: 'error'\n        };\n      case 'exclamation':\n        return {\n          text: \"This sentence shows strong feeling or emotion, so it needs an exclamation mark!\",\n          type: 'error'\n        };\n      case 'comma':\n        return {\n          text: \"A comma is needed here to separate parts of the sentence.\",\n          type: 'error'\n        };\n      default:\n        return {\n          text: \"That's not quite right. Try again!\",\n          type: 'error'\n        };\n    }\n  };\n\n  const handleCharacterSelect = (type: PunctuationType) => {\n    if (!currentPhrase) return;\n\n    // Start timer on first interaction if not started\n    if (!hasStarted) {\n      startTimer();\n    }\n\n    setSelectedMark(type);\n    const isCorrectMark = type === currentPhrase.answer;\n    setIsCorrect(isCorrectMark);\n\n    if (isCorrectMark) {\n      setScore(prev => ({\n        ...prev,\n        correct: prev.correct + 1\n      }));\n    } else {\n      setScore(prev => ({\n        ...prev,\n        incorrect: prev.incorrect + 1\n      }));\n    }\n\n    // Wait for animation then move to next phrase\n    setTimeout(() => {\n      setSelectedMark(null);\n      setIsCorrect(null);\n      goToNextPhrase();\n    }, 1000);\n  };\n\n  const goToNextPhrase = () => {\n    const nextIndex = (currentPhraseIndex + 1) % phrases.length;\n    setCurrentPhraseIndex(nextIndex);\n  };\n\n  const handleDrop = (e: React.DragEvent<HTMLElement>) => {\n    e.preventDefault();\n    e.currentTarget.classList.remove('dragover');\n    const droppedType = e.dataTransfer.getData('application/punctuation') as PunctuationType;\n    \n    console.log('Dropped type:', droppedType); // Add this for debugging\n    \n    if (droppedType) {\n      handleCharacterSelect(droppedType);\n    }\n  };\n\n  const handleDragOver = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault(); // This is crucial for enabling drop\n    e.currentTarget.style.backgroundColor = 'rgba(0, 0, 0, 0.1)';\n  };\n\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    e.currentTarget.style.backgroundColor = 'transparent';\n  };\n\n  const handleDragStart = (e: React.DragEvent) => {\n    startTimer();\n    e.dataTransfer.setData('text/plain', e.currentTarget.id);\n  };\n\n  const renderPhrase = () => {\n    if (!currentPhrase) return null;\n\n    const words = currentPhrase.text.split(' ');\n    \n    return (\n      <div \n        style={{ \n          width: '100%',\n          textAlign: 'center',\n          willChange: 'transform',\n          transform: 'translateZ(0)',\n          backfaceVisibility: 'hidden'\n        }}\n      >\n        <div \n          style={{\n            fontFamily: '\"Bookman Old Style Regular\", \"Bookman\", \"URW Bookman L\", serif',\n            fontWeight: 'normal',\n            fontSize: window.innerWidth < 600 ? '80px' : \n                     window.innerWidth < 960 ? '100px' : \n                     window.innerWidth < 1280 ? '120px' : '140px',\n            lineHeight: '1.1',\n            display: 'inline-block',\n            textAlign: 'left',\n            maxWidth: '90%',\n            margin: '0 auto',\n            WebkitFontSmoothing: 'antialiased',\n            WebkitTextSizeAdjust: '100%',\n            color: '#000000'\n          }}\n        >\n          {words.map((word, index) => (\n            <React.Fragment key={index}>\n              <span style={{ \n                display: 'inline-block',\n                fontFamily: '\"Bookman Old Style Regular\", \"Bookman\", \"URW Bookman L\", serif'\n              }}>\n                {word}\n              </span>\n              {(currentPhrase.position === index || \n                (index === words.length - 1 && currentPhrase.position === 'end')) && (\n                <span\n                  data-dropzone=\"true\"\n                  style={{\n                    display: 'inline-flex',\n                    width: '140px',\n                    height: '140px',\n                    border: '6px dashed #ccc',\n                    borderRadius: '20px',\n                    margin: '0 16px',\n                    verticalAlign: 'top',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)'\n                  }}\n                  onDragOver={(e) => {\n                    e.preventDefault();\n                    e.currentTarget.style.border = '6px dashed #666';\n                    e.currentTarget.style.transform = 'scale(1.05)';\n                  }}\n                  onDragLeave={(e) => {\n                    e.preventDefault();\n                    e.currentTarget.style.border = '6px dashed #ccc';\n                    e.currentTarget.style.transform = 'scale(1)';\n                  }}\n                  onDrop={(e) => {\n                    e.preventDefault();\n                    e.currentTarget.style.border = '6px dashed #ccc';\n                    e.currentTarget.style.transform = 'scale(1)';\n                    handleDrop(e);\n                  }}\n                >\n                  {selectedMark && (\n                    <PunctuationCharacter\n                      type={selectedMark}\n                      onClick={() => {}}\n                      isCorrect={isCorrect}\n                      isDraggable={false}\n                      onSelect={() => {}}\n                    />\n                  )}\n                </span>\n              )}\n              {' '}\n            </React.Fragment>\n          ))}\n        </div>\n      </div>\n    );\n  };\n\n  const handleGameOverClose = () => {\n    setGameOverOpen(false);\n    navigate('/select');\n  };\n\n  const formatTime = (seconds: number | null): string => {\n    if (seconds === null) return \"0:00\";\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n\n  const TimerDisplay = () => (\n    <Box sx={{ \n      position: 'absolute',\n      top: 16,\n      right: 16,\n      backgroundColor: (!hasStarted || timeLeft === null) ? 'primary.main' :\n                      timeLeft < 10 ? 'error.main' : 'primary.main',\n      color: 'white',\n      borderRadius: '50%',\n      width: 80,\n      height: 80,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      transition: 'background-color 0.3s ease',\n      boxShadow: 2\n    }}>\n      <Typography \n        variant=\"h6\" \n        sx={{ \n          fontFamily: 'monospace',\n          fontWeight: 'bold'\n        }}\n      >\n        {formatTime(timeLeft)}\n      </Typography>\n    </Box>\n  );\n\n  React.useEffect(() => {\n    if (settings.timer) {\n      setTimeLeft(settings.timeLimit);\n    }\n  }, [settings.timer, settings.timeLimit]);\n\n  const TopBar = () => (\n    <Box sx={{ \n      display: 'flex', \n      justifyContent: 'space-between', \n      alignItems: 'center',\n      padding: '16px',\n      width: '100%'\n    }}>\n      <CustomButton onClick={() => navigate('/select')}>\n        DONE\n      </CustomButton>\n      <Typography sx={{ \n        fontFamily: '\"Rethink Sans\", Arial, sans-serif',\n        fontWeight: 800\n      }}>\n        CORRECT: {score.correct} INCORRECT: {score.incorrect}\n      </Typography>\n    </Box>\n  );\n\n  return (\n    <Box sx={{ \n      height: '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n      position: 'relative'\n    }}>\n      <TopBar />\n      \n      <Box sx={{ \n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        padding: '24px',\n        paddingBottom: '120px',\n        paddingTop: '12px',\n      }}>\n        <Box sx={{ \n          flex: 1,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        }}>\n          {renderPhrase()}\n        </Box>\n      </Box>\n\n      <Box sx={{ \n        position: 'fixed',\n        bottom: 0,\n        left: 0,\n        right: 0,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        gap: '32px',\n        padding: '24px',\n        minHeight: '120px',\n        backgroundColor: 'transparent',\n        zIndex: 2\n      }}>\n        {shuffledTypes.map((type) => (\n          <PunctuationCharacter\n            key={type}\n            type={type}\n            onClick={() => handleCharacterSelect(type)}\n            isCorrect={undefined}\n            isDraggable={true}\n            onDragStart={() => setSelectedMark(null)}\n            onSelect={handleCharacterSelect}\n          />\n        ))}\n      </Box>\n\n      {settings.timer && <TimerDisplay />}\n      <GameOverDialog \n        open={gameOverOpen} \n        onClose={handleGameOverClose}\n        score={score}\n      />\n    </Box>\n  );\n};\n\nexport default GameScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}