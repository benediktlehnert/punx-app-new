{"ast":null,"code":"var _jsxFileName = \"/Users/benediktlehnert/Documents/GitHub/punx-app-new/src/screens/GameScreen.tsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { Box, Typography, Button, Grid } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { useGame } from '../context/GameContext';\nimport PunctuationCharacter from '../components/PunctuationCharacter';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst samplePhrases = {\n  period: [{\n    text: \"I love to play in the park\",\n    answer: \"period\"\n  }, {\n    text: \"The sun is shining today\",\n    answer: \"period\"\n  }],\n  exclamation: [{\n    text: \"What a wonderful day\",\n    answer: \"exclamation\"\n  }, {\n    text: \"I can't believe it\",\n    answer: \"exclamation\"\n  }],\n  question: [{\n    text: \"How are you today\",\n    answer: \"question\"\n  }, {\n    text: \"Where did you go\",\n    answer: \"question\"\n  }],\n  comma: [{\n    text: \"After the movie we went home\",\n    answer: \"comma\"\n  }, {\n    text: \"Yes I would love to\",\n    answer: \"comma\"\n  }]\n};\nconst GameScreen = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    punctuationType\n  } = useGame();\n  const [currentPhrase, setCurrentPhrase] = React.useState(null);\n  const [isCorrect, setIsCorrect] = React.useState(null);\n  React.useEffect(() => {\n    if (punctuationType && punctuationType !== 'shuffle' && samplePhrases[punctuationType]) {\n      const phrases = samplePhrases[punctuationType];\n      setCurrentPhrase(phrases[Math.floor(Math.random() * phrases.length)]);\n    }\n  }, [punctuationType]);\n  const handleCharacterSelect = type => {\n    if (!currentPhrase) return;\n    const correct = type === currentPhrase.answer;\n    setIsCorrect(correct);\n    if (correct && punctuationType && punctuationType !== 'shuffle') {\n      setTimeout(() => {\n        const phrases = samplePhrases[punctuationType];\n        setCurrentPhrase(phrases[Math.floor(Math.random() * phrases.length)]);\n        setIsCorrect(null);\n      }, 1500);\n    }\n  };\n  const handleDrop = e => {\n    e.preventDefault();\n    const type = e.dataTransfer.getData('text/plain');\n    handleCharacterSelect(type);\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 4,\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => navigate('/'),\n      sx: {\n        position: 'absolute',\n        top: 16,\n        left: 16\n      },\n      children: \"Back to Menu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), currentPhrase && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 8,\n          p: 4,\n          border: '2px dashed #ccc',\n          borderRadius: 2,\n          minHeight: 100,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        onDrop: handleDrop,\n        onDragOver: handleDragOver,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: currentPhrase.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        justifyContent: \"center\",\n        children: ['period', 'exclamation', 'question', 'comma'].map(type => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(PunctuationCharacter, {\n            type: type,\n            onClick: () => handleCharacterSelect(type),\n            isCorrect: isCorrect !== null ? type === currentPhrase.answer : undefined,\n            isDraggable: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this)\n        }, type, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(GameScreen, \"Jq+IqfVY3CLD0mzYrzkza3YWrlA=\", false, function () {\n  return [useNavigate, useGame];\n});\n_c = GameScreen;\nexport default GameScreen;\nvar _c;\n$RefreshReg$(_c, \"GameScreen\");","map":{"version":3,"names":["React","Box","Typography","Button","Grid","useNavigate","useGame","PunctuationCharacter","jsxDEV","_jsxDEV","Fragment","_Fragment","samplePhrases","period","text","answer","exclamation","question","comma","GameScreen","_s","navigate","punctuationType","currentPhrase","setCurrentPhrase","useState","isCorrect","setIsCorrect","useEffect","phrases","Math","floor","random","length","handleCharacterSelect","type","correct","setTimeout","handleDrop","e","preventDefault","dataTransfer","getData","handleDragOver","sx","p","textAlign","children","onClick","position","top","left","fileName","_jsxFileName","lineNumber","columnNumber","mb","border","borderRadius","minHeight","display","alignItems","justifyContent","onDrop","onDragOver","variant","container","spacing","map","item","undefined","isDraggable","_c","$RefreshReg$"],"sources":["/Users/benediktlehnert/Documents/GitHub/punx-app-new/src/screens/GameScreen.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Box, Typography, Button, Grid } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { useGame } from '../context/GameContext';\nimport PunctuationCharacter from '../components/PunctuationCharacter';\n\ntype Phrase = {\n  text: string;\n  answer: string;\n};\n\ntype PhraseCollection = {\n  period: Phrase[];\n  exclamation: Phrase[];\n  question: Phrase[];\n  comma: Phrase[];\n};\n\nconst samplePhrases: PhraseCollection = {\n  period: [\n    { text: \"I love to play in the park\", answer: \"period\" },\n    { text: \"The sun is shining today\", answer: \"period\" },\n  ],\n  exclamation: [\n    { text: \"What a wonderful day\", answer: \"exclamation\" },\n    { text: \"I can't believe it\", answer: \"exclamation\" },\n  ],\n  question: [\n    { text: \"How are you today\", answer: \"question\" },\n    { text: \"Where did you go\", answer: \"question\" },\n  ],\n  comma: [\n    { text: \"After the movie we went home\", answer: \"comma\" },\n    { text: \"Yes I would love to\", answer: \"comma\" },\n  ],\n};\n\nconst GameScreen = () => {\n  const navigate = useNavigate();\n  const { punctuationType } = useGame();\n  const [currentPhrase, setCurrentPhrase] = React.useState<Phrase | null>(null);\n  const [isCorrect, setIsCorrect] = React.useState<boolean | null>(null);\n\n  React.useEffect(() => {\n    if (punctuationType && punctuationType !== 'shuffle' && samplePhrases[punctuationType]) {\n      const phrases = samplePhrases[punctuationType];\n      setCurrentPhrase(phrases[Math.floor(Math.random() * phrases.length)]);\n    }\n  }, [punctuationType]);\n\n  const handleCharacterSelect = (type: string) => {\n    if (!currentPhrase) return;\n    \n    const correct = type === currentPhrase.answer;\n    setIsCorrect(correct);\n    \n    if (correct && punctuationType && punctuationType !== 'shuffle') {\n      setTimeout(() => {\n        const phrases = samplePhrases[punctuationType];\n        setCurrentPhrase(phrases[Math.floor(Math.random() * phrases.length)]);\n        setIsCorrect(null);\n      }, 1500);\n    }\n  };\n\n  const handleDrop = (e: React.DragEvent) => {\n    e.preventDefault();\n    const type = e.dataTransfer.getData('text/plain');\n    handleCharacterSelect(type);\n  };\n\n  const handleDragOver = (e: React.DragEvent) => {\n    e.preventDefault();\n  };\n\n  return (\n    <Box sx={{ p: 4, textAlign: 'center' }}>\n      <Button onClick={() => navigate('/')} sx={{ position: 'absolute', top: 16, left: 16 }}>\n        Back to Menu\n      </Button>\n\n      {currentPhrase && (\n        <>\n          <Box\n            sx={{\n              mb: 8,\n              p: 4,\n              border: '2px dashed #ccc',\n              borderRadius: 2,\n              minHeight: 100,\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center'\n            }}\n            onDrop={handleDrop}\n            onDragOver={handleDragOver}\n          >\n            <Typography variant=\"h4\">\n              {currentPhrase.text}\n            </Typography>\n          </Box>\n\n          <Grid container spacing={2} justifyContent=\"center\">\n            {['period', 'exclamation', 'question', 'comma'].map((type) => (\n              <Grid item key={type}>\n                <PunctuationCharacter\n                  type={type}\n                  onClick={() => handleCharacterSelect(type)}\n                  isCorrect={isCorrect !== null ? type === currentPhrase.answer : undefined}\n                  isDraggable={true}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        </>\n      )}\n    </Box>\n  );\n};\n\nexport default GameScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}