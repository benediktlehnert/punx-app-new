{"ast":null,"code":"var _jsxFileName = \"/Users/benediktlehnert/Documents/GitHub/punx-app-new/src/components/PunctuationCharacter.tsx\";\nimport * as React from 'react';\nimport { Paper } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PunctuationCharacter = ({\n  type,\n  isCorrect,\n  onClick,\n  isDraggable\n}) => {\n  const getCharacter = () => {\n    switch (type) {\n      case 'period':\n        return '.';\n      case 'exclamation':\n        return '!';\n      case 'question':\n        return '?';\n      case 'comma':\n        return ',';\n      default:\n        return '';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    sx: {\n      width: 60,\n      height: 60,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      fontSize: '2rem',\n      cursor: 'pointer',\n      backgroundColor: isCorrect === true ? '#4caf50' : isCorrect === false ? '#f44336' : '#fff',\n      transition: 'all 0.3s ease',\n      '&:hover': {\n        transform: 'scale(1.1)'\n      }\n    },\n    onClick: onClick,\n    draggable: isDraggable,\n    children: getCharacter()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_c = PunctuationCharacter;\nexport default PunctuationCharacter;\nvar _c;\n$RefreshReg$(_c, \"PunctuationCharacter\");","map":{"version":3,"names":["React","Paper","jsxDEV","_jsxDEV","PunctuationCharacter","type","isCorrect","onClick","isDraggable","getCharacter","elevation","sx","width","height","display","alignItems","justifyContent","fontSize","cursor","backgroundColor","transition","transform","draggable","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/benediktlehnert/Documents/GitHub/punx-app-new/src/components/PunctuationCharacter.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Box, Paper } from '@mui/material';\n\ninterface PunctuationCharacterProps {\n  type: string;\n  isCorrect?: boolean;\n  onClick: () => void;\n  isDraggable?: boolean;\n}\n\nconst PunctuationCharacter = ({ type, isCorrect, onClick, isDraggable }: PunctuationCharacterProps) => {\n  const getCharacter = () => {\n    switch (type) {\n      case 'period': return '.';\n      case 'exclamation': return '!';\n      case 'question': return '?';\n      case 'comma': return ',';\n      default: return '';\n    }\n  };\n\n  return (\n    <Paper\n      elevation={3}\n      sx={{\n        width: 60,\n        height: 60,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontSize: '2rem',\n        cursor: 'pointer',\n        backgroundColor: isCorrect === true ? '#4caf50' : \n                       isCorrect === false ? '#f44336' : '#fff',\n        transition: 'all 0.3s ease',\n        '&:hover': {\n          transform: 'scale(1.1)',\n        }\n      }}\n      onClick={onClick}\n      draggable={isDraggable}\n    >\n      {getCharacter()}\n    </Paper>\n  );\n};\n\nexport default PunctuationCharacter;\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAAcC,KAAK,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAS3C,MAAMC,oBAAoB,GAAGA,CAAC;EAAEC,IAAI;EAAEC,SAAS;EAAEC,OAAO;EAAEC;AAAuC,CAAC,KAAK;EACrG,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,QAAQJ,IAAI;MACV,KAAK,QAAQ;QAAE,OAAO,GAAG;MACzB,KAAK,aAAa;QAAE,OAAO,GAAG;MAC9B,KAAK,UAAU;QAAE,OAAO,GAAG;MAC3B,KAAK,OAAO;QAAE,OAAO,GAAG;MACxB;QAAS,OAAO,EAAE;IACpB;EACF,CAAC;EAED,oBACEF,OAAA,CAACF,KAAK;IACJS,SAAS,EAAE,CAAE;IACbC,EAAE,EAAE;MACFC,KAAK,EAAE,EAAE;MACTC,MAAM,EAAE,EAAE;MACVC,OAAO,EAAE,MAAM;MACfC,UAAU,EAAE,QAAQ;MACpBC,cAAc,EAAE,QAAQ;MACxBC,QAAQ,EAAE,MAAM;MAChBC,MAAM,EAAE,SAAS;MACjBC,eAAe,EAAEb,SAAS,KAAK,IAAI,GAAG,SAAS,GAChCA,SAAS,KAAK,KAAK,GAAG,SAAS,GAAG,MAAM;MACvDc,UAAU,EAAE,eAAe;MAC3B,SAAS,EAAE;QACTC,SAAS,EAAE;MACb;IACF,CAAE;IACFd,OAAO,EAAEA,OAAQ;IACjBe,SAAS,EAAEd,WAAY;IAAAe,QAAA,EAEtBd,YAAY,CAAC;EAAC;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEZ,CAAC;AAACC,EAAA,GAnCIxB,oBAAoB;AAqC1B,eAAeA,oBAAoB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}