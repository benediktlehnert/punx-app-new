{"ast":null,"code":"import*as React from'react';import{Box,Typography,Button,Dialog,DialogContent,DialogActions}from'@mui/material';import{useNavigate}from'react-router-dom';import{useGame}from'../context/GameContext';import PunctuationCharacter from'../components/PunctuationCharacter';import{shuffleArray}from'../utils/shuffle';import{Button as CustomButton}from'../components/Button';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const samplePhrases={period:[{text:\"I love to play in the park\",answer:\"period\",position:'end'},{text:\"The sun is shining today\",answer:\"period\",position:'end'}],exclamation:[{text:\"What a wonderful day\",answer:\"exclamation\",position:'end'},{text:\"I canâ€™t believe it\",answer:\"exclamation\",position:'end'}],question:[{text:\"How are you today\",answer:\"question\",position:'end'},{text:\"Where did you go\",answer:\"question\",position:'end'}],comma:[{text:\"After the movie we went home\",answer:\"comma\",position:2},// After index 2 (after \"movie\")\n{text:\"Yes I would love to\",answer:\"comma\",position:0}// After index 1 (after \"Yes\")\n]};const punctuationTypes=['period','exclamation','question','comma'];const GameOverDialog=_ref=>{let{open,onClose,score}=_ref;return/*#__PURE__*/_jsxs(Dialog,{open:open,onClose:onClose,children:[/*#__PURE__*/_jsxs(DialogContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",sx:{mb:2},children:\"Time's Up!\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",sx:{color:'success.main',mb:1},children:[\"Correct Answers: \",score.correct]}),/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",sx:{color:'error.main',mb:2},children:[\"Incorrect Answers: \",score.incorrect]}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:score.correct>score.incorrect?\"Great job! You're getting really good at this!\":\"Keep practicing, you're getting better!\"})]}),/*#__PURE__*/_jsx(DialogActions,{children:/*#__PURE__*/_jsx(Button,{onClick:onClose,children:\"Play Again\"})})]});};const GameScreen=()=>{const navigate=useNavigate();const{punctuationType,settings}=useGame();const[currentPhrase,setCurrentPhrase]=React.useState(null);const[isCorrect,setIsCorrect]=React.useState(null);const[shuffledTypes,setShuffledTypes]=React.useState(['period','exclamation','question','comma']);const[score,setScore]=React.useState({correct:0,incorrect:0});const[selectedMark,setSelectedMark]=React.useState(null);const[feedback,setFeedback]=React.useState(null);const[timeLeft,setTimeLeft]=React.useState(null);const[gameOverOpen,setGameOverOpen]=React.useState(false);const[hasStarted,setHasStarted]=React.useState(false);const timerRef=React.useRef(null);const getRandomPhrase=React.useCallback(()=>{if(punctuationType==='shuffle'){// For shuffle mode, get all phrases and pick one randomly\nconst allPhrases=Object.values(samplePhrases).flat();return allPhrases[Math.floor(Math.random()*allPhrases.length)];}else if(punctuationType&&samplePhrases[punctuationType]){// For specific punctuation type\nconst phrases=samplePhrases[punctuationType];return phrases[Math.floor(Math.random()*phrases.length)];}return null;},[punctuationType]);const loadNewPhrase=React.useCallback(()=>{const newPhrase=getRandomPhrase();setCurrentPhrase(newPhrase);setShuffledTypes(shuffleArray(punctuationTypes));setIsCorrect(null);setSelectedMark(null);setFeedback(null);},[getRandomPhrase]);React.useEffect(()=>{loadNewPhrase();},[loadNewPhrase]);const startTimer=React.useCallback(()=>{if(!hasStarted&&settings.timer){setHasStarted(true);setTimeLeft(settings.timeLimit);}},[hasStarted,settings.timer,settings.timeLimit]);React.useEffect(()=>{if(hasStarted&&settings.timer&&timeLeft!==null&&timeLeft>0){timerRef.current=setInterval(()=>{setTimeLeft(prev=>{if(prev===null||prev<=0){if(timerRef.current){clearInterval(timerRef.current);}setGameOverOpen(true);return 0;}return prev-1;});},1000);return()=>{if(timerRef.current){clearInterval(timerRef.current);}};}},[hasStarted,settings.timer,timeLeft]);React.useEffect(()=>{return()=>{if(timerRef.current){clearInterval(timerRef.current);}};},[]);const handleFirstInteraction=()=>{startTimer();};const getFeedbackMessage=(type,isCorrect)=>{if(isCorrect){return{text:\"Great job! That's exactly right!\",type:'success'};}const correctType=currentPhrase===null||currentPhrase===void 0?void 0:currentPhrase.answer;switch(correctType){case'period':return{text:\"This sentence needs a period to show it's complete.\",type:'error'};case'question':return{text:\"This is a question, so it needs a question mark.\",type:'error'};case'exclamation':return{text:\"This sentence shows strong feeling or emotion, so it needs an exclamation mark!\",type:'error'};case'comma':return{text:\"A comma is needed here to separate parts of the sentence.\",type:'error'};default:return{text:\"That's not quite right. Try again!\",type:'error'};}};const vibrate=pattern=>{try{if('vibrate'in navigator&&typeof navigator.vibrate==='function'){navigator.vibrate(pattern);}}catch(error){console.log('Vibration not supported');}};const handleCharacterSelect=type=>{handleFirstInteraction();setSelectedMark(type);vibrate(50);if(currentPhrase){const correct=type===currentPhrase.answer;setIsCorrect(correct);// Update score\nsetScore(prev=>({correct:correct?prev.correct+1:prev.correct,incorrect:correct?prev.incorrect:prev.incorrect+1}));if(correct){vibrate([100,50,100]);}else{vibrate([200]);}// Load new phrase after a delay\nsetTimeout(()=>{const newPhrase=getRandomPhrase();setCurrentPhrase(newPhrase);setShuffledTypes(shuffleArray([...punctuationTypes]));setIsCorrect(null);setSelectedMark(null);},1000);}};const handleDrop=e=>{e.preventDefault();e.currentTarget.classList.remove('dragover');const droppedType=e.dataTransfer.getData('application/punctuation');console.log('Dropped type:',droppedType);// Add this for debugging\nif(droppedType){vibrate(50);handleCharacterSelect(droppedType);}};const handleDragOver=e=>{e.preventDefault();// This is crucial for enabling drop\ne.currentTarget.style.backgroundColor='rgba(0, 0, 0, 0.1)';};const handleDragLeave=e=>{e.preventDefault();e.currentTarget.style.backgroundColor='transparent';};const handleDragStart=e=>{startTimer();e.dataTransfer.setData('text/plain',e.currentTarget.id);};const renderPhrase=()=>{if(!currentPhrase)return null;const words=currentPhrase.text.split(' ');return/*#__PURE__*/_jsx(\"div\",{style:{width:'100%',textAlign:'center'},children:/*#__PURE__*/_jsx(\"div\",{style:{fontFamily:'Bookman Old Style, serif',fontSize:window.innerWidth<600?'80px':window.innerWidth<960?'100px':window.innerWidth<1280?'120px':'140px',lineHeight:'1.1',display:'inline-block',textAlign:'left',maxWidth:'90%',margin:'0 auto'},children:words.map((word,index)=>/*#__PURE__*/_jsxs(React.Fragment,{children:[word,(currentPhrase.position===index||index===words.length-1&&currentPhrase.position==='end')&&/*#__PURE__*/_jsx(\"span\",{\"data-dropzone\":\"true\",style:{display:'inline-flex',width:'140px',height:'140px',border:'6px dashed #ccc',borderRadius:'20px',margin:'0 16px',verticalAlign:'top',justifyContent:'center',alignItems:'center'},onDrop:e=>{e.preventDefault();handleDrop(e);},onDragOver:e=>{e.preventDefault();e.currentTarget.style.border='6px dashed #666';e.currentTarget.style.transform='scale(1.05)';},onDragLeave:e=>{e.preventDefault();e.currentTarget.style.border='6px dashed #ccc';e.currentTarget.style.transform='scale(1)';},children:selectedMark&&/*#__PURE__*/_jsx(PunctuationCharacter,{type:selectedMark,onClick:()=>{},isCorrect:isCorrect,isDraggable:false})}),' ']},index))})});};const handleGameOverClose=()=>{setGameOverOpen(false);navigate('/select');};const formatTime=seconds=>{if(seconds===null)return\"0:00\";const minutes=Math.floor(seconds/60);const remainingSeconds=seconds%60;return\"\".concat(minutes,\":\").concat(remainingSeconds.toString().padStart(2,'0'));};const TimerDisplay=()=>/*#__PURE__*/_jsx(Box,{sx:{position:'absolute',top:16,right:16,backgroundColor:!hasStarted||timeLeft===null?'primary.main':timeLeft<10?'error.main':'primary.main',color:'white',borderRadius:'50%',width:80,height:80,display:'flex',alignItems:'center',justifyContent:'center',transition:'background-color 0.3s ease',boxShadow:2},children:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",sx:{fontFamily:'monospace',fontWeight:'bold'},children:formatTime(timeLeft)})});React.useEffect(()=>{if(settings.timer){setTimeLeft(settings.timeLimit);}},[settings.timer,settings.timeLimit]);const TopBar=()=>/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',alignItems:'center',padding:'16px',width:'100%'},children:[/*#__PURE__*/_jsx(CustomButton,{onClick:()=>navigate('/select'),children:\"DONE\"}),/*#__PURE__*/_jsxs(Typography,{sx:{fontFamily:'\"Rethink Sans\", Arial, sans-serif',fontWeight:800},children:[\"CORRECT: \",score.correct,\" INCORRECT: \",score.incorrect]})]});return/*#__PURE__*/_jsxs(Box,{sx:{height:'100vh',display:'flex',flexDirection:'column',position:'relative'},children:[/*#__PURE__*/_jsx(TopBar,{}),/*#__PURE__*/_jsx(Box,{sx:{flex:1,display:'flex',flexDirection:'column',justifyContent:'center',padding:'24px',paddingBottom:'120px',paddingTop:'12px'},children:/*#__PURE__*/_jsx(Box,{sx:{flex:1,display:'flex',alignItems:'center',justifyContent:'center'},children:renderPhrase()})}),/*#__PURE__*/_jsx(Box,{sx:{position:'fixed',bottom:0,left:0,right:0,display:'flex',justifyContent:'center',alignItems:'center',gap:'32px',padding:'24px',minHeight:'120px',backgroundColor:'transparent',zIndex:2},children:shuffledTypes.map(type=>/*#__PURE__*/_jsx(PunctuationCharacter,{type:type,onClick:()=>handleCharacterSelect(type),isCorrect:undefined,isDraggable:true,onDragStart:()=>setSelectedMark(null),onSelect:handleCharacterSelect},type))}),settings.timer&&/*#__PURE__*/_jsx(TimerDisplay,{}),/*#__PURE__*/_jsx(GameOverDialog,{open:gameOverOpen,onClose:handleGameOverClose,score:score})]});};export default GameScreen;","map":{"version":3,"names":["React","Box","Typography","Button","Dialog","DialogContent","DialogActions","useNavigate","useGame","PunctuationCharacter","shuffleArray","CustomButton","jsx","_jsx","jsxs","_jsxs","samplePhrases","period","text","answer","position","exclamation","question","comma","punctuationTypes","GameOverDialog","_ref","open","onClose","score","children","variant","sx","mb","color","correct","incorrect","onClick","GameScreen","navigate","punctuationType","settings","currentPhrase","setCurrentPhrase","useState","isCorrect","setIsCorrect","shuffledTypes","setShuffledTypes","setScore","selectedMark","setSelectedMark","feedback","setFeedback","timeLeft","setTimeLeft","gameOverOpen","setGameOverOpen","hasStarted","setHasStarted","timerRef","useRef","getRandomPhrase","useCallback","allPhrases","Object","values","flat","Math","floor","random","length","phrases","loadNewPhrase","newPhrase","useEffect","startTimer","timer","timeLimit","current","setInterval","prev","clearInterval","handleFirstInteraction","getFeedbackMessage","type","correctType","vibrate","pattern","navigator","error","console","log","handleCharacterSelect","setTimeout","handleDrop","e","preventDefault","currentTarget","classList","remove","droppedType","dataTransfer","getData","handleDragOver","style","backgroundColor","handleDragLeave","handleDragStart","setData","id","renderPhrase","words","split","width","textAlign","fontFamily","fontSize","window","innerWidth","lineHeight","display","maxWidth","margin","map","word","index","Fragment","height","border","borderRadius","verticalAlign","justifyContent","alignItems","onDrop","onDragOver","transform","onDragLeave","isDraggable","handleGameOverClose","formatTime","seconds","minutes","remainingSeconds","concat","toString","padStart","TimerDisplay","top","right","transition","boxShadow","fontWeight","TopBar","padding","flexDirection","flex","paddingBottom","paddingTop","bottom","left","gap","minHeight","zIndex","undefined","onDragStart","onSelect"],"sources":["/Users/benediktlehnert/Documents/GitHub/punx-app-new/src/screens/GameScreen.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Box, Typography, Button, Grid, Dialog, DialogContent, DialogActions } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { useGame } from '../context/GameContext';\nimport PunctuationCharacter from '../components/PunctuationCharacter';\nimport { shuffleArray } from '../utils/shuffle';\nimport { Button as CustomButton } from '../components/Button';\n\ntype Phrase = {\n  text: string;\n  answer: string;\n  position: 'end' | number; // 'end' or index where punctuation should go\n};\n\ntype PhraseCollection = {\n  period: Phrase[];\n  exclamation: Phrase[];\n  question: Phrase[];\n  comma: Phrase[];\n};\n\nconst samplePhrases: PhraseCollection = {\n  period: [\n    { text: \"I love to play in the park\", answer: \"period\", position: 'end' },\n    { text: \"The sun is shining today\", answer: \"period\", position: 'end' },\n  ],\n  exclamation: [\n    { text: \"What a wonderful day\", answer: \"exclamation\", position: 'end' },\n    { text: \"I canâ€™t believe it\", answer: \"exclamation\", position: 'end' },\n  ],\n  question: [\n    { text: \"How are you today\", answer: \"question\", position: 'end' },\n    { text: \"Where did you go\", answer: \"question\", position: 'end' },\n  ],\n  comma: [\n    { text: \"After the movie we went home\", answer: \"comma\", position: 2 }, // After index 2 (after \"movie\")\n    { text: \"Yes I would love to\", answer: \"comma\", position: 0 }, // After index 1 (after \"Yes\")\n  ],\n};\n\ntype PunctuationType = 'period' | 'exclamation' | 'question' | 'comma';\n\nconst punctuationTypes: PunctuationType[] = ['period', 'exclamation', 'question', 'comma'];\n\ninterface FeedbackMessage {\n  text: string;\n  type: 'success' | 'error';\n}\n\ninterface GameOverDialogProps {\n  open: boolean;\n  onClose: () => void;\n  score: { correct: number; incorrect: number };\n}\n\nconst GameOverDialog = ({ open, onClose, score }: GameOverDialogProps) => (\n  <Dialog open={open} onClose={onClose}>\n    <DialogContent>\n      <Typography variant=\"h4\" sx={{ mb: 2 }}>Time's Up!</Typography>\n      <Typography variant=\"h6\" sx={{ color: 'success.main', mb: 1 }}>\n        Correct Answers: {score.correct}\n      </Typography>\n      <Typography variant=\"h6\" sx={{ color: 'error.main', mb: 2 }}>\n        Incorrect Answers: {score.incorrect}\n      </Typography>\n      <Typography variant=\"body1\">\n        {score.correct > score.incorrect \n          ? \"Great job! You're getting really good at this!\" \n          : \"Keep practicing, you're getting better!\"}\n      </Typography>\n    </DialogContent>\n    <DialogActions>\n      <Button onClick={onClose}>Play Again</Button>\n    </DialogActions>\n  </Dialog>\n);\n\nconst GameScreen = () => {\n  const navigate = useNavigate();\n  const { punctuationType, settings } = useGame();\n  const [currentPhrase, setCurrentPhrase] = React.useState<Phrase | null>(null);\n  const [isCorrect, setIsCorrect] = React.useState<boolean | null>(null);\n  const [shuffledTypes, setShuffledTypes] = React.useState<PunctuationType[]>(['period', 'exclamation', 'question', 'comma']);\n  const [score, setScore] = React.useState({ correct: 0, incorrect: 0 });\n  const [selectedMark, setSelectedMark] = React.useState<PunctuationType | null>(null);\n  const [feedback, setFeedback] = React.useState<FeedbackMessage | null>(null);\n  const [timeLeft, setTimeLeft] = React.useState<number | null>(null);\n  const [gameOverOpen, setGameOverOpen] = React.useState(false);\n  const [hasStarted, setHasStarted] = React.useState(false);\n  const timerRef = React.useRef<NodeJS.Timeout | null>(null);\n\n  const getRandomPhrase = React.useCallback(() => {\n    if (punctuationType === 'shuffle') {\n      // For shuffle mode, get all phrases and pick one randomly\n      const allPhrases = Object.values(samplePhrases).flat();\n      return allPhrases[Math.floor(Math.random() * allPhrases.length)];\n    } else if (punctuationType && samplePhrases[punctuationType]) {\n      // For specific punctuation type\n      const phrases = samplePhrases[punctuationType];\n      return phrases[Math.floor(Math.random() * phrases.length)];\n    }\n    return null;\n  }, [punctuationType]);\n\n  const loadNewPhrase = React.useCallback(() => {\n    const newPhrase = getRandomPhrase();\n    setCurrentPhrase(newPhrase);\n    setShuffledTypes(shuffleArray(punctuationTypes));\n    setIsCorrect(null);\n    setSelectedMark(null);\n    setFeedback(null);\n  }, [getRandomPhrase]);\n\n  React.useEffect(() => {\n    loadNewPhrase();\n  }, [loadNewPhrase]);\n\n  const startTimer = React.useCallback(() => {\n    if (!hasStarted && settings.timer) {\n      setHasStarted(true);\n      setTimeLeft(settings.timeLimit);\n    }\n  }, [hasStarted, settings.timer, settings.timeLimit]);\n\n  React.useEffect(() => {\n    if (hasStarted && settings.timer && timeLeft !== null && timeLeft > 0) {\n      timerRef.current = setInterval(() => {\n        setTimeLeft((prev) => {\n          if (prev === null || prev <= 0) {\n            if (timerRef.current) {\n              clearInterval(timerRef.current);\n            }\n            setGameOverOpen(true);\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n\n      return () => {\n        if (timerRef.current) {\n          clearInterval(timerRef.current);\n        }\n      };\n    }\n  }, [hasStarted, settings.timer, timeLeft]);\n\n  React.useEffect(() => {\n    return () => {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    };\n  }, []);\n\n  const handleFirstInteraction = () => {\n    startTimer();\n  };\n\n  const getFeedbackMessage = (type: string, isCorrect: boolean): FeedbackMessage => {\n    if (isCorrect) {\n      return {\n        text: \"Great job! That's exactly right!\",\n        type: 'success'\n      };\n    }\n\n    const correctType = currentPhrase?.answer;\n    switch (correctType) {\n      case 'period':\n        return {\n          text: \"This sentence needs a period to show it's complete.\",\n          type: 'error'\n        };\n      case 'question':\n        return {\n          text: \"This is a question, so it needs a question mark.\",\n          type: 'error'\n        };\n      case 'exclamation':\n        return {\n          text: \"This sentence shows strong feeling or emotion, so it needs an exclamation mark!\",\n          type: 'error'\n        };\n      case 'comma':\n        return {\n          text: \"A comma is needed here to separate parts of the sentence.\",\n          type: 'error'\n        };\n      default:\n        return {\n          text: \"That's not quite right. Try again!\",\n          type: 'error'\n        };\n    }\n  };\n\n  const vibrate = (pattern: number | number[]) => {\n    try {\n      if ('vibrate' in navigator && typeof navigator.vibrate === 'function') {\n        navigator.vibrate(pattern);\n      }\n    } catch (error) {\n      console.log('Vibration not supported');\n    }\n  };\n\n  const handleCharacterSelect = (type: PunctuationType) => {\n    handleFirstInteraction();\n    setSelectedMark(type);\n    vibrate(50);\n\n    if (currentPhrase) {\n      const correct = type === currentPhrase.answer;\n      setIsCorrect(correct);\n      \n      // Update score\n      setScore(prev => ({\n        correct: correct ? prev.correct + 1 : prev.correct,\n        incorrect: correct ? prev.incorrect : prev.incorrect + 1\n      }));\n      \n      if (correct) {\n        vibrate([100, 50, 100]);\n      } else {\n        vibrate([200]);\n      }\n\n      // Load new phrase after a delay\n      setTimeout(() => {\n        const newPhrase = getRandomPhrase();\n        setCurrentPhrase(newPhrase);\n        setShuffledTypes(shuffleArray([...punctuationTypes]));\n        setIsCorrect(null);\n        setSelectedMark(null);\n      }, 1000);\n    }\n  };\n\n  const handleDrop = (e: React.DragEvent<HTMLElement>) => {\n    e.preventDefault();\n    e.currentTarget.classList.remove('dragover');\n    const droppedType = e.dataTransfer.getData('application/punctuation') as PunctuationType;\n    \n    console.log('Dropped type:', droppedType); // Add this for debugging\n    \n    if (droppedType) {\n      vibrate(50);\n      handleCharacterSelect(droppedType);\n    }\n  };\n\n  const handleDragOver = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault(); // This is crucial for enabling drop\n    e.currentTarget.style.backgroundColor = 'rgba(0, 0, 0, 0.1)';\n  };\n\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    e.currentTarget.style.backgroundColor = 'transparent';\n  };\n\n  const handleDragStart = (e: React.DragEvent) => {\n    startTimer();\n    e.dataTransfer.setData('text/plain', e.currentTarget.id);\n  };\n\n  const renderPhrase = () => {\n    if (!currentPhrase) return null;\n\n    const words = currentPhrase.text.split(' ');\n    \n    return (\n      <div style={{ \n        width: '100%',\n        textAlign: 'center'\n      }}>\n        <div style={{\n          fontFamily: 'Bookman Old Style, serif',\n          fontSize: window.innerWidth < 600 ? '80px' : \n                   window.innerWidth < 960 ? '100px' : \n                   window.innerWidth < 1280 ? '120px' : '140px',\n          lineHeight: '1.1',\n          display: 'inline-block',\n          textAlign: 'left',\n          maxWidth: '90%',\n          margin: '0 auto'\n        }}>\n          {words.map((word, index) => (\n            <React.Fragment key={index}>\n              {word}\n              {(currentPhrase.position === index || \n                (index === words.length - 1 && currentPhrase.position === 'end')) && (\n                <span\n                  data-dropzone=\"true\"\n                  style={{\n                    display: 'inline-flex',\n                    width: '140px',\n                    height: '140px',\n                    border: '6px dashed #ccc',\n                    borderRadius: '20px',\n                    margin: '0 16px',\n                    verticalAlign: 'top',\n                    justifyContent: 'center',\n                    alignItems: 'center'\n                  }}\n                  onDrop={(e) => {\n                    e.preventDefault();\n                    handleDrop(e);\n                  }}\n                  onDragOver={(e) => {\n                    e.preventDefault();\n                    e.currentTarget.style.border = '6px dashed #666';\n                    e.currentTarget.style.transform = 'scale(1.05)';\n                  }}\n                  onDragLeave={(e) => {\n                    e.preventDefault();\n                    e.currentTarget.style.border = '6px dashed #ccc';\n                    e.currentTarget.style.transform = 'scale(1)';\n                  }}\n                >\n                  {selectedMark && (\n                    <PunctuationCharacter\n                      type={selectedMark}\n                      onClick={() => {}}\n                      isCorrect={isCorrect}\n                      isDraggable={false}\n                    />\n                  )}\n                </span>\n              )}\n              {' '}\n            </React.Fragment>\n          ))}\n        </div>\n      </div>\n    );\n  };\n\n  const handleGameOverClose = () => {\n    setGameOverOpen(false);\n    navigate('/select');\n  };\n\n  const formatTime = (seconds: number | null): string => {\n    if (seconds === null) return \"0:00\";\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n\n  const TimerDisplay = () => (\n    <Box sx={{ \n      position: 'absolute',\n      top: 16,\n      right: 16,\n      backgroundColor: (!hasStarted || timeLeft === null) ? 'primary.main' :\n                      timeLeft < 10 ? 'error.main' : 'primary.main',\n      color: 'white',\n      borderRadius: '50%',\n      width: 80,\n      height: 80,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      transition: 'background-color 0.3s ease',\n      boxShadow: 2\n    }}>\n      <Typography \n        variant=\"h6\" \n        sx={{ \n          fontFamily: 'monospace',\n          fontWeight: 'bold'\n        }}\n      >\n        {formatTime(timeLeft)}\n      </Typography>\n    </Box>\n  );\n\n  React.useEffect(() => {\n    if (settings.timer) {\n      setTimeLeft(settings.timeLimit);\n    }\n  }, [settings.timer, settings.timeLimit]);\n\n  const TopBar = () => (\n    <Box sx={{ \n      display: 'flex', \n      justifyContent: 'space-between', \n      alignItems: 'center',\n      padding: '16px',\n      width: '100%'\n    }}>\n      <CustomButton onClick={() => navigate('/select')}>\n        DONE\n      </CustomButton>\n      <Typography sx={{ \n        fontFamily: '\"Rethink Sans\", Arial, sans-serif',\n        fontWeight: 800\n      }}>\n        CORRECT: {score.correct} INCORRECT: {score.incorrect}\n      </Typography>\n    </Box>\n  );\n\n  return (\n    <Box sx={{ \n      height: '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n      position: 'relative'\n    }}>\n      <TopBar />\n      \n      <Box sx={{ \n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        padding: '24px',\n        paddingBottom: '120px',\n        paddingTop: '12px',\n      }}>\n        <Box sx={{ \n          flex: 1,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        }}>\n          {renderPhrase()}\n        </Box>\n      </Box>\n\n      <Box sx={{ \n        position: 'fixed',\n        bottom: 0,\n        left: 0,\n        right: 0,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        gap: '32px',\n        padding: '24px',\n        minHeight: '120px',\n        backgroundColor: 'transparent',\n        zIndex: 2\n      }}>\n        {shuffledTypes.map((type) => (\n          <PunctuationCharacter\n            key={type}\n            type={type}\n            onClick={() => handleCharacterSelect(type)}\n            isCorrect={undefined}\n            isDraggable={true}\n            onDragStart={() => setSelectedMark(null)}\n            onSelect={handleCharacterSelect}\n          />\n        ))}\n      </Box>\n\n      {settings.timer && <TimerDisplay />}\n      <GameOverDialog \n        open={gameOverOpen} \n        onClose={handleGameOverClose}\n        score={score}\n      />\n    </Box>\n  );\n};\n\nexport default GameScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}