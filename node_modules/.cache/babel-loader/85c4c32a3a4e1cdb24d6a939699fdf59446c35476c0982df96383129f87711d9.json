{"ast":null,"code":"var _jsxFileName = \"/Users/benediktlehnert/Documents/GitHub/punx-app-new/src/screens/GameScreen.tsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useGame } from '../context/GameContext';\nimport PunctuationCharacter from '../components/PunctuationCharacter';\nimport { shuffleArray } from '../utils/shuffle';\nimport { Button as CustomButton } from '../components/Button';\nimport { GameOverDialog } from '../components/GameOverDialog';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst samplePhrases = {\n  period: [{\n    text: \"I love to play in the park\",\n    answer: \"period\",\n    position: 'end'\n  }, {\n    text: \"The sun is shining today\",\n    answer: \"period\",\n    position: 'end'\n  }],\n  exclamation: [{\n    text: \"What a wonderful day\",\n    answer: \"exclamation\",\n    position: 'end'\n  }, {\n    text: \"I canâ€™t believe it\",\n    answer: \"exclamation\",\n    position: 'end'\n  }],\n  question: [{\n    text: \"How are you today\",\n    answer: \"question\",\n    position: 'end'\n  }, {\n    text: \"Where did you go\",\n    answer: \"question\",\n    position: 'end'\n  }],\n  comma: [{\n    text: \"After the movie we went home\",\n    answer: \"comma\",\n    position: 2\n  },\n  // After index 2 (after \"movie\")\n  {\n    text: \"Yes I would love to\",\n    answer: \"comma\",\n    position: 0\n  } // After index 0 (after \"Yes\")\n  ]\n};\n\n// Add this type to help with calculations\n\n// Add proper type definitions\n\nconst PHRASE_FONT_SIZE = 80; // Adjust this value to change the font size\n\nconst formatTime = seconds => {\n  const minutes = Math.floor(seconds / 60);\n  const remainingSeconds = seconds % 60;\n  return `${minutes.toString().padStart(2, '0')}:${remainingSeconds.toString().padStart(2, '0')}`;\n};\n\n// Add this helper function to determine timer color\nconst getTimerColor = timeLeft => {\n  if (timeLeft <= 10) return '#EF4444'; // Red for last 10 seconds\n  if (timeLeft <= 30) return '#F59E0B'; // Orange for last 30 seconds\n  return '#64748B'; // Default slate color\n};\nconst GameScreen = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    settings\n  } = useGame();\n  const [currentPhraseIndex, setCurrentPhraseIndex] = React.useState(0);\n  const [currentPhrase, setCurrentPhrase] = React.useState(null);\n  const [selectedMark, setSelectedMark] = React.useState(null);\n  const [isCorrect, setIsCorrect] = React.useState(null);\n  const [score, setScore] = React.useState({\n    correct: 0,\n    incorrect: 0\n  });\n  const [hasStarted, setHasStarted] = React.useState(false);\n  const [timeLeft, setTimeLeft] = React.useState(60); // Default 1 minute\n  const [isTimerRunning, setIsTimerRunning] = React.useState(false);\n  const [gameOverOpen, setGameOverOpen] = React.useState(false);\n  const [activeDropZone, setActiveDropZone] = React.useState(null);\n  const [droppedPosition, setDroppedPosition] = React.useState(null);\n  const phraseRef = React.useRef(null);\n  const phrases = React.useMemo(() => shuffleArray(Object.values(samplePhrases).flat()), []);\n  const [forceLineBreak, setForceLineBreak] = React.useState(false);\n  const [lineBreaks, setLineBreaks] = React.useState([]);\n  const DROP_ZONE_WIDTH = 156; // 140px + 16px margin\n\n  // Enhanced calculation that checks all possible drop zone positions\n  const calculateLineBreaks = React.useCallback(() => {\n    if (!phraseRef.current || !currentPhrase) return [];\n    const words = currentPhrase.text.split(' ');\n    const containerWidth = phraseRef.current.offsetWidth - 80; // Reduced padding consideration\n    const wordSpacing = 16;\n\n    // Create temporary div for measurements\n    const tempDiv = document.createElement('div');\n    tempDiv.style.visibility = 'hidden';\n    tempDiv.style.position = 'absolute';\n    tempDiv.style.fontSize = `${PHRASE_FONT_SIZE}px`;\n    tempDiv.style.fontFamily = '\"Bookman Old Style Regular\", \"Bookman\", \"URW Bookman L\", serif';\n    tempDiv.style.whiteSpace = 'nowrap';\n    document.body.appendChild(tempDiv);\n\n    // First measure the entire phrase with the drop zone\n    tempDiv.textContent = words.join(' ');\n    const totalPhraseWidth = tempDiv.offsetWidth + wordSpacing + DROP_ZONE_WIDTH;\n\n    // If everything fits on one line, don't add any breaks\n    if (totalPhraseWidth <= containerWidth) {\n      document.body.removeChild(tempDiv);\n      return [];\n    }\n    document.body.removeChild(tempDiv);\n    return [];\n  }, [currentPhrase]);\n\n  // Update effect to use new calculation\n  React.useEffect(() => {\n    const updateLineBreaks = () => {\n      setLineBreaks(calculateLineBreaks());\n    };\n    updateLineBreaks();\n    window.addEventListener('resize', updateLineBreaks);\n    return () => window.removeEventListener('resize', updateLineBreaks);\n  }, [calculateLineBreaks]);\n  React.useEffect(() => {\n    setCurrentPhrase(phrases[currentPhraseIndex]);\n  }, [currentPhraseIndex, phrases]);\n  const FEEDBACK_DURATION = 1500;\n\n  // Update handleDrop to match the type\n  const handleDrop = React.useCallback(e => {\n    e.preventDefault();\n    const droppedType = e.dataTransfer.getData('application/punctuation');\n    if (activeDropZone !== null && droppedType) {\n      const isCorrectPosition = (currentPhrase === null || currentPhrase === void 0 ? void 0 : currentPhrase.position) === 'end' && activeDropZone === 'end' || (currentPhrase === null || currentPhrase === void 0 ? void 0 : currentPhrase.position) === activeDropZone;\n      const isCorrectType = droppedType === (currentPhrase === null || currentPhrase === void 0 ? void 0 : currentPhrase.answer);\n      const isCorrect = isCorrectPosition && isCorrectType;\n      setDroppedPosition(activeDropZone);\n      setSelectedMark(droppedType);\n      setIsCorrect(isCorrect);\n      if (isCorrect) {\n        setScore(prev => ({\n          ...prev,\n          correct: prev.correct + 1\n        }));\n      } else {\n        setScore(prev => ({\n          ...prev,\n          incorrect: prev.incorrect + 1\n        }));\n      }\n      setTimeout(() => {\n        setDroppedPosition(null);\n        setSelectedMark(null);\n        setIsCorrect(null);\n        setActiveDropZone(null);\n        goToNextPhrase();\n      }, FEEDBACK_DURATION);\n    }\n  }, [activeDropZone, currentPhrase]);\n  const calculateDropZone = (dragX, dragY) => {\n    if (!phraseRef.current) return null;\n    const words = phraseRef.current.getElementsByClassName('word');\n    const phraseRect = phraseRef.current.getBoundingClientRect();\n\n    // If the drag is outside the phrase area vertically, return null\n    if (dragY < phraseRect.top - 50 || dragY > phraseRect.bottom + 50) {\n      return null;\n    }\n    const hysteresis = activeDropZone !== null ? 30 : 0;\n    let closestDistance = Infinity;\n    let closestZone = null;\n\n    // For short phrases, prioritize the end position if near the last word\n    const lastWord = words[words.length - 1];\n    const lastWordRect = lastWord.getBoundingClientRect();\n\n    // Check end position first\n    if (dragX > lastWordRect.right - 20) {\n      const distance = Math.abs(dragX - (lastWordRect.right + 70));\n      const threshold = activeDropZone === 'end' ? 50 + hysteresis : 50;\n      if (distance < threshold) {\n        return 'end';\n      }\n    }\n\n    // Then check middle positions\n    for (let i = 0; i < words.length - 1; i++) {\n      const word = words[i];\n      const nextWord = words[i + 1];\n      const wordRect = word.getBoundingClientRect();\n      const nextWordRect = nextWord.getBoundingClientRect();\n\n      // Only check gaps on the same line\n      if (Math.abs(wordRect.top - nextWordRect.top) < 10) {\n        const gapCenter = (wordRect.right + nextWordRect.left) / 2;\n        const distance = Math.abs(dragX - gapCenter);\n        const threshold = activeDropZone === i ? 40 + hysteresis : 40;\n        if (distance < threshold && distance < closestDistance) {\n          closestDistance = distance;\n          closestZone = i;\n        }\n      }\n    }\n    return closestZone;\n  };\n\n  // Add this at the component level\n  const DROP_ZONE_APPEAR_DELAY = 0; // Remove any artificial delay\n  const DRAG_THROTTLE = 16; // About 60fps, adjust if needed\n\n  // Optimize the drag handler\n  const handleDrag = React.useCallback(e => {\n    e.preventDefault();\n\n    // Start timer on first drag if enabled\n    if (settings.timer && !isTimerRunning) {\n      setIsTimerRunning(true);\n    }\n    const {\n      clientX,\n      clientY\n    } = e;\n    const newDropZone = calculateDropZone(clientX, clientY);\n    if (newDropZone !== activeDropZone) {\n      setActiveDropZone(newDropZone);\n    }\n  }, [activeDropZone, settings.timer, isTimerRunning]);\n\n  // Add this at the component level\n  const lastDropZoneUpdate = React.useRef(0);\n\n  // Update the DropZone component with proper typing\n  const DropZone = /*#__PURE__*/React.memo(({\n    position,\n    isActive,\n    onDrop,\n    children\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropzone\",\n    \"data-dropzone\": \"true\",\n    onDragEnter: e => {\n      e.preventDefault();\n      e.currentTarget.style.border = '6px dashed #666';\n    },\n    onDragOver: e => {\n      e.preventDefault();\n      e.currentTarget.style.border = '6px dashed #666';\n    },\n    onDragLeave: e => {\n      e.preventDefault();\n      e.currentTarget.style.border = '6px dashed #ccc';\n    },\n    onDrop: onDrop,\n    style: {\n      width: '140px',\n      height: '140px',\n      border: '6px dashed #ccc',\n      borderRadius: '20px',\n      display: 'inline-flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      marginLeft: '16px',\n      opacity: 1,\n      transform: 'translateZ(0)',\n      willChange: 'transform, border'\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 261,\n    columnNumber: 5\n  }, this));\n  const renderPhrase = () => {\n    if (!currentPhrase) return null;\n    const words = currentPhrase.text.split(' ');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: phraseRef,\n      style: {\n        width: '100%',\n        maxWidth: '1600px',\n        height: '100%',\n        display: 'flex',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        padding: '40px',\n        minHeight: '300px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%',\n          display: 'flex',\n          flexWrap: 'wrap',\n          gap: '16px',\n          alignItems: 'center'\n        },\n        children: [words.map((word, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'inline-flex',\n            alignItems: 'center',\n            position: 'relative'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"word\",\n            style: {\n              fontFamily: '\"Bookman Old Style Regular\", \"Bookman\", \"URW Bookman L\", serif',\n              fontSize: `${PHRASE_FONT_SIZE}px`,\n              lineHeight: '1.1',\n              whiteSpace: 'nowrap',\n              userSelect: 'none'\n            },\n            children: word\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 15\n          }, this), (activeDropZone === index || droppedPosition === index) && /*#__PURE__*/_jsxDEV(DropZone, {\n            position: index,\n            isActive: activeDropZone === index,\n            onDrop: handleDrop,\n            children: selectedMark && droppedPosition === index && /*#__PURE__*/_jsxDEV(PunctuationCharacter, {\n              type: selectedMark,\n              isCorrect: isCorrect,\n              onClick: () => {}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }, this)), (activeDropZone === 'end' || droppedPosition === 'end') && /*#__PURE__*/_jsxDEV(DropZone, {\n          position: \"end\",\n          isActive: activeDropZone === 'end',\n          onDrop: handleDrop,\n          children: selectedMark && droppedPosition === 'end' && /*#__PURE__*/_jsxDEV(PunctuationCharacter, {\n            type: selectedMark,\n            isCorrect: isCorrect,\n            onClick: () => {}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this);\n  };\n  const goToNextPhrase = () => {\n    const nextIndex = (currentPhraseIndex + 1) % phrases.length;\n    setCurrentPhraseIndex(nextIndex);\n  };\n  const handleRestart = () => {\n    setScore({\n      correct: 0,\n      incorrect: 0\n    });\n    setGameOverOpen(false);\n    setTimeLeft(60);\n    setIsTimerRunning(false);\n    setCurrentPhraseIndex(0);\n    setDroppedPosition(null);\n    setSelectedMark(null);\n    setIsCorrect(null);\n    setActiveDropZone(null);\n  };\n\n  // Update timer effect\n  useEffect(() => {\n    if (!settings.timer) {\n      setTimeLeft(60);\n      setIsTimerRunning(false);\n      return;\n    }\n    let interval;\n    if (isTimerRunning && timeLeft > 0) {\n      interval = setInterval(() => {\n        setTimeLeft(prev => {\n          if (prev <= 1) {\n            setGameOverOpen(true);\n            setIsTimerRunning(false);\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [isTimerRunning, timeLeft, settings.timer]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      height: '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      position: 'relative',\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        padding: '16px 24px',\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: '16px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n          onClick: () => navigate('/select'),\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            margin: 0\n          },\n          children: \"Practice\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: '24px',\n          fontSize: '18px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: '8px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#22C55E'\n            },\n            children: [\"\\u2713 \", score.correct]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#EF4444'\n            },\n            children: [\"\\u2717 \", score.incorrect]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 11\n        }, this), settings.timer && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '48px',\n            height: '48px',\n            borderRadius: '50%',\n            border: `2px solid ${getTimerColor(timeLeft)}`,\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            fontFamily: 'monospace',\n            fontSize: '15px',\n            color: getTimerColor(timeLeft),\n            transition: 'all 0.3s ease',\n            position: 'relative',\n            background: timeLeft <= 10 ? 'rgba(239, 68, 68, 0.1)' : 'transparent'\n          },\n          children: [timeLeft <= 10 && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'absolute',\n              top: 0,\n              left: 0,\n              right: 0,\n              bottom: 0,\n              borderRadius: '50%',\n              background: 'rgba(239, 68, 68, 0.2)',\n              animation: 'pulse 1s ease-in-out infinite'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              position: 'relative',\n              zIndex: 1,\n              fontWeight: timeLeft <= 30 ? 600 : 400\n            },\n            children: formatTime(timeLeft)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        flex: 1,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: renderPhrase()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        bottom: 0,\n        left: 0,\n        right: 0,\n        display: 'flex',\n        justifyContent: 'center',\n        gap: '32px',\n        padding: '24px',\n        minHeight: '120px',\n        background: 'white'\n      },\n      children: ['period', 'exclamation', 'question', 'comma'].map(type => /*#__PURE__*/_jsxDEV(PunctuationCharacter, {\n        type: type,\n        onClick: () => {},\n        isCorrect: undefined,\n        isDraggable: true,\n        onDrag: handleDrag,\n        onDragEnd: () => setActiveDropZone(null)\n      }, type, false, {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 7\n    }, this), gameOverOpen && /*#__PURE__*/_jsxDEV(GameOverDialog, {\n      score: score,\n      onClose: () => setGameOverOpen(false),\n      onRestart: handleRestart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 423,\n    columnNumber: 5\n  }, this);\n};\n\n// Add this CSS to your global styles or as a styled component\n_s(GameScreen, \"sfOrx79jN4USqUjQLVma/hqSsRE=\", false, function () {\n  return [useNavigate, useGame];\n});\n_c = GameScreen;\nconst styles = `\n  @keyframes pulse {\n    0% {\n      transform: scale(1);\n      opacity: 1;\n    }\n    50% {\n      transform: scale(1.1);\n      opacity: 0.5;\n    }\n    100% {\n      transform: scale(1);\n      opacity: 1;\n    }\n  }\n`;\nexport default GameScreen;\nvar _c;\n$RefreshReg$(_c, \"GameScreen\");","map":{"version":3,"names":["React","useNavigate","useGame","PunctuationCharacter","shuffleArray","Button","CustomButton","GameOverDialog","useEffect","jsxDEV","_jsxDEV","samplePhrases","period","text","answer","position","exclamation","question","comma","PHRASE_FONT_SIZE","formatTime","seconds","minutes","Math","floor","remainingSeconds","toString","padStart","getTimerColor","timeLeft","GameScreen","_s","navigate","settings","currentPhraseIndex","setCurrentPhraseIndex","useState","currentPhrase","setCurrentPhrase","selectedMark","setSelectedMark","isCorrect","setIsCorrect","score","setScore","correct","incorrect","hasStarted","setHasStarted","setTimeLeft","isTimerRunning","setIsTimerRunning","gameOverOpen","setGameOverOpen","activeDropZone","setActiveDropZone","droppedPosition","setDroppedPosition","phraseRef","useRef","phrases","useMemo","Object","values","flat","forceLineBreak","setForceLineBreak","lineBreaks","setLineBreaks","DROP_ZONE_WIDTH","calculateLineBreaks","useCallback","current","words","split","containerWidth","offsetWidth","wordSpacing","tempDiv","document","createElement","style","visibility","fontSize","fontFamily","whiteSpace","body","appendChild","textContent","join","totalPhraseWidth","removeChild","updateLineBreaks","window","addEventListener","removeEventListener","FEEDBACK_DURATION","handleDrop","e","preventDefault","droppedType","dataTransfer","getData","isCorrectPosition","isCorrectType","prev","setTimeout","goToNextPhrase","calculateDropZone","dragX","dragY","getElementsByClassName","phraseRect","getBoundingClientRect","top","bottom","hysteresis","closestDistance","Infinity","closestZone","lastWord","length","lastWordRect","right","distance","abs","threshold","i","word","nextWord","wordRect","nextWordRect","gapCenter","left","DROP_ZONE_APPEAR_DELAY","DRAG_THROTTLE","handleDrag","timer","clientX","clientY","newDropZone","lastDropZoneUpdate","DropZone","memo","isActive","onDrop","children","className","onDragEnter","currentTarget","border","onDragOver","onDragLeave","width","height","borderRadius","display","justifyContent","alignItems","marginLeft","opacity","transform","willChange","fileName","_jsxFileName","lineNumber","columnNumber","renderPhrase","ref","maxWidth","padding","minHeight","flexWrap","gap","map","index","lineHeight","userSelect","type","onClick","nextIndex","handleRestart","interval","setInterval","clearInterval","flexDirection","overflow","margin","color","transition","background","animation","zIndex","fontWeight","flex","undefined","isDraggable","onDrag","onDragEnd","onClose","onRestart","_c","styles","$RefreshReg$"],"sources":["/Users/benediktlehnert/Documents/GitHub/punx-app-new/src/screens/GameScreen.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useGame } from '../context/GameContext';\nimport PunctuationCharacter from '../components/PunctuationCharacter';\nimport { shuffleArray } from '../utils/shuffle';\nimport { Button as CustomButton } from '../components/Button';\nimport { GameOverDialog } from '../components/GameOverDialog';\nimport { useEffect, useState } from 'react';\n\ntype Phrase = {\n  text: string;\n  answer: string;\n  position: 'end' | number; // 'end' or index where punctuation should go\n};\n\ntype PhraseCollection = {\n  period: Phrase[];\n  exclamation: Phrase[];\n  question: Phrase[];\n  comma: Phrase[];\n};\n\nconst samplePhrases: PhraseCollection = {\n  period: [\n    { text: \"I love to play in the park\", answer: \"period\", position: 'end' },\n    { text: \"The sun is shining today\", answer: \"period\", position: 'end' },\n  ],\n  exclamation: [\n    { text: \"What a wonderful day\", answer: \"exclamation\", position: 'end' },\n    { text: \"I canâ€™t believe it\", answer: \"exclamation\", position: 'end' },\n  ],\n  question: [\n    { text: \"How are you today\", answer: \"question\", position: 'end' },\n    { text: \"Where did you go\", answer: \"question\", position: 'end' },\n  ],\n  comma: [\n    { text: \"After the movie we went home\", answer: \"comma\", position: 2 }, // After index 2 (after \"movie\")\n    { text: \"Yes I would love to\", answer: \"comma\", position: 0 }, // After index 0 (after \"Yes\")\n  ],\n};\n\ntype PunctuationType = 'period' | 'exclamation' | 'question' | 'comma';\n\n// Add this type to help with calculations\ntype LineBreakInfo = {\n  beforeWord: number | null;  // Index of word to break before\n  dropZoneWidth: number;      // Width needed for the drop zone\n};\n\n// Add proper type definitions\ninterface DropZoneProps {\n  position: number | 'end';\n  isActive: boolean;\n  onDrop: (e: React.DragEvent<HTMLDivElement>) => void;\n  children?: React.ReactNode;\n}\n\nconst PHRASE_FONT_SIZE = 80; // Adjust this value to change the font size\n\nconst formatTime = (seconds: number): string => {\n  const minutes = Math.floor(seconds / 60);\n  const remainingSeconds = seconds % 60;\n  return `${minutes.toString().padStart(2, '0')}:${remainingSeconds.toString().padStart(2, '0')}`;\n};\n\n// Add this helper function to determine timer color\nconst getTimerColor = (timeLeft: number): string => {\n  if (timeLeft <= 10) return '#EF4444'; // Red for last 10 seconds\n  if (timeLeft <= 30) return '#F59E0B'; // Orange for last 30 seconds\n  return '#64748B'; // Default slate color\n};\n\nconst GameScreen = () => {\n  const navigate = useNavigate();\n  const { settings } = useGame();\n  const [currentPhraseIndex, setCurrentPhraseIndex] = React.useState(0);\n  const [currentPhrase, setCurrentPhrase] = React.useState<Phrase | null>(null);\n  const [selectedMark, setSelectedMark] = React.useState<PunctuationType | null>(null);\n  const [isCorrect, setIsCorrect] = React.useState<boolean | null>(null);\n  const [score, setScore] = React.useState({ correct: 0, incorrect: 0 });\n  const [hasStarted, setHasStarted] = React.useState(false);\n  const [timeLeft, setTimeLeft] = React.useState<number>(60); // Default 1 minute\n  const [isTimerRunning, setIsTimerRunning] = React.useState(false);\n  const [gameOverOpen, setGameOverOpen] = React.useState(false);\n  const [activeDropZone, setActiveDropZone] = React.useState<number | 'end' | null>(null);\n  const [droppedPosition, setDroppedPosition] = React.useState<number | 'end' | null>(null);\n  \n  const phraseRef = React.useRef<HTMLDivElement>(null);\n  const phrases = React.useMemo(() => shuffleArray(Object.values(samplePhrases).flat()), []);\n\n  const [forceLineBreak, setForceLineBreak] = React.useState(false);\n  const [lineBreaks, setLineBreaks] = React.useState<LineBreakInfo[]>([]);\n\n  const DROP_ZONE_WIDTH = 156; // 140px + 16px margin\n\n  // Enhanced calculation that checks all possible drop zone positions\n  const calculateLineBreaks = React.useCallback(() => {\n    if (!phraseRef.current || !currentPhrase) return [];\n\n    const words = currentPhrase.text.split(' ');\n    const containerWidth = phraseRef.current.offsetWidth - 80; // Reduced padding consideration\n    const wordSpacing = 16;\n    \n    // Create temporary div for measurements\n    const tempDiv = document.createElement('div');\n    tempDiv.style.visibility = 'hidden';\n    tempDiv.style.position = 'absolute';\n    tempDiv.style.fontSize = `${PHRASE_FONT_SIZE}px`;\n    tempDiv.style.fontFamily = '\"Bookman Old Style Regular\", \"Bookman\", \"URW Bookman L\", serif';\n    tempDiv.style.whiteSpace = 'nowrap';\n    document.body.appendChild(tempDiv);\n\n    // First measure the entire phrase with the drop zone\n    tempDiv.textContent = words.join(' ');\n    const totalPhraseWidth = tempDiv.offsetWidth + wordSpacing + DROP_ZONE_WIDTH;\n\n    // If everything fits on one line, don't add any breaks\n    if (totalPhraseWidth <= containerWidth) {\n      document.body.removeChild(tempDiv);\n      return [];\n    }\n\n    document.body.removeChild(tempDiv);\n    return [];\n  }, [currentPhrase]);\n\n  // Update effect to use new calculation\n  React.useEffect(() => {\n    const updateLineBreaks = () => {\n      setLineBreaks(calculateLineBreaks());\n    };\n\n    updateLineBreaks();\n    window.addEventListener('resize', updateLineBreaks);\n    return () => window.removeEventListener('resize', updateLineBreaks);\n  }, [calculateLineBreaks]);\n\n  React.useEffect(() => {\n    setCurrentPhrase(phrases[currentPhraseIndex]);\n  }, [currentPhraseIndex, phrases]);\n\n  const FEEDBACK_DURATION = 1500;\n\n  // Update handleDrop to match the type\n  const handleDrop = React.useCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    \n    const droppedType = e.dataTransfer.getData('application/punctuation') as PunctuationType;\n    \n    if (activeDropZone !== null && droppedType) {\n      const isCorrectPosition = \n        (currentPhrase?.position === 'end' && activeDropZone === 'end') ||\n        (currentPhrase?.position === activeDropZone);\n      const isCorrectType = droppedType === currentPhrase?.answer;\n      const isCorrect = isCorrectPosition && isCorrectType;\n\n      setDroppedPosition(activeDropZone);\n      setSelectedMark(droppedType);\n      setIsCorrect(isCorrect);\n\n      if (isCorrect) {\n        setScore(prev => ({ ...prev, correct: prev.correct + 1 }));\n      } else {\n        setScore(prev => ({ ...prev, incorrect: prev.incorrect + 1 }));\n      }\n\n      setTimeout(() => {\n        setDroppedPosition(null);\n        setSelectedMark(null);\n        setIsCorrect(null);\n        setActiveDropZone(null);\n        goToNextPhrase();\n      }, FEEDBACK_DURATION);\n    }\n  }, [activeDropZone, currentPhrase]);\n\n  const calculateDropZone = (dragX: number, dragY: number) => {\n    if (!phraseRef.current) return null;\n\n    const words = phraseRef.current.getElementsByClassName('word');\n    const phraseRect = phraseRef.current.getBoundingClientRect();\n    \n    // If the drag is outside the phrase area vertically, return null\n    if (dragY < phraseRect.top - 50 || dragY > phraseRect.bottom + 50) {\n      return null;\n    }\n\n    const hysteresis = activeDropZone !== null ? 30 : 0;\n    let closestDistance = Infinity;\n    let closestZone: number | 'end' | null = null;\n\n    // For short phrases, prioritize the end position if near the last word\n    const lastWord = words[words.length - 1];\n    const lastWordRect = lastWord.getBoundingClientRect();\n    \n    // Check end position first\n    if (dragX > lastWordRect.right - 20) {\n      const distance = Math.abs(dragX - (lastWordRect.right + 70));\n      const threshold = activeDropZone === 'end' ? 50 + hysteresis : 50;\n      \n      if (distance < threshold) {\n        return 'end';\n      }\n    }\n\n    // Then check middle positions\n    for (let i = 0; i < words.length - 1; i++) {\n      const word = words[i];\n      const nextWord = words[i + 1];\n      const wordRect = word.getBoundingClientRect();\n      const nextWordRect = nextWord.getBoundingClientRect();\n      \n      // Only check gaps on the same line\n      if (Math.abs(wordRect.top - nextWordRect.top) < 10) {\n        const gapCenter = (wordRect.right + nextWordRect.left) / 2;\n        const distance = Math.abs(dragX - gapCenter);\n        \n        const threshold = activeDropZone === i ? 40 + hysteresis : 40;\n        \n        if (distance < threshold && distance < closestDistance) {\n          closestDistance = distance;\n          closestZone = i;\n        }\n      }\n    }\n\n    return closestZone;\n  };\n\n  // Add this at the component level\n  const DROP_ZONE_APPEAR_DELAY = 0; // Remove any artificial delay\n  const DRAG_THROTTLE = 16; // About 60fps, adjust if needed\n\n  // Optimize the drag handler\n  const handleDrag = React.useCallback((e: React.DragEvent) => {\n    e.preventDefault();\n    \n    // Start timer on first drag if enabled\n    if (settings.timer && !isTimerRunning) {\n      setIsTimerRunning(true);\n    }\n\n    const { clientX, clientY } = e;\n    const newDropZone = calculateDropZone(clientX, clientY);\n    \n    if (newDropZone !== activeDropZone) {\n      setActiveDropZone(newDropZone);\n    }\n  }, [activeDropZone, settings.timer, isTimerRunning]);\n\n  // Add this at the component level\n  const lastDropZoneUpdate = React.useRef<number>(0);\n\n  // Update the DropZone component with proper typing\n  const DropZone = React.memo(({ \n    position, \n    isActive, \n    onDrop, \n    children \n  }: DropZoneProps) => (\n    <div\n      className=\"dropzone\"\n      data-dropzone=\"true\"\n      onDragEnter={(e: React.DragEvent<HTMLDivElement>) => {\n        e.preventDefault();\n        e.currentTarget.style.border = '6px dashed #666';\n      }}\n      onDragOver={(e: React.DragEvent<HTMLDivElement>) => {\n        e.preventDefault();\n        e.currentTarget.style.border = '6px dashed #666';\n      }}\n      onDragLeave={(e: React.DragEvent<HTMLDivElement>) => {\n        e.preventDefault();\n        e.currentTarget.style.border = '6px dashed #ccc';\n      }}\n      onDrop={onDrop}\n      style={{\n        width: '140px',\n        height: '140px',\n        border: '6px dashed #ccc',\n        borderRadius: '20px',\n        display: 'inline-flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginLeft: '16px',\n        opacity: 1,\n        transform: 'translateZ(0)',\n        willChange: 'transform, border',\n      }}\n    >\n      {children}\n    </div>\n  ));\n\n  const renderPhrase = () => {\n    if (!currentPhrase) return null;\n\n    const words = currentPhrase.text.split(' ');\n    \n    return (\n      <div \n        ref={phraseRef}\n        style={{\n          width: '100%',\n          maxWidth: '1600px',\n          height: '100%',\n          display: 'flex',\n          justifyContent: 'flex-start',\n          alignItems: 'center',\n          padding: '40px',\n          minHeight: '300px',\n        }}\n      >\n        <div style={{\n          width: '100%',\n          display: 'flex',\n          flexWrap: 'wrap',\n          gap: '16px',\n          alignItems: 'center',\n        }}>\n          {words.map((word, index) => (\n            <div\n              key={index}\n              style={{\n                display: 'inline-flex',\n                alignItems: 'center',\n                position: 'relative',\n              }}\n            >\n              <span \n                className=\"word\"\n                style={{\n                  fontFamily: '\"Bookman Old Style Regular\", \"Bookman\", \"URW Bookman L\", serif',\n                  fontSize: `${PHRASE_FONT_SIZE}px`,\n                  lineHeight: '1.1',\n                  whiteSpace: 'nowrap',\n                  userSelect: 'none',\n                }}\n              >\n                {word}\n              </span>\n              {(activeDropZone === index || droppedPosition === index) && (\n                <DropZone\n                  position={index}\n                  isActive={activeDropZone === index}\n                  onDrop={handleDrop}\n                >\n                  {selectedMark && droppedPosition === index && (\n                    <PunctuationCharacter\n                      type={selectedMark}\n                      isCorrect={isCorrect}\n                      onClick={() => {}}\n                    />\n                  )}\n                </DropZone>\n              )}\n            </div>\n          ))}\n          {(activeDropZone === 'end' || droppedPosition === 'end') && (\n            <DropZone\n              position=\"end\"\n              isActive={activeDropZone === 'end'}\n              onDrop={handleDrop}\n            >\n              {selectedMark && droppedPosition === 'end' && (\n                <PunctuationCharacter\n                  type={selectedMark}\n                  isCorrect={isCorrect}\n                  onClick={() => {}}\n                />\n              )}\n            </DropZone>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  const goToNextPhrase = () => {\n    const nextIndex = (currentPhraseIndex + 1) % phrases.length;\n    setCurrentPhraseIndex(nextIndex);\n  };\n\n  const handleRestart = () => {\n    setScore({ correct: 0, incorrect: 0 });\n    setGameOverOpen(false);\n    setTimeLeft(60);\n    setIsTimerRunning(false);\n    setCurrentPhraseIndex(0);\n    setDroppedPosition(null);\n    setSelectedMark(null);\n    setIsCorrect(null);\n    setActiveDropZone(null);\n  };\n\n  // Update timer effect\n  useEffect(() => {\n    if (!settings.timer) {\n      setTimeLeft(60);\n      setIsTimerRunning(false);\n      return;\n    }\n\n    let interval: NodeJS.Timeout;\n\n    if (isTimerRunning && timeLeft > 0) {\n      interval = setInterval(() => {\n        setTimeLeft((prev) => {\n          if (prev <= 1) {\n            setGameOverOpen(true);\n            setIsTimerRunning(false);\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    }\n\n    return () => clearInterval(interval);\n  }, [isTimerRunning, timeLeft, settings.timer]);\n\n  return (\n    <div style={{\n      width: '100%',\n      height: '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      position: 'relative',\n      overflow: 'hidden',\n    }}>\n      <div style={{\n        width: '100%',\n        padding: '16px 24px',\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n      }}>\n        <div style={{ display: 'flex', alignItems: 'center', gap: '16px' }}>\n          <CustomButton onClick={() => navigate('/select')}>\n            Back\n          </CustomButton>\n          <h1 style={{ margin: 0 }}>Practice</h1>\n        </div>\n        <div style={{ \n          display: 'flex', \n          alignItems: 'center', \n          gap: '24px',\n          fontSize: '18px',\n        }}>\n          <div style={{ \n            display: 'flex', \n            alignItems: 'center', \n            gap: '8px' \n          }}>\n            <span style={{ color: '#22C55E' }}>âœ“ {score.correct}</span>\n            <span style={{ color: '#EF4444' }}>âœ— {score.incorrect}</span>\n          </div>\n          {settings.timer && (\n            <div style={{\n              width: '48px',\n              height: '48px',\n              borderRadius: '50%',\n              border: `2px solid ${getTimerColor(timeLeft)}`,\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              fontFamily: 'monospace',\n              fontSize: '15px',\n              color: getTimerColor(timeLeft),\n              transition: 'all 0.3s ease',\n              position: 'relative',\n              background: timeLeft <= 10 ? 'rgba(239, 68, 68, 0.1)' : 'transparent',\n            }}>\n              {/* Pulsing background for last 10 seconds */}\n              {timeLeft <= 10 && (\n                <div style={{\n                  position: 'absolute',\n                  top: 0,\n                  left: 0,\n                  right: 0,\n                  bottom: 0,\n                  borderRadius: '50%',\n                  background: 'rgba(239, 68, 68, 0.2)',\n                  animation: 'pulse 1s ease-in-out infinite',\n                }} />\n              )}\n              {/* Timer text */}\n              <span style={{ \n                position: 'relative',\n                zIndex: 1,\n                fontWeight: timeLeft <= 30 ? 600 : 400,\n              }}>\n                {formatTime(timeLeft)}\n              </span>\n            </div>\n          )}\n        </div>\n      </div>\n\n      <div style={{\n        width: '100%',\n        flex: 1,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}>\n        {renderPhrase()}\n      </div>\n\n      <div style={{\n        position: 'fixed',\n        bottom: 0,\n        left: 0,\n        right: 0,\n        display: 'flex',\n        justifyContent: 'center',\n        gap: '32px',\n        padding: '24px',\n        minHeight: '120px',\n        background: 'white',\n      }}>\n        {['period', 'exclamation', 'question', 'comma'].map((type) => (\n          <PunctuationCharacter\n            key={type}\n            type={type as PunctuationType}\n            onClick={() => {}}\n            isCorrect={undefined}\n            isDraggable={true}\n            onDrag={handleDrag}\n            onDragEnd={() => setActiveDropZone(null)}\n          />\n        ))}\n      </div>\n\n      {gameOverOpen && (\n        <GameOverDialog\n          score={score}\n          onClose={() => setGameOverOpen(false)}\n          onRestart={handleRestart}\n        />\n      )}\n    </div>\n  );\n};\n\n// Add this CSS to your global styles or as a styled component\nconst styles = `\n  @keyframes pulse {\n    0% {\n      transform: scale(1);\n      opacity: 1;\n    }\n    50% {\n      transform: scale(1.1);\n      opacity: 0.5;\n    }\n    100% {\n      transform: scale(1);\n      opacity: 1;\n    }\n  }\n`;\n\nexport default GameScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}