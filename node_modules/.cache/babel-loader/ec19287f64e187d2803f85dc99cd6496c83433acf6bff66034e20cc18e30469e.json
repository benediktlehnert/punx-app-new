{"ast":null,"code":"import React from'react';import{useNavigate}from'react-router-dom';import{useGame}from'../context/GameContext';import SettingsModal from'../components/SettingsModal';import{Button}from'../components/Button';import'../styles/CharacterSelectScreen.css';// Import character images with correct paths\nimport periodImage from'../assets/characters/peri/peri-default.png';import exclamationImage from'../assets/characters/ex/ex-default.png';import questionImage from'../assets/characters/quest/quest-default.png';import commaImage from'../assets/characters/curly/curly-default.png';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CharacterSelectScreen=()=>{const navigate=useNavigate();const{setPunctuationType,settings,updateSettings}=useGame();const[settingsOpen,setSettingsOpen]=React.useState(false);const handleSettingsOpen=()=>setSettingsOpen(true);const handleSettingsClose=()=>setSettingsOpen(false);const handleSettingsChange=newSettings=>{updateSettings(newSettings);};const handleSelect=type=>{setPunctuationType(type);navigate('/game');};const handleShuffle=()=>{const types=['period','exclamation','question','comma'];const randomType=types[Math.floor(Math.random()*types.length)];setPunctuationType(randomType);navigate('/game');};return/*#__PURE__*/_jsxs(\"div\",{className:\"character-select-screen\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"select-header\",children:[/*#__PURE__*/_jsx(Button,{onClick:()=>navigate('/'),children:\"Back\"}),/*#__PURE__*/_jsx(Button,{onClick:handleSettingsOpen,children:\"Settings\"})]}),/*#__PURE__*/_jsxs(\"main\",{className:\"select-content\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"select-title\",children:\"Pick your PUNX\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"character-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"character-button-container\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"character-button\",onClick:()=>handleSelect('period'),children:/*#__PURE__*/_jsx(\"img\",{src:periodImage,alt:\"Period\",className:\"character-image-small\"})}),/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"PERI\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"character-button-container\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"character-button\",onClick:()=>handleSelect('exclamation'),children:/*#__PURE__*/_jsx(\"img\",{src:exclamationImage,alt:\"Exclamation\",className:\"character-image-large\"})}),/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"EX\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"character-button-container\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"character-button\",onClick:()=>handleSelect('question'),children:/*#__PURE__*/_jsx(\"img\",{src:questionImage,alt:\"Question\",className:\"character-image-large\"})}),/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"QUEST\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"character-button-container\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"character-button\",onClick:()=>handleSelect('comma'),children:/*#__PURE__*/_jsx(\"img\",{src:commaImage,alt:\"Comma\",className:\"character-image-medium\"})}),/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Curly\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"character-button-container\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"shuffle-button\",onClick:handleShuffle,children:/*#__PURE__*/_jsx(\"img\",{src:commaImage,alt:\"Comma\",className:\"character-image-small\"})}),/*#__PURE__*/_jsx(\"span\",{className:\"label\",children:\"Shuffle\"})]})]})]}),/*#__PURE__*/_jsx(SettingsModal,{open:settingsOpen,onClose:handleSettingsClose,settings:settings,onSettingsChange:handleSettingsChange})]});};export default CharacterSelectScreen;","map":{"version":3,"names":["React","useNavigate","useGame","SettingsModal","Button","periodImage","exclamationImage","questionImage","commaImage","jsx","_jsx","jsxs","_jsxs","CharacterSelectScreen","navigate","setPunctuationType","settings","updateSettings","settingsOpen","setSettingsOpen","useState","handleSettingsOpen","handleSettingsClose","handleSettingsChange","newSettings","handleSelect","type","handleShuffle","types","randomType","Math","floor","random","length","className","children","onClick","src","alt","open","onClose","onSettingsChange"],"sources":["/Users/benediktlehnert/Documents/GitHub/punx-app-new/src/screens/CharacterSelectScreen.tsx"],"sourcesContent":["import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useGame } from '../context/GameContext';\nimport SettingsModal from '../components/SettingsModal';\nimport { Button } from '../components/Button';\nimport '../styles/CharacterSelectScreen.css';\n\n// Import character images with correct paths\nimport periodImage from '../assets/characters/peri/peri-default.png';\nimport exclamationImage from '../assets/characters/ex/ex-default.png';\nimport questionImage from '../assets/characters/quest/quest-default.png';\nimport commaImage from '../assets/characters/curly/curly-default.png';\n\nconst CharacterSelectScreen = () => {\n  const navigate = useNavigate();\n  const { setPunctuationType, settings, updateSettings } = useGame();\n  const [settingsOpen, setSettingsOpen] = React.useState(false);\n\n  const handleSettingsOpen = () => setSettingsOpen(true);\n  const handleSettingsClose = () => setSettingsOpen(false);\n\n  const handleSettingsChange = (newSettings: Partial<typeof settings>) => {\n    updateSettings(newSettings);\n  };\n\n  const handleSelect = (type: string) => {\n    setPunctuationType(type);\n    navigate('/game');\n  };\n\n  const handleShuffle = () => {\n    const types = ['period', 'exclamation', 'question', 'comma'];\n    const randomType = types[Math.floor(Math.random() * types.length)];\n    setPunctuationType(randomType);\n    navigate('/game');\n  };\n\n  return (\n    <div className=\"character-select-screen\">\n      <header className=\"select-header\">\n        <Button onClick={() => navigate('/')}>\n          Back\n        </Button>\n        <Button onClick={handleSettingsOpen}>\n          Settings\n        </Button>\n      </header>\n\n      <main className=\"select-content\">\n        <h1 className=\"select-title\">Pick your PUNX</h1>\n        \n        <div className=\"character-grid\">\n          <div className=\"character-button-container\">\n            <button \n              className=\"character-button\"\n              onClick={() => handleSelect('period')}\n            >\n              <img src={periodImage} alt=\"Period\" className=\"character-image-small\" />\n            </button>\n            <span className=\"label\">PERI</span>\n          </div>\n\n          <div className=\"character-button-container\">\n            <button \n              className=\"character-button\"\n              onClick={() => handleSelect('exclamation')}\n            >\n              <img src={exclamationImage} alt=\"Exclamation\" className=\"character-image-large\" />\n            </button>\n            <span className=\"label\">EX</span>\n          </div>\n\n          <div className=\"character-button-container\">\n            <button \n              className=\"character-button\"\n              onClick={() => handleSelect('question')}\n            >\n              <img src={questionImage} alt=\"Question\" className=\"character-image-large\" />\n            </button>\n            <span className=\"label\">QUEST</span>\n          </div>\n\n          <div className=\"character-button-container\">\n            <button \n              className=\"character-button\"\n              onClick={() => handleSelect('comma')}\n            >\n              <img src={commaImage} alt=\"Comma\" className=\"character-image-medium\" />\n            </button>\n            <span className=\"label\">Curly</span>\n          </div>\n          \n          <div className=\"character-button-container\">\n            <button \n              className=\"shuffle-button\"\n              onClick={handleShuffle}\n            >\n              <img src={commaImage} alt=\"Comma\" className=\"character-image-small\" />\n            </button>\n            <span className=\"label\">Shuffle</span>\n          </div>\n        </div>\n      </main>\n\n      <SettingsModal\n        open={settingsOpen}\n        onClose={handleSettingsClose}\n        settings={settings}\n        onSettingsChange={handleSettingsChange}\n      />\n    </div>\n  );\n};\n\nexport default CharacterSelectScreen; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}