{"ast":null,"code":"var _jsxFileName = \"/Users/benediktlehnert/Documents/GitHub/punx-app-new/src/screens/GameScreen.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useMemo, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Box, Typography } from '@mui/material';\nimport PunctuationCharacter from '../components/PunctuationCharacter';\nimport GameOverDialog from '../components/GameOverDialog';\nimport { Button as CustomButton } from '../components/Button';\nimport { useGame } from '../context/GameContext';\nimport { shuffleArray } from '../utils';\nimport { samplePhrases } from '../data/phrases';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst punctuationMarks = ['period', 'question', 'exclamation', 'comma'];\nconst GameScreen = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    punctuationType,\n    settings\n  } = useGame();\n  const [currentPhraseIndex, setCurrentPhraseIndex] = useState(0);\n  const [currentPhrase, setCurrentPhrase] = useState(null);\n  const [selectedMark, setSelectedMark] = useState(null);\n  const [isCorrect, setIsCorrect] = useState(null);\n  const [score, setScore] = useState({\n    correct: 0,\n    incorrect: 0\n  });\n  const [hasStarted, setHasStarted] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(() => settings.timeLimit);\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [gameOverOpen, setGameOverOpen] = useState(false);\n  const [shuffledTypes, setShuffledTypes] = useState(['period', 'exclamation', 'question', 'comma']);\n  const [feedback, setFeedback] = useState(null);\n  const timerRef = useRef(null);\n  const phrases = useMemo(() => shuffleArray(Object.values(samplePhrases).flat()), []);\n  useEffect(() => {\n    setCurrentPhrase(phrases[currentPhraseIndex]);\n  }, [currentPhraseIndex, phrases]);\n  const startTimer = useCallback(() => {\n    if (!hasStarted && settings.timer) {\n      setHasStarted(true);\n      setTimeLeft(settings.timeLimit);\n    }\n  }, [hasStarted, settings.timer, settings.timeLimit]);\n  useEffect(() => {\n    if (hasStarted && settings.timer && timeLeft !== null && timeLeft > 0) {\n      timerRef.current = setInterval(() => {\n        setTimeLeft(prev => {\n          if (prev === null || prev <= 1) {\n            if (timerRef.current) {\n              clearInterval(timerRef.current);\n            }\n            setGameOverOpen(true);\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n      return () => {\n        if (timerRef.current) {\n          clearInterval(timerRef.current);\n        }\n      };\n    }\n  }, [hasStarted, settings.timer, timeLeft]);\n  useEffect(() => {\n    return () => {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    };\n  }, []);\n  const handleFirstInteraction = () => {\n    startTimer();\n  };\n  const getFeedbackMessage = (type, isCorrect) => {\n    if (isCorrect) {\n      return {\n        type: 'success',\n        message: \"Great job! That's exactly right!\"\n      };\n    }\n    const correctType = currentPhrase === null || currentPhrase === void 0 ? void 0 : currentPhrase.answer;\n    switch (correctType) {\n      case 'period':\n        return {\n          type: 'error',\n          message: \"This sentence needs a period to show it's complete.\"\n        };\n      case 'question':\n        return {\n          type: 'error',\n          message: \"This is a question, so it needs a question mark.\"\n        };\n      case 'exclamation':\n        return {\n          type: 'error',\n          message: \"This sentence shows strong feeling or emotion, so it needs an exclamation mark!\"\n        };\n      case 'comma':\n        return {\n          type: 'error',\n          message: \"A comma is needed here to separate parts of the sentence.\"\n        };\n      default:\n        return {\n          type: 'error',\n          message: \"That's not quite right. Try again!\"\n        };\n    }\n  };\n  const handleCharacterSelect = type => {\n    if (!currentPhrase) return;\n\n    // Start timer on first interaction if not started\n    if (!hasStarted) {\n      startTimer();\n    }\n    setSelectedMark(type);\n    const isCorrectMark = type === currentPhrase.answer;\n    setIsCorrect(isCorrectMark);\n    if (isCorrectMark) {\n      setScore(prev => ({\n        ...prev,\n        correct: prev.correct + 1\n      }));\n    } else {\n      setScore(prev => ({\n        ...prev,\n        incorrect: prev.incorrect + 1\n      }));\n    }\n\n    // Wait for animation then move to next phrase\n    setTimeout(() => {\n      setSelectedMark(null);\n      setIsCorrect(null);\n      goToNextPhrase();\n    }, 1000);\n  };\n  const goToNextPhrase = () => {\n    const nextIndex = (currentPhraseIndex + 1) % phrases.length;\n    setCurrentPhraseIndex(nextIndex);\n  };\n  const handleDrop = e => {\n    e.preventDefault();\n    e.currentTarget.classList.remove('dragover');\n    const droppedType = e.dataTransfer.getData('application/punctuation');\n    console.log('Dropped type:', droppedType); // Add this for debugging\n\n    if (droppedType) {\n      handleCharacterSelect(droppedType);\n    }\n  };\n  const handleDragOver = e => {\n    e.preventDefault(); // This is crucial for enabling drop\n    e.currentTarget.style.backgroundColor = 'rgba(0, 0, 0, 0.1)';\n  };\n  const handleDragLeave = e => {\n    e.preventDefault();\n    e.currentTarget.style.backgroundColor = 'transparent';\n  };\n  const handleDragStart = e => {\n    startTimer();\n    e.dataTransfer.setData('text/plain', e.currentTarget.id);\n  };\n  const renderPhrase = () => {\n    if (!currentPhrase) return null;\n    const words = currentPhrase.text.split(' ');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        textAlign: 'center',\n        willChange: 'transform',\n        transform: 'translateZ(0)',\n        backfaceVisibility: 'hidden'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontFamily: '\"Bookman Old Style Regular\", \"Bookman\", \"URW Bookman L\", serif',\n          fontWeight: 'normal',\n          fontSize: window.innerWidth < 600 ? '80px' : window.innerWidth < 960 ? '100px' : window.innerWidth < 1280 ? '120px' : '140px',\n          lineHeight: '1.1',\n          display: 'inline-block',\n          textAlign: 'left',\n          maxWidth: '90%',\n          margin: '0 auto',\n          WebkitFontSmoothing: 'antialiased',\n          WebkitTextSizeAdjust: '100%',\n          color: '#000000'\n        },\n        children: words.map((word, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              display: 'inline-block',\n              fontFamily: '\"Bookman Old Style Regular\", \"Bookman\", \"URW Bookman L\", serif'\n            },\n            children: word\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this), (currentPhrase.position === index || index === words.length - 1 && currentPhrase.position === 'end') && /*#__PURE__*/_jsxDEV(\"span\", {\n            \"data-dropzone\": \"true\",\n            style: {\n              display: 'inline-flex',\n              width: '140px',\n              height: '140px',\n              border: '6px dashed #ccc',\n              borderRadius: '20px',\n              margin: '0 16px',\n              verticalAlign: 'top',\n              justifyContent: 'center',\n              alignItems: 'center',\n              transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)'\n            },\n            onDragOver: e => {\n              e.preventDefault();\n              e.currentTarget.style.border = '6px dashed #666';\n              e.currentTarget.style.transform = 'scale(1.05)';\n            },\n            onDragLeave: e => {\n              e.preventDefault();\n              e.currentTarget.style.border = '6px dashed #ccc';\n              e.currentTarget.style.transform = 'scale(1)';\n            },\n            onDrop: e => {\n              e.preventDefault();\n              e.currentTarget.style.border = '6px dashed #ccc';\n              e.currentTarget.style.transform = 'scale(1)';\n              handleDrop(e);\n            },\n            children: selectedMark && /*#__PURE__*/_jsxDEV(PunctuationCharacter, {\n              type: selectedMark,\n              onClick: () => {},\n              isCorrect: isCorrect,\n              isDraggable: false,\n              onSelect: () => {}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 17\n          }, this), ' ']\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this);\n  };\n  const handleGameOverClose = () => {\n    setGameOverOpen(false);\n    navigate('/');\n  };\n  const handleRestart = () => {\n    setGameOverOpen(false);\n    setScore({\n      correct: 0,\n      incorrect: 0\n    });\n    setCurrentPhraseIndex(0);\n    setTimeLeft(settings.timeLimit);\n    setHasStarted(false);\n    setIsTimerRunning(false);\n  };\n  const formatTime = seconds => {\n    if (seconds === null) return \"0:00\";\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n  const TimerDisplay = () => /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      position: 'absolute',\n      top: 16,\n      right: 16,\n      backgroundColor: !hasStarted || timeLeft === null ? 'primary.main' : timeLeft < 10 ? 'error.main' : 'primary.main',\n      color: 'white',\n      borderRadius: '50%',\n      width: 80,\n      height: 80,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      transition: 'background-color 0.3s ease',\n      boxShadow: 2\n    },\n    children: /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      sx: {\n        fontFamily: 'monospace',\n        fontWeight: 'bold'\n      },\n      children: formatTime(timeLeft)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 306,\n    columnNumber: 5\n  }, this);\n  useEffect(() => {\n    if (settings.timer) {\n      setTimeLeft(settings.timeLimit);\n    }\n  }, [settings.timer, settings.timeLimit]);\n  const TopBar = () => /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      padding: '16px',\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n      onClick: () => navigate('/select'),\n      children: \"DONE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      sx: {\n        fontFamily: '\"Rethink Sans\", Arial, sans-serif',\n        fontWeight: 800\n      },\n      children: [\"CORRECT: \", score.correct, \" INCORRECT: \", score.incorrect]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 341,\n    columnNumber: 5\n  }, this);\n  const handleMarkClick = mark => {\n    if (!currentPhrase) return;\n    setSelectedMark(mark);\n    const isAnswerCorrect = mark === currentPhrase.answer;\n    setIsCorrect(isAnswerCorrect);\n    setScore(prev => ({\n      correct: prev.correct + (isAnswerCorrect ? 1 : 0),\n      incorrect: prev.incorrect + (isAnswerCorrect ? 0 : 1)\n    }));\n    setFeedback({\n      type: isAnswerCorrect ? 'success' : 'error',\n      message: isAnswerCorrect ? 'Correct!' : 'Try again!'\n    });\n\n    // Move to next phrase after a short delay\n    setTimeout(() => {\n      setCurrentPhraseIndex(prev => prev < phrases.length - 1 ? prev + 1 : 0);\n      setSelectedMark(null);\n      setIsCorrect(null);\n      setFeedback(null);\n    }, 1000);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      height: '100vh',\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TopBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        paddingTop: '12px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flex: 1,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        children: renderPhrase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: 'fixed',\n        bottom: 0,\n        left: 0,\n        right: 0,\n        padding: 2,\n        display: 'flex',\n        justifyContent: 'center',\n        gap: 2,\n        backgroundColor: 'background.paper'\n      },\n      children: punctuationMarks.map(mark => /*#__PURE__*/_jsxDEV(PunctuationCharacter, {\n        mark: mark,\n        onClick: () => handleMarkClick(mark),\n        disabled: !currentPhrase\n      }, mark, false, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 7\n    }, this), settings.timer && /*#__PURE__*/_jsxDEV(TimerDisplay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(GameOverDialog, {\n      open: gameOverOpen,\n      onClose: handleGameOverClose,\n      onRestart: handleRestart,\n      score: score\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 389,\n    columnNumber: 5\n  }, this);\n};\n\n// Add this CSS to your global styles or as a styled component\n_s(GameScreen, \"u6NIbqy23Bv+5bgOSOYcwxN/h/k=\", false, function () {\n  return [useNavigate, useGame];\n});\n_c = GameScreen;\nconst styles = `\n  @keyframes pulse {\n    0% {\n      transform: scale(1);\n      opacity: 1;\n    }\n    50% {\n      transform: scale(1.1);\n      opacity: 0.5;\n    }\n    100% {\n      transform: scale(1);\n      opacity: 1;\n    }\n  }\n`;\nexport default GameScreen;\nvar _c;\n$RefreshReg$(_c, \"GameScreen\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","useRef","useNavigate","Box","Typography","PunctuationCharacter","GameOverDialog","Button","CustomButton","useGame","shuffleArray","samplePhrases","jsxDEV","_jsxDEV","punctuationMarks","GameScreen","_s","navigate","punctuationType","settings","currentPhraseIndex","setCurrentPhraseIndex","currentPhrase","setCurrentPhrase","selectedMark","setSelectedMark","isCorrect","setIsCorrect","score","setScore","correct","incorrect","hasStarted","setHasStarted","timeLeft","setTimeLeft","timeLimit","isTimerRunning","setIsTimerRunning","gameOverOpen","setGameOverOpen","shuffledTypes","setShuffledTypes","feedback","setFeedback","timerRef","phrases","Object","values","flat","startTimer","timer","current","setInterval","prev","clearInterval","handleFirstInteraction","getFeedbackMessage","type","message","correctType","answer","handleCharacterSelect","isCorrectMark","setTimeout","goToNextPhrase","nextIndex","length","handleDrop","e","preventDefault","currentTarget","classList","remove","droppedType","dataTransfer","getData","console","log","handleDragOver","style","backgroundColor","handleDragLeave","handleDragStart","setData","id","renderPhrase","words","text","split","width","textAlign","willChange","transform","backfaceVisibility","children","fontFamily","fontWeight","fontSize","window","innerWidth","lineHeight","display","maxWidth","margin","WebkitFontSmoothing","WebkitTextSizeAdjust","color","map","word","index","Fragment","fileName","_jsxFileName","lineNumber","columnNumber","position","height","border","borderRadius","verticalAlign","justifyContent","alignItems","transition","onDragOver","onDragLeave","onDrop","onClick","isDraggable","onSelect","handleGameOverClose","handleRestart","formatTime","seconds","minutes","Math","floor","remainingSeconds","toString","padStart","TimerDisplay","sx","top","right","boxShadow","variant","TopBar","padding","handleMarkClick","mark","isAnswerCorrect","flexDirection","flex","paddingTop","bottom","left","gap","disabled","open","onClose","onRestart","_c","styles","$RefreshReg$"],"sources":["/Users/benediktlehnert/Documents/GitHub/punx-app-new/src/screens/GameScreen.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { \n  Box, \n  Typography, \n  Dialog, \n  DialogContent, \n  DialogActions, \n  Button \n} from '@mui/material';\nimport PunctuationCharacter, { PunctuationType } from '../components/PunctuationCharacter';\nimport GameOverDialog from '../components/GameOverDialog';\nimport { Button as CustomButton } from '../components/Button';\nimport { useSettings } from '../context/SettingsContext';\nimport { useGame } from '../context/GameContext';\nimport { shuffleArray } from '../utils';\nimport { samplePhrases, Phrase } from '../data/phrases';\n\nconst punctuationMarks: PunctuationType[] = ['period', 'question', 'exclamation', 'comma'];\n\ntype FeedbackMessage = {\n  type: 'success' | 'error';\n  message: string;\n};\n\nconst GameScreen = () => {\n  const navigate = useNavigate();\n  const { punctuationType, settings } = useGame();\n  const [currentPhraseIndex, setCurrentPhraseIndex] = useState(0);\n  const [currentPhrase, setCurrentPhrase] = useState<Phrase | null>(null);\n  const [selectedMark, setSelectedMark] = useState<PunctuationType | null>(null);\n  const [isCorrect, setIsCorrect] = useState<boolean | null>(null);\n  const [score, setScore] = useState({ correct: 0, incorrect: 0 });\n  const [hasStarted, setHasStarted] = useState(false);\n  const [timeLeft, setTimeLeft] = useState<number>(() => settings.timeLimit);\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [gameOverOpen, setGameOverOpen] = useState(false);\n  const [shuffledTypes, setShuffledTypes] = useState<PunctuationType[]>(['period', 'exclamation', 'question', 'comma']);\n  const [feedback, setFeedback] = useState<FeedbackMessage | null>(null);\n  const timerRef = useRef<NodeJS.Timeout | null>(null);\n\n  const phrases = useMemo(() => shuffleArray(Object.values(samplePhrases).flat()), []);\n\n  useEffect(() => {\n    setCurrentPhrase(phrases[currentPhraseIndex]);\n  }, [currentPhraseIndex, phrases]);\n\n  const startTimer = useCallback(() => {\n    if (!hasStarted && settings.timer) {\n      setHasStarted(true);\n      setTimeLeft(settings.timeLimit);\n    }\n  }, [hasStarted, settings.timer, settings.timeLimit]);\n\n  useEffect(() => {\n    if (hasStarted && settings.timer && timeLeft !== null && timeLeft > 0) {\n      timerRef.current = setInterval(() => {\n        setTimeLeft((prev) => {\n          if (prev === null || prev <= 1) {\n            if (timerRef.current) {\n              clearInterval(timerRef.current);\n            }\n            setGameOverOpen(true);\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n\n      return () => {\n        if (timerRef.current) {\n          clearInterval(timerRef.current);\n        }\n      };\n    }\n  }, [hasStarted, settings.timer, timeLeft]);\n\n  useEffect(() => {\n    return () => {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    };\n  }, []);\n\n  const handleFirstInteraction = () => {\n    startTimer();\n  };\n\n  const getFeedbackMessage = (type: string, isCorrect: boolean): FeedbackMessage => {\n    if (isCorrect) {\n      return {\n        type: 'success',\n        message: \"Great job! That's exactly right!\"\n      };\n    }\n\n    const correctType = currentPhrase?.answer;\n    switch (correctType) {\n      case 'period':\n        return {\n          type: 'error',\n          message: \"This sentence needs a period to show it's complete.\"\n        };\n      case 'question':\n        return {\n          type: 'error',\n          message: \"This is a question, so it needs a question mark.\"\n        };\n      case 'exclamation':\n        return {\n          type: 'error',\n          message: \"This sentence shows strong feeling or emotion, so it needs an exclamation mark!\"\n        };\n      case 'comma':\n        return {\n          type: 'error',\n          message: \"A comma is needed here to separate parts of the sentence.\"\n        };\n      default:\n        return {\n          type: 'error',\n          message: \"That's not quite right. Try again!\"\n        };\n    }\n  };\n\n  const handleCharacterSelect = (type: PunctuationType) => {\n    if (!currentPhrase) return;\n\n    // Start timer on first interaction if not started\n    if (!hasStarted) {\n      startTimer();\n    }\n\n    setSelectedMark(type);\n    const isCorrectMark = type === currentPhrase.answer;\n    setIsCorrect(isCorrectMark);\n\n    if (isCorrectMark) {\n      setScore(prev => ({\n        ...prev,\n        correct: prev.correct + 1\n      }));\n    } else {\n      setScore(prev => ({\n        ...prev,\n        incorrect: prev.incorrect + 1\n      }));\n    }\n\n    // Wait for animation then move to next phrase\n    setTimeout(() => {\n      setSelectedMark(null);\n      setIsCorrect(null);\n      goToNextPhrase();\n    }, 1000);\n  };\n\n  const goToNextPhrase = () => {\n    const nextIndex = (currentPhraseIndex + 1) % phrases.length;\n    setCurrentPhraseIndex(nextIndex);\n  };\n\n  const handleDrop = (e: React.DragEvent<HTMLElement>) => {\n    e.preventDefault();\n    e.currentTarget.classList.remove('dragover');\n    const droppedType = e.dataTransfer.getData('application/punctuation') as PunctuationType;\n    \n    console.log('Dropped type:', droppedType); // Add this for debugging\n    \n    if (droppedType) {\n      handleCharacterSelect(droppedType);\n    }\n  };\n\n  const handleDragOver = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault(); // This is crucial for enabling drop\n    e.currentTarget.style.backgroundColor = 'rgba(0, 0, 0, 0.1)';\n  };\n\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    e.currentTarget.style.backgroundColor = 'transparent';\n  };\n\n  const handleDragStart = (e: React.DragEvent) => {\n    startTimer();\n    e.dataTransfer.setData('text/plain', e.currentTarget.id);\n  };\n\n  const renderPhrase = () => {\n    if (!currentPhrase) return null;\n\n    const words = currentPhrase.text.split(' ');\n    \n    return (\n      <div \n        style={{ \n          width: '100%',\n          textAlign: 'center',\n          willChange: 'transform',\n          transform: 'translateZ(0)',\n          backfaceVisibility: 'hidden'\n        }}\n      >\n        <div \n          style={{\n            fontFamily: '\"Bookman Old Style Regular\", \"Bookman\", \"URW Bookman L\", serif',\n            fontWeight: 'normal',\n            fontSize: window.innerWidth < 600 ? '80px' : \n                     window.innerWidth < 960 ? '100px' : \n                     window.innerWidth < 1280 ? '120px' : '140px',\n            lineHeight: '1.1',\n            display: 'inline-block',\n            textAlign: 'left',\n            maxWidth: '90%',\n            margin: '0 auto',\n            WebkitFontSmoothing: 'antialiased',\n            WebkitTextSizeAdjust: '100%',\n            color: '#000000'\n          }}\n        >\n          {words.map((word, index) => (\n            <React.Fragment key={index}>\n              <span style={{ \n                display: 'inline-block',\n                fontFamily: '\"Bookman Old Style Regular\", \"Bookman\", \"URW Bookman L\", serif'\n              }}>\n                {word}\n              </span>\n              {(currentPhrase.position === index || \n                (index === words.length - 1 && currentPhrase.position === 'end')) && (\n                <span\n                  data-dropzone=\"true\"\n                  style={{\n                    display: 'inline-flex',\n                    width: '140px',\n                    height: '140px',\n                    border: '6px dashed #ccc',\n                    borderRadius: '20px',\n                    margin: '0 16px',\n                    verticalAlign: 'top',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)'\n                  }}\n                  onDragOver={(e) => {\n                    e.preventDefault();\n                    e.currentTarget.style.border = '6px dashed #666';\n                    e.currentTarget.style.transform = 'scale(1.05)';\n                  }}\n                  onDragLeave={(e) => {\n                    e.preventDefault();\n                    e.currentTarget.style.border = '6px dashed #ccc';\n                    e.currentTarget.style.transform = 'scale(1)';\n                  }}\n                  onDrop={(e) => {\n                    e.preventDefault();\n                    e.currentTarget.style.border = '6px dashed #ccc';\n                    e.currentTarget.style.transform = 'scale(1)';\n                    handleDrop(e);\n                  }}\n                >\n                  {selectedMark && (\n                    <PunctuationCharacter\n                      type={selectedMark}\n                      onClick={() => {}}\n                      isCorrect={isCorrect}\n                      isDraggable={false}\n                      onSelect={() => {}}\n                    />\n                  )}\n                </span>\n              )}\n              {' '}\n            </React.Fragment>\n          ))}\n        </div>\n      </div>\n    );\n  };\n\n  const handleGameOverClose = () => {\n    setGameOverOpen(false);\n    navigate('/');\n  };\n\n  const handleRestart = () => {\n    setGameOverOpen(false);\n    setScore({ correct: 0, incorrect: 0 });\n    setCurrentPhraseIndex(0);\n    setTimeLeft(settings.timeLimit);\n    setHasStarted(false);\n    setIsTimerRunning(false);\n  };\n\n  const formatTime = (seconds: number | null): string => {\n    if (seconds === null) return \"0:00\";\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n\n  const TimerDisplay = () => (\n    <Box sx={{ \n      position: 'absolute',\n      top: 16,\n      right: 16,\n      backgroundColor: (!hasStarted || timeLeft === null) ? 'primary.main' :\n                      timeLeft < 10 ? 'error.main' : 'primary.main',\n      color: 'white',\n      borderRadius: '50%',\n      width: 80,\n      height: 80,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      transition: 'background-color 0.3s ease',\n      boxShadow: 2\n    }}>\n      <Typography \n        variant=\"h6\" \n        sx={{ \n          fontFamily: 'monospace',\n          fontWeight: 'bold'\n        }}\n      >\n        {formatTime(timeLeft)}\n      </Typography>\n    </Box>\n  );\n\n  useEffect(() => {\n    if (settings.timer) {\n      setTimeLeft(settings.timeLimit);\n    }\n  }, [settings.timer, settings.timeLimit]);\n\n  const TopBar = () => (\n    <Box sx={{ \n      display: 'flex', \n      justifyContent: 'space-between', \n      alignItems: 'center',\n      padding: '16px',\n      width: '100%'\n    }}>\n      <CustomButton onClick={() => navigate('/select')}>\n        DONE\n      </CustomButton>\n      <Typography sx={{ \n        fontFamily: '\"Rethink Sans\", Arial, sans-serif',\n        fontWeight: 800\n      }}>\n        CORRECT: {score.correct} INCORRECT: {score.incorrect}\n      </Typography>\n    </Box>\n  );\n\n  const handleMarkClick = (mark: PunctuationType) => {\n    if (!currentPhrase) return;\n    \n    setSelectedMark(mark);\n    const isAnswerCorrect = mark === currentPhrase.answer;\n    setIsCorrect(isAnswerCorrect);\n    \n    setScore(prev => ({\n      correct: prev.correct + (isAnswerCorrect ? 1 : 0),\n      incorrect: prev.incorrect + (isAnswerCorrect ? 0 : 1)\n    }));\n\n    setFeedback({\n      type: isAnswerCorrect ? 'success' : 'error',\n      message: isAnswerCorrect ? 'Correct!' : 'Try again!'\n    });\n\n    // Move to next phrase after a short delay\n    setTimeout(() => {\n      setCurrentPhraseIndex(prev => \n        prev < phrases.length - 1 ? prev + 1 : 0\n      );\n      setSelectedMark(null);\n      setIsCorrect(null);\n      setFeedback(null);\n    }, 1000);\n  };\n\n  return (\n    <Box sx={{ \n      height: '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n    }}>\n      <TopBar />\n      \n      <Box sx={{ \n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        paddingTop: '12px',\n      }}>\n        <Box sx={{ \n          flex: 1,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}>\n          {renderPhrase()}\n        </Box>\n      </Box>\n\n      <Box sx={{ \n        position: 'fixed',\n        bottom: 0,\n        left: 0,\n        right: 0,\n        padding: 2,\n        display: 'flex',\n        justifyContent: 'center',\n        gap: 2,\n        backgroundColor: 'background.paper',\n      }}>\n        {punctuationMarks.map((mark) => (\n          <PunctuationCharacter\n            key={mark}\n            mark={mark}\n            onClick={() => handleMarkClick(mark)}\n            disabled={!currentPhrase}\n          />\n        ))}\n      </Box>\n\n      {settings.timer && <TimerDisplay />}\n      <GameOverDialog \n        open={gameOverOpen} \n        onClose={handleGameOverClose}\n        onRestart={handleRestart}\n        score={score}\n      />\n    </Box>\n  );\n};\n\n// Add this CSS to your global styles or as a styled component\nconst styles = `\n  @keyframes pulse {\n    0% {\n      transform: scale(1);\n      opacity: 1;\n    }\n    50% {\n      transform: scale(1.1);\n      opacity: 0.5;\n    }\n    100% {\n      transform: scale(1);\n      opacity: 1;\n    }\n  }\n`;\n\nexport default GameScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}