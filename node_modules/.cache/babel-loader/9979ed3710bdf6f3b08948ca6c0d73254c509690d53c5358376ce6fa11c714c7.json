{"ast":null,"code":"var _jsxFileName = \"/Users/benediktlehnert/Documents/GitHub/punx-app-new/src/context/SettingsContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultSettings = {\n  sound: true,\n  difficulty: 1,\n  timer: true,\n  timeLimit: 60\n};\nexport const SettingsContext = /*#__PURE__*/createContext(undefined);\nexport const SettingsProvider = ({\n  children\n}) => {\n  _s();\n  const [settings, setSettings] = useState(() => {\n    const savedSettings = localStorage.getItem('gameSettings');\n    return savedSettings ? JSON.parse(savedSettings) : defaultSettings;\n  });\n  const updateSettings = newSettings => {\n    setSettings(prev => {\n      const updated = {\n        ...prev,\n        ...newSettings\n      };\n      localStorage.setItem('gameSettings', JSON.stringify(updated));\n      return updated;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(SettingsContext.Provider, {\n    value: {\n      settings,\n      updateSettings\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(SettingsProvider, \"XhNdwBmpSZtXuO300XqJpsy0C58=\");\n_c = SettingsProvider;\nexport const useSettings = () => {\n  _s2();\n  const context = useContext(SettingsContext);\n  if (!context) {\n    throw new Error('useSettings must be used within a SettingsProvider');\n  }\n  return [context.settings, context.updateSettings];\n};\n_s2(useSettings, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default SettingsProvider;\nvar _c;\n$RefreshReg$(_c, \"SettingsProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","defaultSettings","sound","difficulty","timer","timeLimit","SettingsContext","undefined","SettingsProvider","children","_s","settings","setSettings","savedSettings","localStorage","getItem","JSON","parse","updateSettings","newSettings","prev","updated","setItem","stringify","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useSettings","_s2","context","Error","$RefreshReg$"],"sources":["/Users/benediktlehnert/Documents/GitHub/punx-app-new/src/context/SettingsContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\ninterface Settings {\n  sound: boolean;\n  difficulty: number;\n  timer: boolean;\n  timeLimit: number;\n}\n\ninterface SettingsContextType {\n  settings: Settings;\n  updateSettings: (newSettings: Partial<Settings>) => void;\n}\n\nconst defaultSettings: Settings = {\n  sound: true,\n  difficulty: 1,\n  timer: true,\n  timeLimit: 60,\n};\n\nexport const SettingsContext = createContext<SettingsContextType | undefined>(undefined);\n\nexport const SettingsProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [settings, setSettings] = useState<Settings>(() => {\n    const savedSettings = localStorage.getItem('gameSettings');\n    return savedSettings ? JSON.parse(savedSettings) : defaultSettings;\n  });\n\n  const updateSettings = (newSettings: Partial<Settings>) => {\n    setSettings(prev => {\n      const updated = { ...prev, ...newSettings };\n      localStorage.setItem('gameSettings', JSON.stringify(updated));\n      return updated;\n    });\n  };\n\n  return (\n    <SettingsContext.Provider value={{ settings, updateSettings }}>\n      {children}\n    </SettingsContext.Provider>\n  );\n};\n\nexport const useSettings = (): [Settings, (newSettings: Partial<Settings>) => void] => {\n  const context = useContext(SettingsContext);\n  if (!context) {\n    throw new Error('useSettings must be used within a SettingsProvider');\n  }\n  return [context.settings, context.updateSettings];\n};\n\nexport default SettingsProvider; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAcnE,MAAMC,eAAyB,GAAG;EAChCC,KAAK,EAAE,IAAI;EACXC,UAAU,EAAE,CAAC;EACbC,KAAK,EAAE,IAAI;EACXC,SAAS,EAAE;AACb,CAAC;AAED,OAAO,MAAMC,eAAe,gBAAGV,aAAa,CAAkCW,SAAS,CAAC;AAExF,OAAO,MAAMC,gBAAyD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACzF,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAW,MAAM;IACvD,MAAMe,aAAa,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IAC1D,OAAOF,aAAa,GAAGG,IAAI,CAACC,KAAK,CAACJ,aAAa,CAAC,GAAGZ,eAAe;EACpE,CAAC,CAAC;EAEF,MAAMiB,cAAc,GAAIC,WAA8B,IAAK;IACzDP,WAAW,CAACQ,IAAI,IAAI;MAClB,MAAMC,OAAO,GAAG;QAAE,GAAGD,IAAI;QAAE,GAAGD;MAAY,CAAC;MAC3CL,YAAY,CAACQ,OAAO,CAAC,cAAc,EAAEN,IAAI,CAACO,SAAS,CAACF,OAAO,CAAC,CAAC;MAC7D,OAAOA,OAAO;IAChB,CAAC,CAAC;EACJ,CAAC;EAED,oBACErB,OAAA,CAACM,eAAe,CAACkB,QAAQ;IAACC,KAAK,EAAE;MAAEd,QAAQ;MAAEO;IAAe,CAAE;IAAAT,QAAA,EAC3DA;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;AAACnB,EAAA,CAnBWF,gBAAyD;AAAAsB,EAAA,GAAzDtB,gBAAyD;AAqBtE,OAAO,MAAMuB,WAAW,GAAGA,CAAA,KAA4D;EAAAC,GAAA;EACrF,MAAMC,OAAO,GAAGpC,UAAU,CAACS,eAAe,CAAC;EAC3C,IAAI,CAAC2B,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,oDAAoD,CAAC;EACvE;EACA,OAAO,CAACD,OAAO,CAACtB,QAAQ,EAAEsB,OAAO,CAACf,cAAc,CAAC;AACnD,CAAC;AAACc,GAAA,CANWD,WAAW;AAQxB,eAAevB,gBAAgB;AAAC,IAAAsB,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}