{"ast":null,"code":"var _jsxFileName = \"/Users/benediktlehnert/Documents/GitHub/punx-app-new/src/screens/GameScreen.tsx\",\n  _s2 = $RefreshSig$();\nimport * as React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useGame } from '../context/GameContext';\nimport PunctuationCharacter from '../components/PunctuationCharacter';\nimport { shuffleArray } from '../utils/shuffle';\nimport { Button as CustomButton } from '../components/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst samplePhrases = {\n  period: [{\n    text: \"I love to play in the park\",\n    answer: \"period\",\n    position: 'end'\n  }, {\n    text: \"The sun is shining today\",\n    answer: \"period\",\n    position: 'end'\n  }],\n  exclamation: [{\n    text: \"What a wonderful day\",\n    answer: \"exclamation\",\n    position: 'end'\n  }, {\n    text: \"I canâ€™t believe it\",\n    answer: \"exclamation\",\n    position: 'end'\n  }],\n  question: [{\n    text: \"How are you today\",\n    answer: \"question\",\n    position: 'end'\n  }, {\n    text: \"Where did you go\",\n    answer: \"question\",\n    position: 'end'\n  }],\n  comma: [{\n    text: \"After the movie we went home\",\n    answer: \"comma\",\n    position: 2\n  },\n  // After index 2 (after \"movie\")\n  {\n    text: \"Yes I would love to\",\n    answer: \"comma\",\n    position: 0\n  } // After index 1 (after \"Yes\")\n  ]\n};\nconst GameScreen = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const navigate = useNavigate();\n  const {\n    settings\n  } = useGame();\n  const [currentPhraseIndex, setCurrentPhraseIndex] = React.useState(0);\n  const [currentPhrase, setCurrentPhrase] = React.useState(null);\n  const [selectedMark, setSelectedMark] = React.useState(null);\n  const [isCorrect, setIsCorrect] = React.useState(null);\n  const [score, setScore] = React.useState({\n    correct: 0,\n    incorrect: 0\n  });\n  const [hasStarted, setHasStarted] = React.useState(false);\n  const [timeLeft, setTimeLeft] = React.useState(null);\n  const [gameOverOpen, setGameOverOpen] = React.useState(false);\n  const [activeDropZone, setActiveDropZone] = React.useState(null);\n  const [droppedPosition, setDroppedPosition] = React.useState(null);\n  const phraseRef = React.useRef(null);\n  const phrases = React.useMemo(() => shuffleArray(Object.values(samplePhrases).flat()), []);\n  React.useEffect(() => {\n    setCurrentPhrase(phrases[currentPhraseIndex]);\n  }, [currentPhraseIndex, phrases]);\n  const FEEDBACK_DURATION = 1500;\n  const handleDrop = e => {\n    e.preventDefault();\n    const droppedType = e.dataTransfer.getData('application/punctuation');\n    if (activeDropZone !== null && droppedType) {\n      const isCorrectPosition = (currentPhrase === null || currentPhrase === void 0 ? void 0 : currentPhrase.position) === 'end' && activeDropZone === 'end' || (currentPhrase === null || currentPhrase === void 0 ? void 0 : currentPhrase.position) === activeDropZone;\n      const isCorrectType = droppedType === (currentPhrase === null || currentPhrase === void 0 ? void 0 : currentPhrase.answer);\n      const isCorrect = isCorrectPosition && isCorrectType;\n      setDroppedPosition(activeDropZone);\n      setSelectedMark(droppedType);\n      setIsCorrect(isCorrect);\n      if (isCorrect) {\n        setScore(prev => ({\n          ...prev,\n          correct: prev.correct + 1\n        }));\n      } else {\n        setScore(prev => ({\n          ...prev,\n          incorrect: prev.incorrect + 1\n        }));\n      }\n      setTimeout(() => {\n        setDroppedPosition(null);\n        setSelectedMark(null);\n        setIsCorrect(null);\n        setActiveDropZone(null);\n        goToNextPhrase();\n      }, FEEDBACK_DURATION);\n    }\n  };\n  const calculateDropZone = (dragX, dragY) => {\n    if (!phraseRef.current) return null;\n    const words = phraseRef.current.getElementsByClassName('word');\n    const phraseRect = phraseRef.current.getBoundingClientRect();\n    if (dragY < phraseRect.top - 50 || dragY > phraseRect.bottom + 50) {\n      return null;\n    }\n    const lastWord = words[words.length - 1];\n    const lastWordRect = lastWord.getBoundingClientRect();\n    if (dragX > lastWordRect.right - 40) {\n      return 'end';\n    }\n    let closestGap = null;\n    let minDistance = Infinity;\n    for (let i = 0; i < words.length - 1; i++) {\n      const word = words[i];\n      const nextWord = words[i + 1];\n      const wordRect = word.getBoundingClientRect();\n      const nextWordRect = nextWord.getBoundingClientRect();\n      if (Math.abs(wordRect.top - nextWordRect.top) < 10) {\n        const gapCenter = (wordRect.right + nextWordRect.left) / 2;\n        const distance = Math.abs(dragX - gapCenter);\n        if (distance < minDistance && distance < 60) {\n          minDistance = distance;\n          closestGap = i;\n        }\n      }\n    }\n    return closestGap;\n  };\n  const handleDrag = e => {\n    const {\n      clientX,\n      clientY\n    } = e;\n    const newDropZone = calculateDropZone(clientX, clientY);\n    if (newDropZone !== activeDropZone) {\n      setActiveDropZone(newDropZone);\n    }\n  };\n  const renderPhrase = () => {\n    _s();\n    if (!currentPhrase) return null;\n    const words = currentPhrase.text.split(' ');\n    const DROP_ZONE_WIDTH = 156; // 140px + 16px margin\n\n    // Function to check if we need a line break\n    const needsLineBreak = () => {\n      if (!phraseRef.current) return false;\n      const containerWidth = phraseRef.current.offsetWidth - 160; // Account for padding\n      const tempDiv = document.createElement('div');\n      tempDiv.style.visibility = 'hidden';\n      tempDiv.style.position = 'absolute';\n      tempDiv.style.fontSize = window.innerWidth < 1024 ? '80px' : '100px';\n      tempDiv.style.fontFamily = '\"Bookman Old Style Regular\", \"Bookman\", \"URW Bookman L\", serif';\n      tempDiv.style.whiteSpace = 'nowrap';\n      document.body.appendChild(tempDiv);\n\n      // Measure width of all words except last\n      let currentLineWidth = 0;\n      for (let i = 0; i < words.length - 1; i++) {\n        tempDiv.textContent = words[i];\n        currentLineWidth += tempDiv.offsetWidth + 16; // Add word spacing\n      }\n\n      // Measure last word plus drop zone\n      tempDiv.textContent = words[words.length - 1];\n      const lastWordWidth = tempDiv.offsetWidth;\n      const needsBreak = currentLineWidth + lastWordWidth + DROP_ZONE_WIDTH > containerWidth;\n      document.body.removeChild(tempDiv);\n      return needsBreak;\n    };\n\n    // State to track if we need a line break\n    const [forceLineBreak, setForceLineBreak] = React.useState(false);\n\n    // Check for line break need on mount and window resize\n    React.useEffect(() => {\n      const checkLineBreak = () => {\n        setForceLineBreak(needsLineBreak());\n      };\n      checkLineBreak();\n      window.addEventListener('resize', checkLineBreak);\n      return () => window.removeEventListener('resize', checkLineBreak);\n    }, [currentPhrase]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: phraseRef,\n      style: {\n        width: '100%',\n        height: '100%',\n        display: 'flex',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        padding: '40px 80px',\n        minHeight: '300px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexWrap: 'wrap',\n          gap: '16px',\n          alignItems: 'center',\n          maxWidth: '100%'\n        },\n        children: [words.slice(0, -1).map((word, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'inline-flex',\n            alignItems: 'center',\n            position: 'relative'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"word\",\n            style: {\n              fontFamily: '\"Bookman Old Style Regular\", \"Bookman\", \"URW Bookman L\", serif',\n              fontSize: window.innerWidth < 1024 ? '80px' : '100px',\n              lineHeight: '1.1',\n              whiteSpace: 'nowrap',\n              userSelect: 'none'\n            },\n            children: word\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this), (activeDropZone === index || droppedPosition === index) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropzone\",\n            \"data-dropzone\": \"true\",\n            onDragOver: e => {\n              e.preventDefault();\n              e.currentTarget.style.border = '6px dashed #666';\n            },\n            onDragLeave: e => {\n              e.preventDefault();\n              e.currentTarget.style.border = '6px dashed #ccc';\n            },\n            onDrop: handleDrop,\n            style: {\n              width: '140px',\n              height: '140px',\n              border: '6px dashed #ccc',\n              borderRadius: '20px',\n              display: 'inline-flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              marginLeft: '16px'\n            },\n            children: selectedMark && droppedPosition === index && /*#__PURE__*/_jsxDEV(PunctuationCharacter, {\n              type: selectedMark,\n              isCorrect: isCorrect,\n              onClick: () => {}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'inline-flex',\n            alignItems: 'center',\n            position: 'relative',\n            width: forceLineBreak ? '100%' : 'auto'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"word\",\n            style: {\n              fontFamily: '\"Bookman Old Style Regular\", \"Bookman\", \"URW Bookman L\", serif',\n              fontSize: window.innerWidth < 1024 ? '80px' : '100px',\n              lineHeight: '1.1',\n              whiteSpace: 'nowrap',\n              userSelect: 'none'\n            },\n            children: words[words.length - 1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this), (activeDropZone === 'end' || droppedPosition === 'end') && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropzone\",\n            \"data-dropzone\": \"true\",\n            onDragOver: e => {\n              e.preventDefault();\n              e.currentTarget.style.border = '6px dashed #666';\n            },\n            onDragLeave: e => {\n              e.preventDefault();\n              e.currentTarget.style.border = '6px dashed #ccc';\n            },\n            onDrop: handleDrop,\n            style: {\n              width: '140px',\n              height: '140px',\n              border: '6px dashed #ccc',\n              borderRadius: '20px',\n              display: 'inline-flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              marginLeft: '16px'\n            },\n            children: selectedMark && droppedPosition === 'end' && /*#__PURE__*/_jsxDEV(PunctuationCharacter, {\n              type: selectedMark,\n              isCorrect: isCorrect,\n              onClick: () => {}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this);\n  };\n  _s(renderPhrase, \"Dn8rLMqLfPMKuEyZJzmUGFEzG6g=\");\n  const goToNextPhrase = () => {\n    const nextIndex = (currentPhraseIndex + 1) % phrases.length;\n    setCurrentPhraseIndex(nextIndex);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '100vh',\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        padding: '16px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n        onClick: () => navigate('/select'),\n        children: \"DONE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontFamily: '\"Rethink Sans\", Arial, sans-serif',\n          fontWeight: 800\n        },\n        children: [\"CORRECT: \", score.correct, \" INCORRECT: \", score.incorrect]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 7\n    }, this), renderPhrase(), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        bottom: 0,\n        left: 0,\n        right: 0,\n        display: 'flex',\n        justifyContent: 'center',\n        gap: '32px',\n        padding: '24px',\n        minHeight: '120px'\n      },\n      children: ['period', 'exclamation', 'question', 'comma'].map(type => /*#__PURE__*/_jsxDEV(PunctuationCharacter, {\n        type: type,\n        onClick: () => {},\n        isCorrect: undefined,\n        isDraggable: true,\n        onDrag: handleDrag,\n        onDragEnd: () => setActiveDropZone(null)\n      }, type, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 335,\n    columnNumber: 5\n  }, this);\n};\n_s2(GameScreen, \"EmbTmNK6NSn/RtVGSy24BIhG43s=\", false, function () {\n  return [useNavigate, useGame];\n});\n_c = GameScreen;\nexport default GameScreen;\nvar _c;\n$RefreshReg$(_c, \"GameScreen\");","map":{"version":3,"names":["React","useNavigate","useGame","PunctuationCharacter","shuffleArray","Button","CustomButton","jsxDEV","_jsxDEV","samplePhrases","period","text","answer","position","exclamation","question","comma","GameScreen","_s2","_s","$RefreshSig$","navigate","settings","currentPhraseIndex","setCurrentPhraseIndex","useState","currentPhrase","setCurrentPhrase","selectedMark","setSelectedMark","isCorrect","setIsCorrect","score","setScore","correct","incorrect","hasStarted","setHasStarted","timeLeft","setTimeLeft","gameOverOpen","setGameOverOpen","activeDropZone","setActiveDropZone","droppedPosition","setDroppedPosition","phraseRef","useRef","phrases","useMemo","Object","values","flat","useEffect","FEEDBACK_DURATION","handleDrop","e","preventDefault","droppedType","dataTransfer","getData","isCorrectPosition","isCorrectType","prev","setTimeout","goToNextPhrase","calculateDropZone","dragX","dragY","current","words","getElementsByClassName","phraseRect","getBoundingClientRect","top","bottom","lastWord","length","lastWordRect","right","closestGap","minDistance","Infinity","i","word","nextWord","wordRect","nextWordRect","Math","abs","gapCenter","left","distance","handleDrag","clientX","clientY","newDropZone","renderPhrase","split","DROP_ZONE_WIDTH","needsLineBreak","containerWidth","offsetWidth","tempDiv","document","createElement","style","visibility","fontSize","window","innerWidth","fontFamily","whiteSpace","body","appendChild","currentLineWidth","textContent","lastWordWidth","needsBreak","removeChild","forceLineBreak","setForceLineBreak","checkLineBreak","addEventListener","removeEventListener","ref","width","height","display","justifyContent","alignItems","padding","minHeight","children","flexWrap","gap","maxWidth","slice","map","index","className","lineHeight","userSelect","fileName","_jsxFileName","lineNumber","columnNumber","onDragOver","currentTarget","border","onDragLeave","onDrop","borderRadius","marginLeft","type","onClick","nextIndex","flexDirection","fontWeight","undefined","isDraggable","onDrag","onDragEnd","_c","$RefreshReg$"],"sources":["/Users/benediktlehnert/Documents/GitHub/punx-app-new/src/screens/GameScreen.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useGame } from '../context/GameContext';\nimport PunctuationCharacter from '../components/PunctuationCharacter';\nimport { shuffleArray } from '../utils/shuffle';\nimport { Button as CustomButton } from '../components/Button';\n\ntype Phrase = {\n  text: string;\n  answer: string;\n  position: 'end' | number; // 'end' or index where punctuation should go\n};\n\ntype PhraseCollection = {\n  period: Phrase[];\n  exclamation: Phrase[];\n  question: Phrase[];\n  comma: Phrase[];\n};\n\nconst samplePhrases: PhraseCollection = {\n  period: [\n    { text: \"I love to play in the park\", answer: \"period\", position: 'end' },\n    { text: \"The sun is shining today\", answer: \"period\", position: 'end' },\n  ],\n  exclamation: [\n    { text: \"What a wonderful day\", answer: \"exclamation\", position: 'end' },\n    { text: \"I canâ€™t believe it\", answer: \"exclamation\", position: 'end' },\n  ],\n  question: [\n    { text: \"How are you today\", answer: \"question\", position: 'end' },\n    { text: \"Where did you go\", answer: \"question\", position: 'end' },\n  ],\n  comma: [\n    { text: \"After the movie we went home\", answer: \"comma\", position: 2 }, // After index 2 (after \"movie\")\n    { text: \"Yes I would love to\", answer: \"comma\", position: 0 }, // After index 1 (after \"Yes\")\n  ],\n};\n\ntype PunctuationType = 'period' | 'exclamation' | 'question' | 'comma';\n\nconst GameScreen = () => {\n  const navigate = useNavigate();\n  const { settings } = useGame();\n  const [currentPhraseIndex, setCurrentPhraseIndex] = React.useState(0);\n  const [currentPhrase, setCurrentPhrase] = React.useState<Phrase | null>(null);\n  const [selectedMark, setSelectedMark] = React.useState<PunctuationType | null>(null);\n  const [isCorrect, setIsCorrect] = React.useState<boolean | null>(null);\n  const [score, setScore] = React.useState({ correct: 0, incorrect: 0 });\n  const [hasStarted, setHasStarted] = React.useState(false);\n  const [timeLeft, setTimeLeft] = React.useState<number | null>(null);\n  const [gameOverOpen, setGameOverOpen] = React.useState(false);\n  const [activeDropZone, setActiveDropZone] = React.useState<number | 'end' | null>(null);\n  const [droppedPosition, setDroppedPosition] = React.useState<number | 'end' | null>(null);\n  \n  const phraseRef = React.useRef<HTMLDivElement>(null);\n  const phrases = React.useMemo(() => shuffleArray(Object.values(samplePhrases).flat()), []);\n\n  React.useEffect(() => {\n    setCurrentPhrase(phrases[currentPhraseIndex]);\n  }, [currentPhraseIndex, phrases]);\n\n  const FEEDBACK_DURATION = 1500;\n\n  const handleDrop = (e: React.DragEvent<HTMLElement>) => {\n    e.preventDefault();\n    const droppedType = e.dataTransfer.getData('application/punctuation') as PunctuationType;\n    \n    if (activeDropZone !== null && droppedType) {\n      const isCorrectPosition = \n        (currentPhrase?.position === 'end' && activeDropZone === 'end') ||\n        (currentPhrase?.position === activeDropZone);\n      const isCorrectType = droppedType === currentPhrase?.answer;\n      const isCorrect = isCorrectPosition && isCorrectType;\n\n      setDroppedPosition(activeDropZone);\n      setSelectedMark(droppedType);\n      setIsCorrect(isCorrect);\n\n      if (isCorrect) {\n        setScore(prev => ({ ...prev, correct: prev.correct + 1 }));\n      } else {\n        setScore(prev => ({ ...prev, incorrect: prev.incorrect + 1 }));\n      }\n\n      setTimeout(() => {\n        setDroppedPosition(null);\n        setSelectedMark(null);\n        setIsCorrect(null);\n        setActiveDropZone(null);\n        goToNextPhrase();\n      }, FEEDBACK_DURATION);\n    }\n  };\n\n  const calculateDropZone = (dragX: number, dragY: number) => {\n    if (!phraseRef.current) return null;\n\n    const words = phraseRef.current.getElementsByClassName('word');\n    const phraseRect = phraseRef.current.getBoundingClientRect();\n    \n    if (dragY < phraseRect.top - 50 || dragY > phraseRect.bottom + 50) {\n      return null;\n    }\n\n    const lastWord = words[words.length - 1];\n    const lastWordRect = lastWord.getBoundingClientRect();\n    \n    if (dragX > lastWordRect.right - 40) {\n      return 'end';\n    }\n\n    let closestGap = null;\n    let minDistance = Infinity;\n\n    for (let i = 0; i < words.length - 1; i++) {\n      const word = words[i];\n      const nextWord = words[i + 1];\n      const wordRect = word.getBoundingClientRect();\n      const nextWordRect = nextWord.getBoundingClientRect();\n      \n      if (Math.abs(wordRect.top - nextWordRect.top) < 10) {\n        const gapCenter = (wordRect.right + nextWordRect.left) / 2;\n        const distance = Math.abs(dragX - gapCenter);\n        \n        if (distance < minDistance && distance < 60) {\n          minDistance = distance;\n          closestGap = i;\n        }\n      }\n    }\n\n    return closestGap;\n  };\n\n  const handleDrag = (e: React.DragEvent) => {\n    const { clientX, clientY } = e;\n    const newDropZone = calculateDropZone(clientX, clientY);\n    if (newDropZone !== activeDropZone) {\n      setActiveDropZone(newDropZone);\n    }\n  };\n\n  const renderPhrase = () => {\n    if (!currentPhrase) return null;\n\n    const words = currentPhrase.text.split(' ');\n    const DROP_ZONE_WIDTH = 156; // 140px + 16px margin\n    \n    // Function to check if we need a line break\n    const needsLineBreak = () => {\n      if (!phraseRef.current) return false;\n      \n      const containerWidth = phraseRef.current.offsetWidth - 160; // Account for padding\n      const tempDiv = document.createElement('div');\n      tempDiv.style.visibility = 'hidden';\n      tempDiv.style.position = 'absolute';\n      tempDiv.style.fontSize = window.innerWidth < 1024 ? '80px' : '100px';\n      tempDiv.style.fontFamily = '\"Bookman Old Style Regular\", \"Bookman\", \"URW Bookman L\", serif';\n      tempDiv.style.whiteSpace = 'nowrap';\n      document.body.appendChild(tempDiv);\n\n      // Measure width of all words except last\n      let currentLineWidth = 0;\n      for (let i = 0; i < words.length - 1; i++) {\n        tempDiv.textContent = words[i];\n        currentLineWidth += tempDiv.offsetWidth + 16; // Add word spacing\n      }\n\n      // Measure last word plus drop zone\n      tempDiv.textContent = words[words.length - 1];\n      const lastWordWidth = tempDiv.offsetWidth;\n      const needsBreak = currentLineWidth + lastWordWidth + DROP_ZONE_WIDTH > containerWidth;\n\n      document.body.removeChild(tempDiv);\n      return needsBreak;\n    };\n\n    // State to track if we need a line break\n    const [forceLineBreak, setForceLineBreak] = React.useState(false);\n\n    // Check for line break need on mount and window resize\n    React.useEffect(() => {\n      const checkLineBreak = () => {\n        setForceLineBreak(needsLineBreak());\n      };\n\n      checkLineBreak();\n      window.addEventListener('resize', checkLineBreak);\n      return () => window.removeEventListener('resize', checkLineBreak);\n    }, [currentPhrase]);\n\n    return (\n      <div \n        ref={phraseRef}\n        style={{\n          width: '100%',\n          height: '100%',\n          display: 'flex',\n          justifyContent: 'flex-start',\n          alignItems: 'center',\n          padding: '40px 80px',\n          minHeight: '300px',\n        }}\n      >\n        <div style={{\n          display: 'flex',\n          flexWrap: 'wrap',\n          gap: '16px',\n          alignItems: 'center',\n          maxWidth: '100%',\n        }}>\n          {words.slice(0, -1).map((word, index) => (\n            <div\n              key={index}\n              style={{\n                display: 'inline-flex',\n                alignItems: 'center',\n                position: 'relative',\n              }}\n            >\n              <span \n                className=\"word\"\n                style={{\n                  fontFamily: '\"Bookman Old Style Regular\", \"Bookman\", \"URW Bookman L\", serif',\n                  fontSize: window.innerWidth < 1024 ? '80px' : '100px',\n                  lineHeight: '1.1',\n                  whiteSpace: 'nowrap',\n                  userSelect: 'none',\n                }}\n              >\n                {word}\n              </span>\n              {(activeDropZone === index || droppedPosition === index) && (\n                <div\n                  className=\"dropzone\"\n                  data-dropzone=\"true\"\n                  onDragOver={(e) => {\n                    e.preventDefault();\n                    e.currentTarget.style.border = '6px dashed #666';\n                  }}\n                  onDragLeave={(e) => {\n                    e.preventDefault();\n                    e.currentTarget.style.border = '6px dashed #ccc';\n                  }}\n                  onDrop={handleDrop}\n                  style={{\n                    width: '140px',\n                    height: '140px',\n                    border: '6px dashed #ccc',\n                    borderRadius: '20px',\n                    display: 'inline-flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    marginLeft: '16px',\n                  }}\n                >\n                  {selectedMark && droppedPosition === index && (\n                    <PunctuationCharacter\n                      type={selectedMark}\n                      isCorrect={isCorrect}\n                      onClick={() => {}}\n                    />\n                  )}\n                </div>\n              )}\n            </div>\n          ))}\n          {/* Last word with forced line break if needed */}\n          <div\n            style={{\n              display: 'inline-flex',\n              alignItems: 'center',\n              position: 'relative',\n              width: forceLineBreak ? '100%' : 'auto',\n            }}\n          >\n            <span \n              className=\"word\"\n              style={{\n                fontFamily: '\"Bookman Old Style Regular\", \"Bookman\", \"URW Bookman L\", serif',\n                fontSize: window.innerWidth < 1024 ? '80px' : '100px',\n                lineHeight: '1.1',\n                whiteSpace: 'nowrap',\n                userSelect: 'none',\n              }}\n            >\n              {words[words.length - 1]}\n            </span>\n            {(activeDropZone === 'end' || droppedPosition === 'end') && (\n              <div\n                className=\"dropzone\"\n                data-dropzone=\"true\"\n                onDragOver={(e) => {\n                  e.preventDefault();\n                  e.currentTarget.style.border = '6px dashed #666';\n                }}\n                onDragLeave={(e) => {\n                  e.preventDefault();\n                  e.currentTarget.style.border = '6px dashed #ccc';\n                }}\n                onDrop={handleDrop}\n                style={{\n                  width: '140px',\n                  height: '140px',\n                  border: '6px dashed #ccc',\n                  borderRadius: '20px',\n                  display: 'inline-flex',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                  marginLeft: '16px',\n                }}\n              >\n                {selectedMark && droppedPosition === 'end' && (\n                  <PunctuationCharacter\n                    type={selectedMark}\n                    isCorrect={isCorrect}\n                    onClick={() => {}}\n                  />\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const goToNextPhrase = () => {\n    const nextIndex = (currentPhraseIndex + 1) % phrases.length;\n    setCurrentPhraseIndex(nextIndex);\n  };\n\n  return (\n    <div style={{ height: '100vh', display: 'flex', flexDirection: 'column' }}>\n      <div style={{ \n        display: 'flex', \n        justifyContent: 'space-between', \n        alignItems: 'center',\n        padding: '16px'\n      }}>\n        <CustomButton onClick={() => navigate('/select')}>\n          DONE\n        </CustomButton>\n        <div style={{ \n          fontFamily: '\"Rethink Sans\", Arial, sans-serif',\n          fontWeight: 800\n        }}>\n          CORRECT: {score.correct} INCORRECT: {score.incorrect}\n        </div>\n      </div>\n\n      {renderPhrase()}\n\n      <div style={{\n        position: 'fixed',\n        bottom: 0,\n        left: 0,\n        right: 0,\n        display: 'flex',\n        justifyContent: 'center',\n        gap: '32px',\n        padding: '24px',\n        minHeight: '120px'\n      }}>\n        {['period', 'exclamation', 'question', 'comma'].map((type) => (\n          <PunctuationCharacter\n            key={type}\n            type={type as PunctuationType}\n            onClick={() => {}}\n            isCorrect={undefined}\n            isDraggable={true}\n            onDrag={handleDrag}\n            onDragEnd={() => setActiveDropZone(null)}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default GameScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}