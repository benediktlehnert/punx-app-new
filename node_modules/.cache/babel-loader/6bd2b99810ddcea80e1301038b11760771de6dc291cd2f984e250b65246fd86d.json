{"ast":null,"code":"import React,{createContext,useContext,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const GameContext=/*#__PURE__*/createContext(undefined);export const GameProvider=_ref=>{let{children}=_ref;const[mode,setMode]=useState('free');const[punctuationType,setPunctuationType]=useState('period');const[language,setLanguage]=useState('en');const[difficulty,setDifficulty]=useState('smart');return/*#__PURE__*/_jsx(GameContext.Provider,{value:{mode,setMode,punctuationType,setPunctuationType,language,setLanguage,difficulty,setDifficulty},children:children});};export const useGame=()=>{const context=useContext(GameContext);if(!context){throw new Error('useGame must be used within a GameProvider');}return context;};","map":{"version":3,"names":["React","createContext","useContext","useState","jsx","_jsx","GameContext","undefined","GameProvider","_ref","children","mode","setMode","punctuationType","setPunctuationType","language","setLanguage","difficulty","setDifficulty","Provider","value","useGame","context","Error"],"sources":["/Users/benediktlehnert/Documents/GitHub/punx-app-new/src/context/GameContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\ntype GameMode = 'free' | 'timed';\ntype PunctuationType = 'period' | 'exclamation' | 'question' | 'comma' | 'shuffle';\ntype Difficulty = 'smart' | 'smarter';\n\ninterface GameContextType {\n  mode: GameMode;\n  setMode: (mode: GameMode) => void;\n  punctuationType: PunctuationType;\n  setPunctuationType: (type: PunctuationType) => void;\n  language: string;\n  setLanguage: (lang: string) => void;\n  difficulty: Difficulty;\n  setDifficulty: (diff: Difficulty) => void;\n}\n\nconst GameContext = createContext<GameContextType | undefined>(undefined);\n\nexport const GameProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [mode, setMode] = useState<GameMode>('free');\n  const [punctuationType, setPunctuationType] = useState<PunctuationType>('period');\n  const [language, setLanguage] = useState('en');\n  const [difficulty, setDifficulty] = useState<Difficulty>('smart');\n\n  return (\n    <GameContext.Provider value={{\n      mode,\n      setMode,\n      punctuationType,\n      setPunctuationType,\n      language,\n      setLanguage,\n      difficulty,\n      setDifficulty,\n    }}>\n      {children}\n    </GameContext.Provider>\n  );\n};\n\nexport const useGame = () => {\n  const context = useContext(GameContext);\n  if (!context) {\n    throw new Error('useGame must be used within a GameProvider');\n  }\n  return context;\n};\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAiBnE,KAAM,CAAAC,WAAW,cAAGL,aAAa,CAA8BM,SAAS,CAAC,CAEzE,MAAO,MAAM,CAAAC,YAAqD,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAChF,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGT,QAAQ,CAAW,MAAM,CAAC,CAClD,KAAM,CAACU,eAAe,CAAEC,kBAAkB,CAAC,CAAGX,QAAQ,CAAkB,QAAQ,CAAC,CACjF,KAAM,CAACY,QAAQ,CAAEC,WAAW,CAAC,CAAGb,QAAQ,CAAC,IAAI,CAAC,CAC9C,KAAM,CAACc,UAAU,CAAEC,aAAa,CAAC,CAAGf,QAAQ,CAAa,OAAO,CAAC,CAEjE,mBACEE,IAAA,CAACC,WAAW,CAACa,QAAQ,EAACC,KAAK,CAAE,CAC3BT,IAAI,CACJC,OAAO,CACPC,eAAe,CACfC,kBAAkB,CAClBC,QAAQ,CACRC,WAAW,CACXC,UAAU,CACVC,aACF,CAAE,CAAAR,QAAA,CACCA,QAAQ,CACW,CAAC,CAE3B,CAAC,CAED,MAAO,MAAM,CAAAW,OAAO,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAAC,OAAO,CAAGpB,UAAU,CAACI,WAAW,CAAC,CACvC,GAAI,CAACgB,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,4CAA4C,CAAC,CAC/D,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}