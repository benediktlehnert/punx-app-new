{"ast":null,"code":"var _jsxFileName = \"/Users/benediktlehnert/Documents/GitHub/punx-app-new/src/screens/CharacterSelectScreen.tsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { Box, Grid, Typography } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { useGame } from '../context/GameContext';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport SettingsModal from '../components/SettingsModal';\nimport { Button } from '../components/Button';\nimport { IconButton } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst characters = [{\n  id: 'period',\n  name: 'Peri',\n  type: 'period'\n}, {\n  id: 'exclamation',\n  name: 'Ex',\n  type: 'exclamation'\n}, {\n  id: 'question',\n  name: 'Quest',\n  type: 'question'\n}, {\n  id: 'comma',\n  name: 'Curly',\n  type: 'comma'\n}, {\n  id: 'shuffle',\n  name: 'Shuffle',\n  type: 'shuffle'\n}];\nconst CharacterSelectScreen = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    setPunctuationType,\n    settings,\n    setSettings\n  } = useGame();\n  const [settingsOpen, setSettingsOpen] = React.useState(false);\n  const handleSettingsOpen = () => setSettingsOpen(true);\n  const handleSettingsClose = () => setSettingsOpen(false);\n  const handleSettingsChange = newSettings => {\n    setSettings(newSettings);\n  };\n  const handleCharacterSelect = type => {\n    setPunctuationType(type);\n    navigate('/game');\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 4,\n      textAlign: 'center',\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => navigate('/'),\n      sx: {\n        position: 'absolute',\n        top: 16,\n        left: 16\n      },\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleSettingsOpen,\n      sx: {\n        position: 'absolute',\n        top: 16,\n        right: 16,\n        transition: 'all 0.3s ease',\n        '&:hover': {\n          transform: 'scale(1.1)'\n        }\n      },\n      children: \"Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleSettingsOpen,\n      sx: {\n        position: 'absolute',\n        top: 16,\n        right: 16,\n        transition: 'all 0.3s ease',\n        '&:hover': {\n          transform: 'scale(1.1)'\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      sx: {\n        mb: 4\n      },\n      children: \"Choose Your Character\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      justifyContent: \"center\",\n      children: characters.map(character => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          size: \"large\",\n          onClick: () => handleCharacterSelect(character.type),\n          sx: {\n            minWidth: 120\n          },\n          children: character.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)\n      }, character.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SettingsModal, {\n      open: settingsOpen,\n      onClose: handleSettingsClose,\n      settings: settings,\n      onSettingsChange: handleSettingsChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(CharacterSelectScreen, \"POop2jRje5VFYkEPj4PK4BPZx6o=\", false, function () {\n  return [useNavigate, useGame];\n});\n_c = CharacterSelectScreen;\nexport default CharacterSelectScreen;\nvar _c;\n$RefreshReg$(_c, \"CharacterSelectScreen\");","map":{"version":3,"names":["React","Box","Grid","Typography","useNavigate","useGame","SettingsIcon","SettingsModal","Button","IconButton","jsxDEV","_jsxDEV","characters","id","name","type","CharacterSelectScreen","_s","navigate","setPunctuationType","settings","setSettings","settingsOpen","setSettingsOpen","useState","handleSettingsOpen","handleSettingsClose","handleSettingsChange","newSettings","handleCharacterSelect","sx","p","textAlign","position","children","onClick","top","left","fileName","_jsxFileName","lineNumber","columnNumber","right","transition","transform","variant","mb","container","spacing","justifyContent","map","character","item","size","minWidth","open","onClose","onSettingsChange","_c","$RefreshReg$"],"sources":["/Users/benediktlehnert/Documents/GitHub/punx-app-new/src/screens/CharacterSelectScreen.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Box, Grid, Typography } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { useGame } from '../context/GameContext';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport SettingsModal from '../components/SettingsModal';\nimport { Button } from '../components/Button';\nimport { IconButton } from '@mui/material';\n\nconst characters = [\n  { id: 'period', name: 'Peri', type: 'period' },\n  { id: 'exclamation', name: 'Ex', type: 'exclamation' },\n  { id: 'question', name: 'Quest', type: 'question' },\n  { id: 'comma', name: 'Curly', type: 'comma' },\n  { id: 'shuffle', name: 'Shuffle', type: 'shuffle' }\n];\n\nconst CharacterSelectScreen = () => {\n  const navigate = useNavigate();\n  const { setPunctuationType, settings, setSettings } = useGame();\n  const [settingsOpen, setSettingsOpen] = React.useState(false);\n\n  const handleSettingsOpen = () => setSettingsOpen(true);\n  const handleSettingsClose = () => setSettingsOpen(false);\n  const handleSettingsChange = (newSettings: any) => {\n    setSettings(newSettings);\n  };\n\n  const handleCharacterSelect = (type: string) => {\n    setPunctuationType(type as any);\n    navigate('/game');\n  };\n\n  return (\n    <Box sx={{ p: 4, textAlign: 'center', position: 'relative' }}>\n      <Button \n        onClick={() => navigate('/')} \n        sx={{ position: 'absolute', top: 16, left: 16 }}\n      >\n        Back\n      </Button>\n\n      <Button \n        onClick={handleSettingsOpen}\n        sx={{ \n          position: 'absolute', \n          top: 16, \n          right: 16,\n          transition: 'all 0.3s ease',\n          '&:hover': {\n            transform: 'scale(1.1)',\n          }\n        }}\n      >\n        Settings\n      </Button>\n\n      <IconButton\n        onClick={handleSettingsOpen}\n        sx={{ \n          position: 'absolute', \n          top: 16, \n          right: 16,\n          transition: 'all 0.3s ease',\n          '&:hover': {\n            transform: 'scale(1.1)',\n          }\n        }}\n      >\n        <SettingsIcon />\n      </IconButton>\n\n      <Typography variant=\"h4\" sx={{ mb: 4 }}>\n        Choose Your Character\n      </Typography>\n\n      <Grid container spacing={3} justifyContent=\"center\">\n        {characters.map((character) => (\n          <Grid item key={character.id}>\n            <Button\n              variant=\"contained\"\n              size=\"large\"\n              onClick={() => handleCharacterSelect(character.type)}\n              sx={{ minWidth: 120 }}\n            >\n              {character.name}\n            </Button>\n          </Grid>\n        ))}\n      </Grid>\n\n      <SettingsModal\n        open={settingsOpen}\n        onClose={handleSettingsClose}\n        settings={settings}\n        onSettingsChange={handleSettingsChange}\n      />\n    </Box>\n  );\n};\n\nexport default CharacterSelectScreen; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}